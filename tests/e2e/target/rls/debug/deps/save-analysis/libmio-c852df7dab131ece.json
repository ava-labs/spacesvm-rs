{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3","program":"/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","mio","--edition=2018","/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"net\"","--cfg","feature=\"os-ext\"","--cfg","feature=\"os-poll\"","-C","metadata=c852df7dab131ece","-C","extra-filename=-c852df7dab131ece","--out-dir","/home/johnmorrisett/Documents/mini-kvvm-rs/mini-kvvm-rs/tests/e2e/target/rls/debug/deps","-L","dependency=/home/johnmorrisett/Documents/mini-kvvm-rs/mini-kvvm-rs/tests/e2e/target/rls/debug/deps","--extern","libc=/home/johnmorrisett/Documents/mini-kvvm-rs/mini-kvvm-rs/tests/e2e/target/rls/debug/deps/liblibc-4e90763dd2291129.rmeta","--extern","log=/home/johnmorrisett/Documents/mini-kvvm-rs/mini-kvvm-rs/tests/e2e/target/rls/debug/deps/liblog-4c2b941844e2fcbb.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/johnmorrisett/Documents/mini-kvvm-rs/mini-kvvm-rs/tests/e2e/target/rls/debug/deps/libmio-c852df7dab131ece.rmeta"},"prelude":{"crate_id":{"name":"mio","disambiguator":[8414556319833190433,0]},"crate_root":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src","external_crates":[{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","num":20,"id":{"name":"log","disambiguator":[14764303238413466947,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","num":21,"id":{"name":"cfg_if","disambiguator":[243630855546215384,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/selector/epoll.rs","num":22,"id":{"name":"libc","disambiguator":[7983304030901990540,0]}}],"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":0,"byte_end":9513,"line_start":1,"line_end":266,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":498},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/mod.rs","byte_start":14047112,"byte_end":14047120,"line_start":21,"line_end":21,"column_start":29,"column_end":37},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":499},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/mod.rs","byte_start":14047112,"byte_end":14047120,"line_start":21,"line_end":21,"column_start":29,"column_end":37},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":642},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/uds/mod.rs","byte_start":14078106,"byte_end":14078116,"line_start":2,"line_end":2,"column_start":27,"column_end":37},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":621}},{"kind":"Use","ref_id":{"krate":0,"index":642},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/mod.rs","byte_start":14047322,"byte_end":14047332,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":282}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/mod.rs","byte_start":45410,"byte_end":45411,"line_start":57,"line_end":57,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"Selector, tcp, pipe, event, Event, Events, SourceFd, SocketAddr, Waker, udp, uds, IoSourceState","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":996},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/mod.rs","byte_start":54089,"byte_end":54094,"line_start":8,"line_end":8,"column_start":22,"column_end":27},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":126}},{"kind":"Use","ref_id":{"krate":0,"index":168},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/mod.rs","byte_start":54119,"byte_end":54125,"line_start":9,"line_end":9,"column_start":24,"column_end":30},"alias_span":null,"name":"Events","value":"","parent":{"krate":0,"index":126}},{"kind":"Use","ref_id":{"krate":0,"index":1000},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/mod.rs","byte_start":54127,"byte_end":54131,"line_start":9,"line_end":9,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":126}},{"kind":"Use","ref_id":{"krate":0,"index":204},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/mod.rs","byte_start":54156,"byte_end":54162,"line_start":10,"line_end":10,"column_start":23,"column_end":29},"alias_span":null,"name":"Source","value":"","parent":{"krate":0,"index":126}},{"kind":"Use","ref_id":{"krate":0,"index":1155},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/mod.rs","byte_start":14122703,"byte_end":14122714,"line_start":2,"line_end":2,"column_start":25,"column_end":36},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1248},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/mod.rs","byte_start":14122751,"byte_end":14122760,"line_start":5,"line_end":5,"column_start":23,"column_end":32},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1155},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14122426,"byte_end":14122437,"line_start":29,"line_end":29,"column_start":21,"column_end":32},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":1248},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14122439,"byte_end":14122448,"line_start":29,"line_end":29,"column_start":34,"column_end":43},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":1366},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14122544,"byte_end":14122553,"line_start":34,"line_end":34,"column_start":20,"column_end":29},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":1471},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/mod.rs","byte_start":14168586,"byte_end":14168598,"line_start":2,"line_end":2,"column_start":25,"column_end":37},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":1421}},{"kind":"Use","ref_id":{"krate":0,"index":1567},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/mod.rs","byte_start":14168639,"byte_end":14168651,"line_start":5,"line_end":5,"column_start":25,"column_end":37},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":1421}},{"kind":"Use","ref_id":{"krate":0,"index":1652},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/mod.rs","byte_start":14168688,"byte_end":14168698,"line_start":8,"line_end":8,"column_start":23,"column_end":33},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":1421}},{"kind":"Use","ref_id":{"krate":0,"index":642},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/mod.rs","byte_start":14168721,"byte_end":14168731,"line_start":10,"line_end":10,"column_start":21,"column_end":31},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":1421}},{"kind":"Use","ref_id":{"krate":0,"index":642},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14122611,"byte_end":14122621,"line_start":39,"line_end":39,"column_start":21,"column_end":31},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":1471},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14122623,"byte_end":14122635,"line_start":39,"line_end":39,"column_start":33,"column_end":45},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":1567},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14122637,"byte_end":14122649,"line_start":39,"line_end":39,"column_start":47,"column_end":59},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":1652},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14122651,"byte_end":14122661,"line_start":39,"line_end":39,"column_start":61,"column_end":71},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":1090}},{"kind":"Use","ref_id":{"krate":0,"index":168},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1465,"byte_end":1471,"line_start":65,"line_end":65,"column_start":16,"column_end":22},"alias_span":null,"name":"Events","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":262},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1491,"byte_end":1499,"line_start":66,"line_end":66,"column_start":19,"column_end":27},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":78},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1516,"byte_end":1520,"line_start":67,"line_end":67,"column_start":16,"column_end":20},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":80},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1522,"byte_end":1530,"line_start":67,"line_end":67,"column_start":22,"column_end":30},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":970},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1548,"byte_end":1553,"line_start":68,"line_end":68,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":971},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1548,"byte_end":1553,"line_start":68,"line_end":68,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":992},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1602,"byte_end":1607,"line_start":70,"line_end":70,"column_start":16,"column_end":21},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":897},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1901,"byte_end":1904,"line_start":82,"line_end":82,"column_start":36,"column_end":39},"alias_span":null,"name":"new","value":"","parent":{"krate":0,"index":246}},{"kind":"Use","ref_id":{"krate":0,"index":966},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1906,"byte_end":1914,"line_start":82,"line_end":82,"column_start":41,"column_end":49},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":246}},{"kind":"Use","ref_id":{"krate":0,"index":962},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1916,"byte_end":1922,"line_start":82,"line_end":82,"column_start":51,"column_end":57},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":246}},{"kind":"Use","ref_id":{"krate":0,"index":498},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1956,"byte_end":1964,"line_start":85,"line_end":85,"column_start":25,"column_end":33},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":245}},{"kind":"Use","ref_id":{"krate":0,"index":499},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1956,"byte_end":1964,"line_start":85,"line_end":85,"column_start":25,"column_end":33},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":245}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":0,"byte_end":9513,"line_start":1,"line_end":266,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":41},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":126},{"krate":0,"index":1010},{"krate":0,"index":1090},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":245},{"krate":0,"index":260},{"krate":0,"index":261}],"decl_id":null,"docs":" Mio is a fast, low-level I/O library for Rust focusing on non-blocking APIs\n and event notification for building high performance I/O apps with as little\n overhead as possible over the OS abstractions.","sig":null,"attributes":[{"value":"deny(missing_docs, missing_debug_implementations, rust_2018_idioms,\nunused_imports, dead_code)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":0,"byte_end":120,"line_start":1,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Mio is a fast, low-level I/O library for Rust focusing on non-blocking APIs","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":307,"byte_end":386,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ and event notification for building high performance I/O apps with as little","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":387,"byte_end":467,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ overhead as possible over the OS abstractions.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":468,"byte_end":518,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":519,"byte_end":522,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":523,"byte_end":534,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":535,"byte_end":538,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Using Mio starts by creating a [`Poll`], which reads events from the OS and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":539,"byte_end":618,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ puts them into [`Events`]. You can handle I/O events from the OS with it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":619,"byte_end":696,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":697,"byte_end":700,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ For more detail, see [`Poll`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":701,"byte_end":735,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":736,"byte_end":739,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: ../mio/struct.Poll.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":740,"byte_end":777,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/ [`Events`]: ../mio/event/struct.Events.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":778,"byte_end":825,"line_start":26,"line_end":26,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":826,"byte_end":829,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":830,"byte_end":845,"line_start":28,"line_end":28,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":846,"byte_end":849,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Examples can found in the `examples` directory of the source code, or [on","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":850,"byte_end":927,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ GitHub].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":928,"byte_end":940,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":941,"byte_end":944,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [on GitHub]: https://github.com/tokio-rs/mio/tree/master/examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":945,"byte_end":1014,"line_start":33,"line_end":33,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1015,"byte_end":1018,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ## Guide","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1019,"byte_end":1031,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A getting started guide is available in the [`guide`] module.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1036,"byte_end":1101,"line_start":37,"line_end":37,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1102,"byte_end":1105,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ## Available features","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1106,"byte_end":1131,"line_start":39,"line_end":39,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1132,"byte_end":1135,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The available features are described in the [`features`] module.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1136,"byte_end":1204,"line_start":41,"line_end":41,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":262},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":11952,"byte_end":11960,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"Interest","qualname":"::interest::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Interest used in registering.","sig":null,"attributes":[{"value":"/ Interest used in registering.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":11313,"byte_end":11346,"line_start":4,"line_end":4,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":11347,"byte_end":11350,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Interest are used in [registering] [`event::Source`]s with [`Poll`], they","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":11351,"byte_end":11428,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ indicate what readiness should be monitored for. For example if a socket is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":11429,"byte_end":11508,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ registered with [readable] interests and the socket becomes writable, no","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":11509,"byte_end":11585,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ event will be returned from a call to [`poll`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":11586,"byte_end":11637,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":11638,"byte_end":11641,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [registering]: struct.Registry.html#method.register","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":11642,"byte_end":11697,"line_start":11,"line_end":11,"column_start":1,"column_end":56}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":11698,"byte_end":11746,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":11747,"byte_end":11777,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ [readable]: struct.Interest.html#associatedconstant.READABLE","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":11778,"byte_end":11842,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ [`poll`]: struct.Poll.html#method.poll","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":11843,"byte_end":11885,"line_start":15,"line_end":15,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":26},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":12489,"byte_end":12497,"line_start":38,"line_end":38,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::interest::Interest::READABLE","value":"Interest","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing readable interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing readable interests.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":12413,"byte_end":12474,"line_start":37,"line_end":37,"column_start":5,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":27},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":12648,"byte_end":12656,"line_start":41,"line_end":41,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::interest::Interest::WRITABLE","value":"Interest","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing writable interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing writable interests.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":12572,"byte_end":12633,"line_start":40,"line_end":40,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":13668,"byte_end":13671,"line_start":69,"line_end":69,"column_start":18,"column_end":21},"name":"add","qualname":"<Interest>::add","value":"pub const fn add(Self, Interest) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Add together two `Interest`.","sig":null,"attributes":[{"value":"/ Add together two `Interest`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":13217,"byte_end":13249,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":13254,"byte_end":13257,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This does the same thing as the `BitOr` implementation, but is a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":13262,"byte_end":13330,"line_start":58,"line_end":58,"column_start":5,"column_end":73}},{"value":"/ constant function.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":13335,"byte_end":13357,"line_start":59,"line_end":59,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":13362,"byte_end":13365,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":13370,"byte_end":13377,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use mio::Interest;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":13382,"byte_end":13404,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":13409,"byte_end":13412,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ const INTERESTS: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":13417,"byte_end":13492,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ # fn silent_dead_code_warning(_: Interest) { }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":13497,"byte_end":13547,"line_start":65,"line_end":65,"column_start":5,"column_end":55}},{"value":"/ # silent_dead_code_warning(INTERESTS)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":13552,"byte_end":13593,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":13598,"byte_end":13605,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":13610,"byte_end":13650,"line_start":68,"line_end":68,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":14602,"byte_end":14608,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"remove","qualname":"<Interest>::remove","value":"pub fn remove(Self, Interest) -> Option<Interest>","parent":null,"children":[],"decl_id":null,"docs":" Removes `other` `Interest` from `self`.","sig":null,"attributes":[{"value":"/ Removes `other` `Interest` from `self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":13804,"byte_end":13847,"line_start":73,"line_end":73,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":13852,"byte_end":13855,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the set would be empty after removing `other`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":13860,"byte_end":13928,"line_start":75,"line_end":75,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":13933,"byte_end":13936,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":13941,"byte_end":13948,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use mio::Interest;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":13953,"byte_end":13975,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":13980,"byte_end":13983,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ const RW_INTERESTS: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":13988,"byte_end":14066,"line_start":80,"line_end":80,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":14071,"byte_end":14074,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ // As long a one interest remain this will return `Some`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":14079,"byte_end":14140,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/ let w_interest = RW_INTERESTS.remove(Interest::READABLE).unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":14145,"byte_end":14215,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ assert!(!w_interest.is_readable());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":14220,"byte_end":14259,"line_start":84,"line_end":84,"column_start":5,"column_end":44}},{"value":"/ assert!(w_interest.is_writable());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":14264,"byte_end":14302,"line_start":85,"line_end":85,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":14307,"byte_end":14310,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ // Removing all interests from the set will return `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":14315,"byte_end":14377,"line_start":87,"line_end":87,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(w_interest.remove(Interest::WRITABLE), None);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":14382,"byte_end":14442,"line_start":88,"line_end":88,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":14447,"byte_end":14450,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ // Its also possible to remove multiple interests at once.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":14455,"byte_end":14517,"line_start":90,"line_end":90,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(RW_INTERESTS.remove(RW_INTERESTS), None);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":14522,"byte_end":14578,"line_start":91,"line_end":91,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":14583,"byte_end":14590,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":14809,"byte_end":14820,"line_start":98,"line_end":98,"column_start":18,"column_end":29},"name":"is_readable","qualname":"<Interest>::is_readable","value":"pub const fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the value includes readable readiness.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":14733,"byte_end":14791,"line_start":97,"line_end":97,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":14963,"byte_end":14974,"line_start":103,"line_end":103,"column_start":18,"column_end":29},"name":"is_writable","qualname":"<Interest>::is_writable","value":"pub const fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the value includes writable readiness.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":14887,"byte_end":14945,"line_start":102,"line_end":102,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":15112,"byte_end":15118,"line_start":108,"line_end":108,"column_start":18,"column_end":24},"name":"is_aio","qualname":"<Interest>::is_aio","value":"pub const fn is_aio(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Interest` contains AIO readiness\n","sig":null,"attributes":[{"value":"/ Returns true if `Interest` contains AIO readiness","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":15041,"byte_end":15094,"line_start":107,"line_end":107,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":15251,"byte_end":15257,"line_start":113,"line_end":113,"column_start":18,"column_end":24},"name":"is_lio","qualname":"<Interest>::is_lio","value":"pub const fn is_lio(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Interest` contains LIO readiness\n","sig":null,"attributes":[{"value":"/ Returns true if `Interest` contains LIO readiness","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":15180,"byte_end":15233,"line_start":112,"line_end":112,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":78},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":26551,"byte_end":26555,"line_start":227,"line_end":227,"column_start":12,"column_end":16},"name":"Poll","qualname":"::poll::Poll","value":"Poll {  }","parent":null,"children":[{"krate":0,"index":79}],"decl_id":null,"docs":" Polls for readiness events on all registered values.","sig":null,"attributes":[{"value":"/ Polls for readiness events on all registered values.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":16956,"byte_end":17012,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":17013,"byte_end":17016,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ `Poll` allows a program to monitor a large number of [`event::Source`]s,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":17017,"byte_end":17093,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ waiting until one or more become \"ready\" for some class of operations; e.g.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":17094,"byte_end":17173,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ reading and writing. An event source is considered ready if it is possible","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":17174,"byte_end":17252,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ to immediately perform a corresponding operation; e.g. [`read`] or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":17253,"byte_end":17323,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ [`write`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":17324,"byte_end":17338,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":17339,"byte_end":17342,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ To use `Poll`, an `event::Source` must first be registered with the `Poll`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":17343,"byte_end":17421,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ instance using the [`register`] method on its associated `Register`,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":17422,"byte_end":17494,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ supplying readiness interest. The readiness interest tells `Poll` which","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":17495,"byte_end":17570,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ specific operations on the handle to monitor for readiness. A `Token` is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":17571,"byte_end":17647,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ also passed to the [`register`] function. When `Poll` returns a readiness","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":17648,"byte_end":17725,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ event, it will include this token.  This associates the event with the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":17726,"byte_end":17800,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ event source that generated the event.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":17801,"byte_end":17843,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":17844,"byte_end":17847,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":17848,"byte_end":17896,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ [`read`]: ./net/struct.TcpStream.html#method.read","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":17897,"byte_end":17950,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/ [`write`]: ./net/struct.TcpStream.html#method.write","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":17951,"byte_end":18006,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ [`register`]: struct.Registry.html#method.register","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18007,"byte_end":18061,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18062,"byte_end":18065,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18066,"byte_end":18080,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18081,"byte_end":18084,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A basic example -- establishing a `TcpStream` connection.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18085,"byte_end":18146,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18147,"byte_end":18150,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18298,"byte_end":18326,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18327,"byte_end":18374,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18375,"byte_end":18420,"line_start":37,"line_end":37,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18421,"byte_end":18449,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18450,"byte_end":18453,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ use std::net::{self, SocketAddr};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18454,"byte_end":18491,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18492,"byte_end":18495,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Bind a server socket to connect to.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18496,"byte_end":18538,"line_start":42,"line_end":42,"column_start":1,"column_end":43}},{"value":"/ let addr: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18539,"byte_end":18589,"line_start":43,"line_end":43,"column_start":1,"column_end":51}},{"value":"/ let server = net::TcpListener::bind(addr)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18590,"byte_end":18637,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18638,"byte_end":18641,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // Construct a new `Poll` handle as well as the `Events` we'll store into","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18642,"byte_end":18719,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18720,"byte_end":18752,"line_start":47,"line_end":47,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18753,"byte_end":18802,"line_start":48,"line_end":48,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18803,"byte_end":18806,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Connect the stream","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18807,"byte_end":18832,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ let mut stream = TcpStream::connect(server.local_addr()?)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18833,"byte_end":18896,"line_start":51,"line_end":51,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18897,"byte_end":18900,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Register the stream with `Poll`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18901,"byte_end":18939,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut stream, Token(0), Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":18940,"byte_end":19034,"line_start":54,"line_end":54,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19035,"byte_end":19038,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Wait for the socket to become ready. This has to happens in a loop to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19039,"byte_end":19115,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/ // handle spurious wakeups.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19116,"byte_end":19147,"line_start":57,"line_end":57,"column_start":1,"column_end":32}},{"value":"/ loop {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19148,"byte_end":19158,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19159,"byte_end":19197,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19198,"byte_end":19201,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/     for event in &events {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19202,"byte_end":19232,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/         if event.token() == Token(0) && event.is_writable() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19233,"byte_end":19298,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/             // The socket connected (probably, it could still be a spurious","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19299,"byte_end":19378,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/             // wakeup)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19379,"byte_end":19405,"line_start":64,"line_end":64,"column_start":1,"column_end":27}},{"value":"/             return Ok(());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19406,"byte_end":19436,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19437,"byte_end":19450,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19451,"byte_end":19460,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19461,"byte_end":19466,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19467,"byte_end":19474,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19475,"byte_end":19482,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19483,"byte_end":19486,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Portability","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19487,"byte_end":19504,"line_start":72,"line_end":72,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19505,"byte_end":19508,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Using `Poll` provides a portable interface across supported platforms as","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19509,"byte_end":19585,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ long as the caller takes the following into consideration:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19586,"byte_end":19648,"line_start":75,"line_end":75,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19649,"byte_end":19652,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ### Spurious events","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19653,"byte_end":19676,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19677,"byte_end":19680,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`] may return readiness events even if the associated","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19681,"byte_end":19750,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/ event source is not actually ready. Given the same code, this may","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19751,"byte_end":19820,"line_start":80,"line_end":80,"column_start":1,"column_end":70}},{"value":"/ happen more on some platforms than others. It is important to never assume","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19821,"byte_end":19899,"line_start":81,"line_end":81,"column_start":1,"column_end":79}},{"value":"/ that, just because a readiness event was received, that the associated","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19900,"byte_end":19974,"line_start":82,"line_end":82,"column_start":1,"column_end":75}},{"value":"/ operation will succeed as well.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":19975,"byte_end":20010,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":20011,"byte_end":20014,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ If operation fails with [`WouldBlock`], then the caller should not treat","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":20015,"byte_end":20091,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"/ this as an error, but instead should wait until another readiness event is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":20092,"byte_end":20170,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"/ received.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":20171,"byte_end":20184,"line_start":87,"line_end":87,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":20185,"byte_end":20188,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ### Draining readiness","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":20189,"byte_end":20215,"line_start":89,"line_end":89,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":20216,"byte_end":20219,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Once a readiness event is received, the corresponding operation must be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":20220,"byte_end":20295,"line_start":91,"line_end":91,"column_start":1,"column_end":76}},{"value":"/ performed repeatedly until it returns [`WouldBlock`]. Unless this is done,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":20296,"byte_end":20374,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ there is no guarantee that another readiness event will be delivered, even","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":20375,"byte_end":20453,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ if further data is received for the event source.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":20454,"byte_end":20507,"line_start":94,"line_end":94,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":20508,"byte_end":20511,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":20512,"byte_end":20562,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":20563,"byte_end":20566,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ### Readiness operations","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":20567,"byte_end":20595,"line_start":98,"line_end":98,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":20596,"byte_end":20599,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The only readiness operations that are guaranteed to be present on all","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":20600,"byte_end":20674,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ supported platforms are [`readable`] and [`writable`]. All other readiness","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":20675,"byte_end":20753,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/ operations may have false negatives and as such should be considered","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":20754,"byte_end":20826,"line_start":102,"line_end":102,"column_start":1,"column_end":73}},{"value":"/ **hints**. This means that if a socket is registered with [`readable`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":20827,"byte_end":20901,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"/ interest and either an error or close is received, a readiness event will","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":20902,"byte_end":20979,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/ be generated for the socket, but it **may** only include `readable`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":20980,"byte_end":21051,"line_start":105,"line_end":105,"column_start":1,"column_end":72}},{"value":"/ readiness. Also note that, given the potential for spurious events,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":21052,"byte_end":21123,"line_start":106,"line_end":106,"column_start":1,"column_end":72}},{"value":"/ receiving a readiness event with `read_closed`, `write_closed`, or `error`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":21124,"byte_end":21202,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ doesn't actually mean that a `read` on the socket will return a result","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":21203,"byte_end":21277,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ matching the readiness event.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":21278,"byte_end":21311,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":21312,"byte_end":21315,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ In other words, portable programs that explicitly check for [`read_closed`],","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":21316,"byte_end":21396,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/ [`write_closed`], or [`error`] readiness should be doing so as an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":21397,"byte_end":21466,"line_start":112,"line_end":112,"column_start":1,"column_end":70}},{"value":"/ **optimization** and always be able to handle an error or close situation","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":21467,"byte_end":21544,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/ when performing the actual read operation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":21545,"byte_end":21591,"line_start":114,"line_end":114,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":21592,"byte_end":21595,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ [`readable`]: ./event/struct.Event.html#method.is_readable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":21596,"byte_end":21658,"line_start":116,"line_end":116,"column_start":1,"column_end":63}},{"value":"/ [`writable`]: ./event/struct.Event.html#method.is_writable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":21659,"byte_end":21721,"line_start":117,"line_end":117,"column_start":1,"column_end":63}},{"value":"/ [`error`]: ./event/struct.Event.html#method.is_error","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":21722,"byte_end":21778,"line_start":118,"line_end":118,"column_start":1,"column_end":57}},{"value":"/ [`read_closed`]: ./event/struct.Event.html#method.is_read_closed","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":21779,"byte_end":21847,"line_start":119,"line_end":119,"column_start":1,"column_end":69}},{"value":"/ [`write_closed`]: ./event/struct.Event.html#method.is_write_closed","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":21848,"byte_end":21918,"line_start":120,"line_end":120,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":21919,"byte_end":21922,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ### Registering handles","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":21923,"byte_end":21950,"line_start":122,"line_end":122,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":21951,"byte_end":21954,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Unless otherwise noted, it should be assumed that types implementing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":21955,"byte_end":22027,"line_start":124,"line_end":124,"column_start":1,"column_end":73}},{"value":"/ [`event::Source`] will never become ready unless they are registered with","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22028,"byte_end":22105,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ `Poll`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22106,"byte_end":22117,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22118,"byte_end":22121,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22122,"byte_end":22138,"line_start":128,"line_end":128,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22139,"byte_end":22142,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22290,"byte_end":22318,"line_start":132,"line_end":132,"column_start":1,"column_end":29}},{"value":"/ # use std::net;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22319,"byte_end":22338,"line_start":133,"line_end":133,"column_start":1,"column_end":20}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22339,"byte_end":22386,"line_start":134,"line_end":134,"column_start":1,"column_end":48}},{"value":"/ use mio::{Poll, Interest, Token};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22387,"byte_end":22424,"line_start":135,"line_end":135,"column_start":1,"column_end":38}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22425,"byte_end":22453,"line_start":136,"line_end":136,"column_start":1,"column_end":29}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22454,"byte_end":22483,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22484,"byte_end":22512,"line_start":138,"line_end":138,"column_start":1,"column_end":29}},{"value":"/ use std::thread;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22513,"byte_end":22533,"line_start":139,"line_end":139,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22534,"byte_end":22537,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22538,"byte_end":22591,"line_start":141,"line_end":141,"column_start":1,"column_end":54}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22592,"byte_end":22644,"line_start":142,"line_end":142,"column_start":1,"column_end":53}},{"value":"/ let mut sock = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22645,"byte_end":22708,"line_start":143,"line_end":143,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22709,"byte_end":22712,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ thread::sleep(Duration::from_secs(1));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22713,"byte_end":22755,"line_start":145,"line_end":145,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22756,"byte_end":22759,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22760,"byte_end":22788,"line_start":147,"line_end":147,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22789,"byte_end":22792,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ // The connect is not guaranteed to have started until it is registered at","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22793,"byte_end":22871,"line_start":149,"line_end":149,"column_start":1,"column_end":79}},{"value":"/ // this point","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22872,"byte_end":22889,"line_start":150,"line_end":150,"column_start":1,"column_end":18}},{"value":"/ poll.registry().register(&mut sock, Token(0), Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22890,"byte_end":22982,"line_start":151,"line_end":151,"column_start":1,"column_end":93}},{"value":"/ #     Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":22983,"byte_end":22999,"line_start":152,"line_end":152,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":23000,"byte_end":23007,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":23008,"byte_end":23015,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":23016,"byte_end":23019,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ ### Dropping `Poll`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":23020,"byte_end":23043,"line_start":156,"line_end":156,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":23044,"byte_end":23047,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ When the `Poll` instance is dropped it may cancel in-flight operations for","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":23048,"byte_end":23126,"line_start":158,"line_end":158,"column_start":1,"column_end":79}},{"value":"/ the registered [event sources], meaning that no further events for them may","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":23127,"byte_end":23206,"line_start":159,"line_end":159,"column_start":1,"column_end":80}},{"value":"/ be received. It also means operations on the registered event sources may no","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":23207,"byte_end":23287,"line_start":160,"line_end":160,"column_start":1,"column_end":81}},{"value":"/ longer work. It is up to the user to keep the `Poll` instance alive while","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":23288,"byte_end":23365,"line_start":161,"line_end":161,"column_start":1,"column_end":78}},{"value":"/ registered event sources are being used.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":23366,"byte_end":23410,"line_start":162,"line_end":162,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":23411,"byte_end":23414,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ [event sources]: ./event/trait.Source.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":23415,"byte_end":23461,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":23462,"byte_end":23465,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ### Accessing raw fd/socket/handle","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":23466,"byte_end":23504,"line_start":166,"line_end":166,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":23505,"byte_end":23508,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Mio makes it possible for many types to be converted into a raw file","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":23509,"byte_end":23581,"line_start":168,"line_end":168,"column_start":1,"column_end":73}},{"value":"/ descriptor (fd, Unix), socket (Windows) or handle (Windows). This makes it","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":23582,"byte_end":23660,"line_start":169,"line_end":169,"column_start":1,"column_end":79}},{"value":"/ possible to support more operations on the type than Mio supports, for","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":23661,"byte_end":23735,"line_start":170,"line_end":170,"column_start":1,"column_end":75}},{"value":"/ example it makes [mio-aio] possible. However accessing the raw fd is not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":23736,"byte_end":23812,"line_start":171,"line_end":171,"column_start":1,"column_end":77}},{"value":"/ without it's pitfalls.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":23813,"byte_end":23839,"line_start":172,"line_end":172,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":23840,"byte_end":23843,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ Specifically performing I/O operations outside of Mio on these types (via","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":23844,"byte_end":23921,"line_start":174,"line_end":174,"column_start":1,"column_end":78}},{"value":"/ the raw fd) has unspecified behaviour. It could cause no more events to be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":23922,"byte_end":24000,"line_start":175,"line_end":175,"column_start":1,"column_end":79}},{"value":"/ generated for the type even though it returned `WouldBlock` (in an operation","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":24001,"byte_end":24081,"line_start":176,"line_end":176,"column_start":1,"column_end":81}},{"value":"/ directly accessing the fd). The behaviour is OS specific and Mio can only","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":24082,"byte_end":24159,"line_start":177,"line_end":177,"column_start":1,"column_end":78}},{"value":"/ guarantee cross-platform behaviour if it can control the I/O.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":24160,"byte_end":24225,"line_start":178,"line_end":178,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":24226,"byte_end":24229,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ [mio-aio]: https://github.com/asomers/mio-aio","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":24230,"byte_end":24279,"line_start":180,"line_end":180,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":24280,"byte_end":24283,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ *The following is **not** guaranteed, just a description of the current","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":24284,"byte_end":24359,"line_start":182,"line_end":182,"column_start":1,"column_end":76}},{"value":"/ situation!* Mio is allowed to change the following without it being considered","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":24360,"byte_end":24442,"line_start":183,"line_end":183,"column_start":1,"column_end":83}},{"value":"/ a breaking change, don't depend on this, it's just here to inform the user.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":24443,"byte_end":24522,"line_start":184,"line_end":184,"column_start":1,"column_end":80}},{"value":"/ Currently the kqueue and epoll implementation support direct I/O operations","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":24523,"byte_end":24602,"line_start":185,"line_end":185,"column_start":1,"column_end":80}},{"value":"/ on the fd without Mio's knowledge. Windows however needs **all** I/O","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":24603,"byte_end":24675,"line_start":186,"line_end":186,"column_start":1,"column_end":73}},{"value":"/ operations to go through Mio otherwise it is not able to update it's","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":24676,"byte_end":24748,"line_start":187,"line_end":187,"column_start":1,"column_end":73}},{"value":"/ internal state properly and won't generate events.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":24749,"byte_end":24803,"line_start":188,"line_end":188,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":24804,"byte_end":24807,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":24808,"byte_end":24834,"line_start":190,"line_end":190,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":24835,"byte_end":24838,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ `Poll` is backed by the selector provided by the operating system.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":24839,"byte_end":24909,"line_start":192,"line_end":192,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":24910,"byte_end":24913,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ |      OS       |  Selector |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":24914,"byte_end":24947,"line_start":194,"line_end":194,"column_start":1,"column_end":34}},{"value":"/ |---------------|-----------|","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":24948,"byte_end":24981,"line_start":195,"line_end":195,"column_start":1,"column_end":34}},{"value":"/ | Android       | [epoll]   |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":24982,"byte_end":25015,"line_start":196,"line_end":196,"column_start":1,"column_end":34}},{"value":"/ | DragonFly BSD | [kqueue]  |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":25016,"byte_end":25049,"line_start":197,"line_end":197,"column_start":1,"column_end":34}},{"value":"/ | FreeBSD       | [kqueue]  |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":25050,"byte_end":25083,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/ | iOS           | [kqueue]  |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":25084,"byte_end":25117,"line_start":199,"line_end":199,"column_start":1,"column_end":34}},{"value":"/ | illumos       | [epoll]   |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":25118,"byte_end":25151,"line_start":200,"line_end":200,"column_start":1,"column_end":34}},{"value":"/ | Linux         | [epoll]   |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":25152,"byte_end":25185,"line_start":201,"line_end":201,"column_start":1,"column_end":34}},{"value":"/ | NetBSD        | [kqueue]  |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":25186,"byte_end":25219,"line_start":202,"line_end":202,"column_start":1,"column_end":34}},{"value":"/ | OpenBSD       | [kqueue]  |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":25220,"byte_end":25253,"line_start":203,"line_end":203,"column_start":1,"column_end":34}},{"value":"/ | Windows       | [IOCP]    |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":25254,"byte_end":25287,"line_start":204,"line_end":204,"column_start":1,"column_end":34}},{"value":"/ | macOS         | [kqueue]  |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":25288,"byte_end":25321,"line_start":205,"line_end":205,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":25322,"byte_end":25325,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ On all supported platforms, socket operations are handled by using the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":25326,"byte_end":25400,"line_start":207,"line_end":207,"column_start":1,"column_end":75}},{"value":"/ system selector. Platform specific extensions (e.g. [`SourceFd`]) allow","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":25401,"byte_end":25476,"line_start":208,"line_end":208,"column_start":1,"column_end":76}},{"value":"/ accessing other features provided by individual system selectors. For","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":25477,"byte_end":25550,"line_start":209,"line_end":209,"column_start":1,"column_end":74}},{"value":"/ example, Linux's [`signalfd`] feature can be used by registering the FD with","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":25551,"byte_end":25631,"line_start":210,"line_end":210,"column_start":1,"column_end":81}},{"value":"/ `Poll` via [`SourceFd`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":25632,"byte_end":25660,"line_start":211,"line_end":211,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":25661,"byte_end":25664,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ On all platforms except windows, a call to [`Poll::poll`] is mostly just a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":25665,"byte_end":25743,"line_start":213,"line_end":213,"column_start":1,"column_end":79}},{"value":"/ direct call to the system selector. However, [IOCP] uses a completion model","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":25744,"byte_end":25823,"line_start":214,"line_end":214,"column_start":1,"column_end":80}},{"value":"/ instead of a readiness model. In this case, `Poll` must adapt the completion","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":25824,"byte_end":25904,"line_start":215,"line_end":215,"column_start":1,"column_end":81}},{"value":"/ model Mio's API. While non-trivial, the bridge layer is still quite","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":25905,"byte_end":25976,"line_start":216,"line_end":216,"column_start":1,"column_end":72}},{"value":"/ efficient. The most expensive part being calls to `read` and `write` require","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":25977,"byte_end":26057,"line_start":217,"line_end":217,"column_start":1,"column_end":81}},{"value":"/ data to be copied into an intermediate buffer before it is passed to the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":26058,"byte_end":26134,"line_start":218,"line_end":218,"column_start":1,"column_end":77}},{"value":"/ kernel.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":26135,"byte_end":26146,"line_start":219,"line_end":219,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":26147,"byte_end":26150,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":26151,"byte_end":26214,"line_start":221,"line_end":221,"column_start":1,"column_end":64}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":26215,"byte_end":26287,"line_start":222,"line_end":222,"column_start":1,"column_end":73}},{"value":"/ [IOCP]: https://docs.microsoft.com/en-us/windows/win32/fileio/i-o-completion-ports","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":26288,"byte_end":26374,"line_start":223,"line_end":223,"column_start":1,"column_end":87}},{"value":"/ [`signalfd`]: https://man7.org/linux/man-pages/man2/signalfd.2.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":26375,"byte_end":26446,"line_start":224,"line_end":224,"column_start":1,"column_end":72}},{"value":"/ [`SourceFd`]: unix/struct.SourceFd.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":26447,"byte_end":26490,"line_start":225,"line_end":225,"column_start":1,"column_end":44}},{"value":"/ [`Poll::poll`]: struct.Poll.html#method.poll","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":26491,"byte_end":26539,"line_start":226,"line_end":226,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":80},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":26625,"byte_end":26633,"line_start":232,"line_end":232,"column_start":12,"column_end":20},"name":"Registry","qualname":"::poll::Registry","value":"Registry {  }","parent":null,"children":[{"krate":0,"index":81}],"decl_id":null,"docs":" Registers I/O resources.\n","sig":null,"attributes":[{"value":"/ Registers I/O resources.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":26585,"byte_end":26613,"line_start":231,"line_end":231,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":27948,"byte_end":27951,"line_start":271,"line_end":271,"column_start":16,"column_end":19},"name":"new","qualname":"<Poll>::new","value":"pub fn new() -> io::Result<Poll>","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Poll` handle.","sig":null,"attributes":[{"value":"cfg(feature = \"os-poll\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/macros.rs","byte_start":9773,"byte_end":9800,"line_start":10,"line_end":10,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":28216,"byte_end":28224,"line_start":280,"line_end":280,"column_start":12,"column_end":20},"name":"registry","qualname":"<Poll>::registry","value":"pub fn registry(&Self) -> &Registry","parent":null,"children":[],"decl_id":null,"docs":" Create a separate `Registry` which can be used to register\n `event::Source`s.\n","sig":null,"attributes":[{"value":"/ Create a separate `Registry` which can be used to register","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":28116,"byte_end":28178,"line_start":278,"line_end":278,"column_start":5,"column_end":67}},{"value":"/ `event::Source`s.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":28183,"byte_end":28204,"line_start":279,"line_end":279,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32144,"byte_end":32148,"line_start":377,"line_end":377,"column_start":12,"column_end":16},"name":"poll","qualname":"<Poll>::poll","value":"pub fn poll(&mut Self, &mut Events, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wait for readiness events","sig":null,"attributes":[{"value":"/ Wait for readiness events","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":28281,"byte_end":28310,"line_start":284,"line_end":284,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":28315,"byte_end":28318,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Blocks the current thread and waits for readiness events for any of the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":28323,"byte_end":28398,"line_start":286,"line_end":286,"column_start":5,"column_end":80}},{"value":"/ [`event::Source`]s that have been registered with this `Poll` instance.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":28403,"byte_end":28478,"line_start":287,"line_end":287,"column_start":5,"column_end":80}},{"value":"/ The function will block until either at least one readiness event has","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":28483,"byte_end":28556,"line_start":288,"line_end":288,"column_start":5,"column_end":78}},{"value":"/ been received or `timeout` has elapsed. A `timeout` of `None` means that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":28561,"byte_end":28637,"line_start":289,"line_end":289,"column_start":5,"column_end":81}},{"value":"/ `poll` will block until a readiness event has been received.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":28642,"byte_end":28706,"line_start":290,"line_end":290,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":28711,"byte_end":28714,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ The supplied `events` will be cleared and newly received readiness events","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":28719,"byte_end":28796,"line_start":292,"line_end":292,"column_start":5,"column_end":82}},{"value":"/ will be pushed onto the end. At most `events.capacity()` events will be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":28801,"byte_end":28876,"line_start":293,"line_end":293,"column_start":5,"column_end":80}},{"value":"/ returned. If there are further pending readiness events, they will be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":28881,"byte_end":28954,"line_start":294,"line_end":294,"column_start":5,"column_end":78}},{"value":"/ returned on the next call to `poll`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":28959,"byte_end":28999,"line_start":295,"line_end":295,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":29004,"byte_end":29007,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ A single call to `poll` may result in multiple readiness events being","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":29012,"byte_end":29085,"line_start":297,"line_end":297,"column_start":5,"column_end":78}},{"value":"/ returned for a single event source. For example, if a TCP socket becomes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":29090,"byte_end":29166,"line_start":298,"line_end":298,"column_start":5,"column_end":81}},{"value":"/ both readable and writable, it may be possible for a single readiness","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":29171,"byte_end":29244,"line_start":299,"line_end":299,"column_start":5,"column_end":78}},{"value":"/ event to be returned with both [`readable`] and [`writable`] readiness","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":29249,"byte_end":29323,"line_start":300,"line_end":300,"column_start":5,"column_end":79}},{"value":"/ **OR** two separate events may be returned, one with [`readable`] set","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":29328,"byte_end":29401,"line_start":301,"line_end":301,"column_start":5,"column_end":78}},{"value":"/ and one with [`writable`] set.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":29406,"byte_end":29440,"line_start":302,"line_end":302,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":29445,"byte_end":29448,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Note that the `timeout` will be rounded up to the system clock","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":29453,"byte_end":29519,"line_start":304,"line_end":304,"column_start":5,"column_end":71}},{"value":"/ granularity (usually 1ms), and kernel scheduling delays mean that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":29524,"byte_end":29593,"line_start":305,"line_end":305,"column_start":5,"column_end":74}},{"value":"/ the blocking interval may be overrun by a small amount.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":29598,"byte_end":29657,"line_start":306,"line_end":306,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":29662,"byte_end":29665,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ See the [struct] level documentation for a higher level discussion of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":29670,"byte_end":29743,"line_start":308,"line_end":308,"column_start":5,"column_end":78}},{"value":"/ polling.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":29748,"byte_end":29760,"line_start":309,"line_end":309,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":29765,"byte_end":29768,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":29773,"byte_end":29821,"line_start":311,"line_end":311,"column_start":5,"column_end":53}},{"value":"/ [`readable`]: struct.Interest.html#associatedconstant.READABLE","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":29826,"byte_end":29892,"line_start":312,"line_end":312,"column_start":5,"column_end":71}},{"value":"/ [`writable`]: struct.Interest.html#associatedconstant.WRITABLE","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":29897,"byte_end":29963,"line_start":313,"line_end":313,"column_start":5,"column_end":71}},{"value":"/ [struct]: struct.Poll.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":29968,"byte_end":29998,"line_start":314,"line_end":314,"column_start":5,"column_end":35}},{"value":"/ [`iter`]: ./event/struct.Events.html#method.iter","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30003,"byte_end":30055,"line_start":315,"line_end":315,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30060,"byte_end":30063,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30068,"byte_end":30079,"line_start":317,"line_end":317,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30084,"byte_end":30087,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This returns any errors without attempting to retry, previous versions","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30092,"byte_end":30166,"line_start":319,"line_end":319,"column_start":5,"column_end":79}},{"value":"/ of Mio would automatically retry the poll call if it was interrupted","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30171,"byte_end":30243,"line_start":320,"line_end":320,"column_start":5,"column_end":77}},{"value":"/ (if `EINTR` was returned).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30248,"byte_end":30278,"line_start":321,"line_end":321,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30283,"byte_end":30286,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30291,"byte_end":30305,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30310,"byte_end":30313,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ A basic example -- establishing a `TcpStream` connection.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30318,"byte_end":30379,"line_start":325,"line_end":325,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30384,"byte_end":30387,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30547,"byte_end":30575,"line_start":329,"line_end":329,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30580,"byte_end":30627,"line_start":330,"line_end":330,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30632,"byte_end":30677,"line_start":331,"line_end":331,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30682,"byte_end":30710,"line_start":332,"line_end":332,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30715,"byte_end":30718,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ use std::net::{TcpListener, SocketAddr};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30723,"byte_end":30767,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30772,"byte_end":30792,"line_start":335,"line_end":335,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30797,"byte_end":30800,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ // Bind a server socket to connect to.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30805,"byte_end":30847,"line_start":337,"line_end":337,"column_start":5,"column_end":47}},{"value":"/ let addr: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30852,"byte_end":30902,"line_start":338,"line_end":338,"column_start":5,"column_end":55}},{"value":"/ let server = TcpListener::bind(addr)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30907,"byte_end":30949,"line_start":339,"line_end":339,"column_start":5,"column_end":47}},{"value":"/ let addr = server.local_addr()?.clone();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":30954,"byte_end":30998,"line_start":340,"line_end":340,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31003,"byte_end":31006,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ // Spawn a thread to accept the socket","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31011,"byte_end":31053,"line_start":342,"line_end":342,"column_start":5,"column_end":47}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31058,"byte_end":31085,"line_start":343,"line_end":343,"column_start":5,"column_end":32}},{"value":"/     let _ = server.accept();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31090,"byte_end":31122,"line_start":344,"line_end":344,"column_start":5,"column_end":37}},{"value":"/ });","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31127,"byte_end":31134,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31139,"byte_end":31142,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ // Construct a new `Poll` handle as well as the `Events` we'll store into","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31147,"byte_end":31224,"line_start":347,"line_end":347,"column_start":5,"column_end":82}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31229,"byte_end":31261,"line_start":348,"line_end":348,"column_start":5,"column_end":37}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31266,"byte_end":31315,"line_start":349,"line_end":349,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31320,"byte_end":31323,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ // Connect the stream","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31328,"byte_end":31353,"line_start":351,"line_end":351,"column_start":5,"column_end":30}},{"value":"/ let mut stream = TcpStream::connect(addr)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31358,"byte_end":31405,"line_start":352,"line_end":352,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31410,"byte_end":31413,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ // Register the stream with `Poll`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31418,"byte_end":31456,"line_start":354,"line_end":354,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31461,"byte_end":31490,"line_start":355,"line_end":355,"column_start":5,"column_end":34}},{"value":"/     &mut stream,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31495,"byte_end":31515,"line_start":356,"line_end":356,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31520,"byte_end":31537,"line_start":357,"line_end":357,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31542,"byte_end":31592,"line_start":358,"line_end":358,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31597,"byte_end":31600,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ // Wait for the socket to become ready. This has to happens in a loop to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31605,"byte_end":31681,"line_start":360,"line_end":360,"column_start":5,"column_end":81}},{"value":"/ // handle spurious wakeups.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31686,"byte_end":31717,"line_start":361,"line_end":361,"column_start":5,"column_end":36}},{"value":"/ loop {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31722,"byte_end":31732,"line_start":362,"line_end":362,"column_start":5,"column_end":15}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31737,"byte_end":31775,"line_start":363,"line_end":363,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31780,"byte_end":31783,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/     for event in &events {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31788,"byte_end":31818,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/         if event.token() == Token(0) && event.is_writable() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31823,"byte_end":31888,"line_start":366,"line_end":366,"column_start":5,"column_end":70}},{"value":"/             // The socket connected (probably, it could still be a spurious","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31893,"byte_end":31972,"line_start":367,"line_end":367,"column_start":5,"column_end":84}},{"value":"/             // wakeup)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":31977,"byte_end":32003,"line_start":368,"line_end":368,"column_start":5,"column_end":31}},{"value":"/             return Ok(());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32008,"byte_end":32038,"line_start":369,"line_end":369,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32043,"byte_end":32056,"line_start":370,"line_end":370,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32061,"byte_end":32070,"line_start":371,"line_end":371,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32075,"byte_end":32080,"line_start":372,"line_end":372,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32085,"byte_end":32092,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32097,"byte_end":32104,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32109,"byte_end":32112,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ [struct]: #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32117,"byte_end":32132,"line_start":376,"line_end":376,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36572,"byte_end":36580,"line_start":495,"line_end":495,"column_start":12,"column_end":20},"name":"register","qualname":"<Registry>::register","value":"pub fn register<S>(&Self, &mut S, Token, Interest) -> io::Result<()> where\nS: event::Source + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Register an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Register an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32576,"byte_end":32635,"line_start":396,"line_end":396,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32640,"byte_end":32643,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Once registered, the `Poll` instance will monitor the event source for","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32648,"byte_end":32722,"line_start":398,"line_end":398,"column_start":5,"column_end":79}},{"value":"/ readiness state changes. When it notices a state change, it will return","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32727,"byte_end":32802,"line_start":399,"line_end":399,"column_start":5,"column_end":80}},{"value":"/ a readiness event for the handle the next time [`poll`] is called.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32807,"byte_end":32877,"line_start":400,"line_end":400,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32882,"byte_end":32885,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ See [`Poll`] docs for a high level overview.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32890,"byte_end":32938,"line_start":402,"line_end":402,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32943,"byte_end":32946,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32951,"byte_end":32966,"line_start":404,"line_end":404,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32971,"byte_end":32974,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ `source: &mut S: event::Source`: This is the source of events that the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32979,"byte_end":33053,"line_start":406,"line_end":406,"column_start":5,"column_end":79}},{"value":"/ `Poll` instance should monitor for readiness state changes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":33058,"byte_end":33121,"line_start":407,"line_end":407,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":33126,"byte_end":33129,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ `token: Token`: The caller picks a token to associate with the socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":33134,"byte_end":33208,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/ When [`poll`] returns an event for the handle, this token is included.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":33213,"byte_end":33287,"line_start":410,"line_end":410,"column_start":5,"column_end":79}},{"value":"/ This allows the caller to map the event to its source. The token","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":33292,"byte_end":33360,"line_start":411,"line_end":411,"column_start":5,"column_end":73}},{"value":"/ associated with the `event::Source` can be changed at any time by","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":33365,"byte_end":33434,"line_start":412,"line_end":412,"column_start":5,"column_end":74}},{"value":"/ calling [`reregister`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":33439,"byte_end":33466,"line_start":413,"line_end":413,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":33471,"byte_end":33474,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ See documentation on [`Token`] for an example showing how to pick","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":33479,"byte_end":33548,"line_start":415,"line_end":415,"column_start":5,"column_end":74}},{"value":"/ [`Token`] values.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":33553,"byte_end":33574,"line_start":416,"line_end":416,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":33579,"byte_end":33582,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ `interest: Interest`: Specifies which operations `Poll` should monitor","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":33587,"byte_end":33661,"line_start":418,"line_end":418,"column_start":5,"column_end":79}},{"value":"/ for readiness. `Poll` will only return readiness events for operations","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":33666,"byte_end":33740,"line_start":419,"line_end":419,"column_start":5,"column_end":79}},{"value":"/ specified by this argument.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":33745,"byte_end":33776,"line_start":420,"line_end":420,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":33781,"byte_end":33784,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ If a socket is registered with readable interest and the socket becomes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":33789,"byte_end":33864,"line_start":422,"line_end":422,"column_start":5,"column_end":80}},{"value":"/ writable, no event will be returned from [`poll`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":33869,"byte_end":33923,"line_start":423,"line_end":423,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":33928,"byte_end":33931,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ The readiness interest for an `event::Source` can be changed at any time","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":33936,"byte_end":34012,"line_start":425,"line_end":425,"column_start":5,"column_end":81}},{"value":"/ by calling [`reregister`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":34017,"byte_end":34047,"line_start":426,"line_end":426,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":34052,"byte_end":34055,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":34060,"byte_end":34071,"line_start":428,"line_end":428,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":34076,"byte_end":34079,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Callers must ensure that if a source being registered with a `Poll`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":34084,"byte_end":34155,"line_start":430,"line_end":430,"column_start":5,"column_end":76}},{"value":"/ instance was previously registered with that `Poll` instance, then a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":34160,"byte_end":34232,"line_start":431,"line_end":431,"column_start":5,"column_end":77}},{"value":"/ call to [`deregister`] has already occurred. Consecutive calls to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":34237,"byte_end":34306,"line_start":432,"line_end":432,"column_start":5,"column_end":74}},{"value":"/ `register` is unspecified behavior.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":34311,"byte_end":34350,"line_start":433,"line_end":433,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":34355,"byte_end":34358,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ Unless otherwise specified, the caller should assume that once an event","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":34363,"byte_end":34438,"line_start":435,"line_end":435,"column_start":5,"column_end":80}},{"value":"/ source is registered with a `Poll` instance, it is bound to that `Poll`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":34443,"byte_end":34518,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/ instance for the lifetime of the event source. This remains true even","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":34523,"byte_end":34596,"line_start":437,"line_end":437,"column_start":5,"column_end":78}},{"value":"/ if the event source is deregistered from the poll instance using","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":34601,"byte_end":34669,"line_start":438,"line_end":438,"column_start":5,"column_end":73}},{"value":"/ [`deregister`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":34674,"byte_end":34693,"line_start":439,"line_end":439,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":34698,"byte_end":34701,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":34706,"byte_end":34754,"line_start":441,"line_end":441,"column_start":5,"column_end":53}},{"value":"/ [`poll`]: struct.Poll.html#method.poll","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":34759,"byte_end":34801,"line_start":442,"line_end":442,"column_start":5,"column_end":47}},{"value":"/ [`reregister`]: struct.Registry.html#method.reregister","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":34806,"byte_end":34864,"line_start":443,"line_end":443,"column_start":5,"column_end":63}},{"value":"/ [`deregister`]: struct.Registry.html#method.deregister","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":34869,"byte_end":34927,"line_start":444,"line_end":444,"column_start":5,"column_end":63}},{"value":"/ [`Token`]: struct.Token.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":34932,"byte_end":34964,"line_start":445,"line_end":445,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":34969,"byte_end":34972,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":34977,"byte_end":34991,"line_start":447,"line_end":447,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":34996,"byte_end":34999,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":35159,"byte_end":35187,"line_start":451,"line_end":451,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":35192,"byte_end":35211,"line_start":452,"line_end":452,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":35216,"byte_end":35263,"line_start":453,"line_end":453,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":35268,"byte_end":35313,"line_start":454,"line_end":454,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":35318,"byte_end":35346,"line_start":455,"line_end":455,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":35351,"byte_end":35380,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":35385,"byte_end":35424,"line_start":457,"line_end":457,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":35429,"byte_end":35432,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":35437,"byte_end":35469,"line_start":459,"line_end":459,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":35474,"byte_end":35477,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":35482,"byte_end":35535,"line_start":461,"line_end":461,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":35540,"byte_end":35592,"line_start":462,"line_end":462,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":35597,"byte_end":35662,"line_start":463,"line_end":463,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":35667,"byte_end":35670,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":35675,"byte_end":35713,"line_start":465,"line_end":465,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":35718,"byte_end":35747,"line_start":466,"line_end":466,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":35752,"byte_end":35772,"line_start":467,"line_end":467,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":35777,"byte_end":35794,"line_start":468,"line_end":468,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":35799,"byte_end":35849,"line_start":469,"line_end":469,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":35854,"byte_end":35857,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":35862,"byte_end":35911,"line_start":471,"line_end":471,"column_start":5,"column_end":54}},{"value":"/ let start = Instant::now();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":35916,"byte_end":35947,"line_start":472,"line_end":472,"column_start":5,"column_end":36}},{"value":"/ let timeout = Duration::from_millis(500);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":35952,"byte_end":35997,"line_start":473,"line_end":473,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36002,"byte_end":36005,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36010,"byte_end":36020,"line_start":475,"line_end":475,"column_start":5,"column_end":15}},{"value":"/     let elapsed = start.elapsed();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36025,"byte_end":36063,"line_start":476,"line_end":476,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36068,"byte_end":36071,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     if elapsed >= timeout {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36076,"byte_end":36107,"line_start":478,"line_end":478,"column_start":5,"column_end":36}},{"value":"/         // Connection timed out","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36112,"byte_end":36147,"line_start":479,"line_end":479,"column_start":5,"column_end":40}},{"value":"/         return Ok(());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36152,"byte_end":36178,"line_start":480,"line_end":480,"column_start":5,"column_end":31}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36183,"byte_end":36192,"line_start":481,"line_end":481,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36197,"byte_end":36200,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/     let remaining = timeout - elapsed;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36205,"byte_end":36247,"line_start":483,"line_end":483,"column_start":5,"column_end":47}},{"value":"/     poll.poll(&mut events, Some(remaining))?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36252,"byte_end":36301,"line_start":484,"line_end":484,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36306,"byte_end":36309,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/     for event in &events {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36314,"byte_end":36344,"line_start":486,"line_end":486,"column_start":5,"column_end":35}},{"value":"/         if event.token() == Token(0) {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36349,"byte_end":36391,"line_start":487,"line_end":487,"column_start":5,"column_end":47}},{"value":"/             // Something (probably) happened on the socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36396,"byte_end":36459,"line_start":488,"line_end":488,"column_start":5,"column_end":68}},{"value":"/             return Ok(());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36464,"byte_end":36494,"line_start":489,"line_end":489,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36499,"byte_end":36512,"line_start":490,"line_end":490,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36517,"byte_end":36526,"line_start":491,"line_end":491,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36531,"byte_end":36536,"line_start":492,"line_end":492,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36541,"byte_end":36548,"line_start":493,"line_end":493,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36553,"byte_end":36560,"line_start":494,"line_end":494,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":39248,"byte_end":39258,"line_start":563,"line_end":563,"column_start":12,"column_end":22},"name":"reregister","qualname":"<Registry>::reregister","value":"pub fn reregister<S>(&Self, &mut S, Token, Interest) -> io::Result<()> where\nS: event::Source + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Re-register an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Re-register an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36918,"byte_end":36980,"line_start":507,"line_end":507,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36985,"byte_end":36988,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ Re-registering an event source allows changing the details of the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":36993,"byte_end":37062,"line_start":509,"line_end":509,"column_start":5,"column_end":74}},{"value":"/ registration. Specifically, it allows updating the associated `token`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":37067,"byte_end":37140,"line_start":510,"line_end":510,"column_start":5,"column_end":78}},{"value":"/ and `interests` specified in previous `register` and `reregister` calls.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":37145,"byte_end":37221,"line_start":511,"line_end":511,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":37226,"byte_end":37229,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ The `reregister` arguments fully override the previous values. In other","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":37234,"byte_end":37309,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ words, if a socket is registered with [`readable`] interest and the call","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":37314,"byte_end":37390,"line_start":514,"line_end":514,"column_start":5,"column_end":81}},{"value":"/ to `reregister` specifies [`writable`], then read interest is no longer","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":37395,"byte_end":37470,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ requested for the handle.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":37475,"byte_end":37504,"line_start":516,"line_end":516,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":37509,"byte_end":37512,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ The event source must have previously been registered with this instance","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":37517,"byte_end":37593,"line_start":518,"line_end":518,"column_start":5,"column_end":81}},{"value":"/ of `Poll`, otherwise the behavior is unspecified.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":37598,"byte_end":37651,"line_start":519,"line_end":519,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":37656,"byte_end":37659,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ See the [`register`] documentation for details about the function","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":37664,"byte_end":37733,"line_start":521,"line_end":521,"column_start":5,"column_end":74}},{"value":"/ arguments and see the [`struct`] docs for a high level overview of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":37738,"byte_end":37808,"line_start":522,"line_end":522,"column_start":5,"column_end":75}},{"value":"/ polling.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":37813,"byte_end":37825,"line_start":523,"line_end":523,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":37830,"byte_end":37833,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":37838,"byte_end":37852,"line_start":525,"line_end":525,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":37857,"byte_end":37860,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38020,"byte_end":38048,"line_start":529,"line_end":529,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38053,"byte_end":38072,"line_start":530,"line_end":530,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38077,"byte_end":38124,"line_start":531,"line_end":531,"column_start":5,"column_end":52}},{"value":"/ use mio::{Poll, Interest, Token};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38129,"byte_end":38166,"line_start":532,"line_end":532,"column_start":5,"column_end":42}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38171,"byte_end":38199,"line_start":533,"line_end":533,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38204,"byte_end":38233,"line_start":534,"line_end":534,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38238,"byte_end":38241,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38246,"byte_end":38274,"line_start":536,"line_end":536,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38279,"byte_end":38282,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38287,"byte_end":38340,"line_start":538,"line_end":538,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38345,"byte_end":38397,"line_start":539,"line_end":539,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38402,"byte_end":38467,"line_start":540,"line_end":540,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38472,"byte_end":38475,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`, requesting readable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38480,"byte_end":38539,"line_start":542,"line_end":542,"column_start":5,"column_end":64}},{"value":"/ poll.registry().register(","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38544,"byte_end":38573,"line_start":543,"line_end":543,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38578,"byte_end":38598,"line_start":544,"line_end":544,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38603,"byte_end":38620,"line_start":545,"line_end":545,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38625,"byte_end":38654,"line_start":546,"line_end":546,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38659,"byte_end":38662,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ // Reregister the socket specifying write interest instead. Even though","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38667,"byte_end":38742,"line_start":548,"line_end":548,"column_start":5,"column_end":80}},{"value":"/ // the token is the same it must be specified.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38747,"byte_end":38797,"line_start":549,"line_end":549,"column_start":5,"column_end":55}},{"value":"/ poll.registry().reregister(","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38802,"byte_end":38833,"line_start":550,"line_end":550,"column_start":5,"column_end":36}},{"value":"/     &mut socket,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38838,"byte_end":38858,"line_start":551,"line_end":551,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38863,"byte_end":38880,"line_start":552,"line_end":552,"column_start":5,"column_end":22}},{"value":"/     Interest::WRITABLE)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38885,"byte_end":38914,"line_start":553,"line_end":553,"column_start":5,"column_end":34}},{"value":"/ #     Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38919,"byte_end":38935,"line_start":554,"line_end":554,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38940,"byte_end":38947,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38952,"byte_end":38959,"line_start":556,"line_end":556,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38964,"byte_end":38967,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":38972,"byte_end":39020,"line_start":558,"line_end":558,"column_start":5,"column_end":53}},{"value":"/ [`struct`]: struct.Poll.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":39025,"byte_end":39057,"line_start":559,"line_end":559,"column_start":5,"column_end":37}},{"value":"/ [`register`]: struct.Registry.html#method.register","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":39062,"byte_end":39116,"line_start":560,"line_end":560,"column_start":5,"column_end":59}},{"value":"/ [`readable`]: ./event/struct.Event.html#is_readable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":39121,"byte_end":39176,"line_start":561,"line_end":561,"column_start":5,"column_end":60}},{"value":"/ [`writable`]: ./event/struct.Event.html#is_writable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":39181,"byte_end":39236,"line_start":562,"line_end":562,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41729,"byte_end":41739,"line_start":626,"line_end":626,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registry>::deregister","value":"pub fn deregister<S>(&Self, &mut S) -> io::Result<()> where S: event::Source +\n?Sized","parent":null,"children":[],"decl_id":null,"docs":" Deregister an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Deregister an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":39600,"byte_end":39661,"line_start":575,"line_end":575,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":39666,"byte_end":39669,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ When an event source is deregistered, the `Poll` instance will no longer","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":39674,"byte_end":39750,"line_start":577,"line_end":577,"column_start":5,"column_end":81}},{"value":"/ monitor it for readiness state changes. Deregistering clears up any","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":39755,"byte_end":39826,"line_start":578,"line_end":578,"column_start":5,"column_end":76}},{"value":"/ internal resources needed to track the handle.  After an explicit call","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":39831,"byte_end":39905,"line_start":579,"line_end":579,"column_start":5,"column_end":79}},{"value":"/ to this method completes, it is guaranteed that the token previously","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":39910,"byte_end":39982,"line_start":580,"line_end":580,"column_start":5,"column_end":77}},{"value":"/ registered to this handle will not be returned by a future poll, so long","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":39987,"byte_end":40063,"line_start":581,"line_end":581,"column_start":5,"column_end":81}},{"value":"/ as a happens-before relationship is established between this call and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":40068,"byte_end":40141,"line_start":582,"line_end":582,"column_start":5,"column_end":78}},{"value":"/ the poll.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":40146,"byte_end":40159,"line_start":583,"line_end":583,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":40164,"byte_end":40167,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ The event source must have previously been registered with this instance","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":40172,"byte_end":40248,"line_start":585,"line_end":585,"column_start":5,"column_end":81}},{"value":"/ of `Poll`, otherwise the behavior is unspecified.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":40253,"byte_end":40306,"line_start":586,"line_end":586,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":40311,"byte_end":40314,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ A handle can be passed back to `register` after it has been","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":40319,"byte_end":40382,"line_start":588,"line_end":588,"column_start":5,"column_end":68}},{"value":"/ deregistered; however, it must be passed back to the **same** `Poll`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":40387,"byte_end":40459,"line_start":589,"line_end":589,"column_start":5,"column_end":77}},{"value":"/ instance, otherwise the behavior is unspecified.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":40464,"byte_end":40516,"line_start":590,"line_end":590,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":40521,"byte_end":40524,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":40529,"byte_end":40543,"line_start":592,"line_end":592,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":40548,"byte_end":40551,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":40711,"byte_end":40739,"line_start":596,"line_end":596,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":40744,"byte_end":40763,"line_start":597,"line_end":597,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":40768,"byte_end":40815,"line_start":598,"line_end":598,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":40820,"byte_end":40865,"line_start":599,"line_end":599,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":40870,"byte_end":40898,"line_start":600,"line_end":600,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":40903,"byte_end":40932,"line_start":601,"line_end":601,"column_start":5,"column_end":34}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":40937,"byte_end":40965,"line_start":602,"line_end":602,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":40970,"byte_end":40973,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":40978,"byte_end":41010,"line_start":604,"line_end":604,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41015,"byte_end":41018,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41023,"byte_end":41076,"line_start":606,"line_end":606,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41081,"byte_end":41133,"line_start":607,"line_end":607,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41138,"byte_end":41203,"line_start":608,"line_end":608,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41208,"byte_end":41211,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41216,"byte_end":41254,"line_start":610,"line_end":610,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41259,"byte_end":41288,"line_start":611,"line_end":611,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41293,"byte_end":41313,"line_start":612,"line_end":612,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41318,"byte_end":41335,"line_start":613,"line_end":613,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41340,"byte_end":41369,"line_start":614,"line_end":614,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41374,"byte_end":41377,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ poll.registry().deregister(&mut socket)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41382,"byte_end":41427,"line_start":616,"line_end":616,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41432,"byte_end":41435,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41440,"byte_end":41489,"line_start":618,"line_end":618,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41494,"byte_end":41497,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ // Set a timeout because this poll should never receive any events.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41502,"byte_end":41573,"line_start":620,"line_end":620,"column_start":5,"column_end":76}},{"value":"/ poll.poll(&mut events, Some(Duration::from_secs(1)))?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41578,"byte_end":41636,"line_start":621,"line_end":621,"column_start":5,"column_end":63}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41641,"byte_end":41672,"line_start":622,"line_end":622,"column_start":5,"column_end":36}},{"value":"/ #     Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41677,"byte_end":41693,"line_start":623,"line_end":623,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41698,"byte_end":41705,"line_start":624,"line_end":624,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41710,"byte_end":41717,"line_start":625,"line_end":625,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":42172,"byte_end":42181,"line_start":639,"line_end":639,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<Registry>::try_clone","value":"pub fn try_clone(&Self) -> io::Result<Registry>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned `Registry`.","sig":null,"attributes":[{"value":"/ Creates a new independently owned `Registry`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41936,"byte_end":41985,"line_start":634,"line_end":634,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41990,"byte_end":41993,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ Event sources registered with this `Registry` will be registered with","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":41998,"byte_end":42071,"line_start":636,"line_end":636,"column_start":5,"column_end":78}},{"value":"/ the original `Registry` and `Poll` instance.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":42076,"byte_end":42124,"line_start":637,"line_end":637,"column_start":5,"column_end":53}},{"value":"cfg(not(target_os = \"wasi\"))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":42129,"byte_end":42160,"line_start":638,"line_end":638,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":498},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059785,"byte_end":14059793,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"SourceFd","qualname":"::sys::unix::sourcefd::SourceFd","value":"","parent":null,"children":[],"decl_id":null,"docs":" Adapter for [`RawFd`] providing an [`event::Source`] implementation.","sig":null,"attributes":[{"value":"/ Adapter for [`RawFd`] providing an [`event::Source`] implementation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14057061,"byte_end":14057133,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14057134,"byte_end":14057137,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `SourceFd` enables registering any type with an FD with [`Poll`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14057138,"byte_end":14057207,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14057208,"byte_end":14057211,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While only implementations for TCP and UDP are provided, Mio supports","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14057212,"byte_end":14057285,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ registering any FD that can be registered with the underlying OS selector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14057286,"byte_end":14057364,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ `SourceFd` provides the necessary bridge.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14057365,"byte_end":14057410,"line_start":12,"line_end":12,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14057411,"byte_end":14057414,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Note that `SourceFd` takes a `&RawFd`. This is because `SourceFd` **does","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14057415,"byte_end":14057491,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ not** take ownership of the FD. Specifically, it will not manage any","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14057492,"byte_end":14057564,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ lifecycle related operations, such as closing the FD on drop. It is expected","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14057565,"byte_end":14057645,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ that the `SourceFd` is constructed right before a call to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14057646,"byte_end":14057707,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/ [`Registry::register`]. See the examples for more detail.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14057708,"byte_end":14057769,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14057770,"byte_end":14057773,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ../event/trait.Source.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14057774,"byte_end":14057823,"line_start":20,"line_end":20,"column_start":1,"column_end":50}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14057824,"byte_end":14057857,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ [`Registry::register`]: ../struct.Registry.html#method.register","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14057858,"byte_end":14057925,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14057926,"byte_end":14057929,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14057930,"byte_end":14057944,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14057945,"byte_end":14057948,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14057949,"byte_end":14057965,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14057966,"byte_end":14057969,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058177,"byte_end":14058205,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058206,"byte_end":14058253,"line_start":37,"line_end":37,"column_start":1,"column_end":48}},{"value":"/ use mio::{Interest, Poll, Token};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058254,"byte_end":14058291,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"/ use mio::unix::SourceFd;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058292,"byte_end":14058320,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058321,"byte_end":14058324,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058325,"byte_end":14058360,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058361,"byte_end":14058391,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058392,"byte_end":14058395,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Bind a std listener","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058396,"byte_end":14058422,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058423,"byte_end":14058476,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058477,"byte_end":14058480,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058481,"byte_end":14058509,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058510,"byte_end":14058513,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ // Register the listener","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058514,"byte_end":14058542,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/ poll.registry().register(","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058543,"byte_end":14058572,"line_start":50,"line_end":50,"column_start":1,"column_end":30}},{"value":"/     &mut SourceFd(&listener.as_raw_fd()),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058573,"byte_end":14058618,"line_start":51,"line_end":51,"column_start":1,"column_end":46}},{"value":"/     Token(0),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058619,"byte_end":14058636,"line_start":52,"line_end":52,"column_start":1,"column_end":18}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058637,"byte_end":14058666,"line_start":53,"line_end":53,"column_start":1,"column_end":30}},{"value":"/ #     Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058667,"byte_end":14058683,"line_start":54,"line_end":54,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058684,"byte_end":14058691,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058692,"byte_end":14058699,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058700,"byte_end":14058703,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Implementing [`event::Source`] for a custom type backed by a [`RawFd`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058704,"byte_end":14058779,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058780,"byte_end":14058783,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ use mio::{event, Interest, Registry, Token};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058937,"byte_end":14058985,"line_start":62,"line_end":62,"column_start":1,"column_end":49}},{"value":"/ use mio::unix::SourceFd;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14058986,"byte_end":14059014,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059015,"byte_end":14059018,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ use std::os::unix::io::RawFd;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059019,"byte_end":14059052,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/ use std::io;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059053,"byte_end":14059069,"line_start":66,"line_end":66,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059070,"byte_end":14059073,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059074,"byte_end":14059099,"line_start":68,"line_end":68,"column_start":1,"column_end":26}},{"value":"/ pub struct MyIo {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059100,"byte_end":14059121,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/     fd: RawFd,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059122,"byte_end":14059140,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059141,"byte_end":14059146,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059147,"byte_end":14059150,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ impl event::Source for MyIo {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059151,"byte_end":14059184,"line_start":73,"line_end":73,"column_start":1,"column_end":34}},{"value":"/     fn register(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059185,"byte_end":14059271,"line_start":74,"line_end":74,"column_start":1,"column_end":87}},{"value":"/         -> io::Result<()>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059272,"byte_end":14059301,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059302,"byte_end":14059311,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/         SourceFd(&self.fd).register(registry, token, interests)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059312,"byte_end":14059379,"line_start":77,"line_end":77,"column_start":1,"column_end":68}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059380,"byte_end":14059389,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059390,"byte_end":14059393,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/     fn reregister(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059394,"byte_end":14059482,"line_start":80,"line_end":80,"column_start":1,"column_end":89}},{"value":"/         -> io::Result<()>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059483,"byte_end":14059512,"line_start":81,"line_end":81,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059513,"byte_end":14059522,"line_start":82,"line_end":82,"column_start":1,"column_end":10}},{"value":"/         SourceFd(&self.fd).reregister(registry, token, interests)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059523,"byte_end":14059592,"line_start":83,"line_end":83,"column_start":1,"column_end":70}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059593,"byte_end":14059602,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059603,"byte_end":14059606,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/     fn deregister(&mut self, registry: &Registry) -> io::Result<()> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059607,"byte_end":14059680,"line_start":86,"line_end":86,"column_start":1,"column_end":74}},{"value":"/         SourceFd(&self.fd).deregister(registry)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059681,"byte_end":14059732,"line_start":87,"line_end":87,"column_start":1,"column_end":52}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059733,"byte_end":14059742,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059743,"byte_end":14059748,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059749,"byte_end":14059756,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":501},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059798,"byte_end":14059811,"line_start":92,"line_end":92,"column_start":25,"column_end":38},"name":"0","qualname":"::sys::unix::sourcefd::SourceFd::0","value":"&'a i32","parent":{"krate":0,"index":498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":642},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/uds/socketaddr.rs","byte_start":14084232,"byte_end":14084242,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"SocketAddr","qualname":"::sys::unix::uds::socketaddr::SocketAddr","value":"SocketAddr {  }","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644}],"decl_id":null,"docs":" An address associated with a `mio` specific Unix socket.","sig":null,"attributes":[{"value":"/ An address associated with a `mio` specific Unix socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/uds/socketaddr.rs","byte_start":14083866,"byte_end":14083926,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/uds/socketaddr.rs","byte_start":14083927,"byte_end":14083930,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is implemented instead of imported from [`net::SocketAddr`] because","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/uds/socketaddr.rs","byte_start":14083931,"byte_end":14084007,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ there is no way to create a [`net::SocketAddr`]. One must be returned by","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/uds/socketaddr.rs","byte_start":14084008,"byte_end":14084084,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ [`accept`], so this is returned instead.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/uds/socketaddr.rs","byte_start":14084085,"byte_end":14084129,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/uds/socketaddr.rs","byte_start":14084130,"byte_end":14084133,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`net::SocketAddr`]: std::os::unix::net::SocketAddr","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/uds/socketaddr.rs","byte_start":14084134,"byte_end":14084189,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/uds/socketaddr.rs","byte_start":14084190,"byte_end":14084220,"line_start":14,"line_end":14,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/uds/socketaddr.rs","byte_start":14086401,"byte_end":14086411,"line_start":81,"line_end":81,"column_start":16,"column_end":26},"name":"is_unnamed","qualname":"<SocketAddr>::is_unnamed","value":"pub fn is_unnamed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the address is unnamed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/uds/socketaddr.rs","byte_start":14086731,"byte_end":14086742,"line_start":90,"line_end":90,"column_start":16,"column_end":27},"name":"as_pathname","qualname":"<SocketAddr>::as_pathname","value":"pub fn as_pathname(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of this address if it is a `pathname` address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/uds/socketaddr.rs","byte_start":14087184,"byte_end":14087205,"line_start":102,"line_end":102,"column_start":16,"column_end":37},"name":"as_abstract_namespace","qualname":"<SocketAddr>::as_abstract_namespace","value":"pub fn as_abstract_namespace(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of this address if it is an abstract namespace\n without the leading null byte.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":897},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14099363,"byte_end":14099366,"line_start":147,"line_end":147,"column_start":8,"column_end":11},"name":"new","qualname":"::sys::unix::pipe::new","value":"pub fn new() -> io::Result<(Sender, Receiver)>","parent":null,"children":[],"decl_id":null,"docs":" Create a new non-blocking Unix pipe.","sig":null,"attributes":[{"value":"/ Create a new non-blocking Unix pipe.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14094726,"byte_end":14094766,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14094767,"byte_end":14094770,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper around Unix's [`pipe(2)`] system call and can be used as","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14094771,"byte_end":14094849,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ inter-process or thread communication channel.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14094850,"byte_end":14094900,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14094901,"byte_end":14094904,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This channel may be created before forking the process and then one end used","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14094905,"byte_end":14094985,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ in each process, e.g. the parent process has the sending end to send command","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14094986,"byte_end":14095066,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ to the child process.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14095067,"byte_end":14095092,"line_start":20,"line_end":20,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14095093,"byte_end":14095096,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`pipe(2)`]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/pipe.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14095097,"byte_end":14095182,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14095183,"byte_end":14095186,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Events","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14095187,"byte_end":14095199,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14095200,"byte_end":14095203,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The [`Sender`] can be registered with [`WRITABLE`] interest to receive","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14095204,"byte_end":14095278,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ [writable events], the [`Receiver`] with [`READABLE`] interest. Once data is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14095279,"byte_end":14095359,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ written to the `Sender` the `Receiver` will receive an [readable event].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14095360,"byte_end":14095436,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14095437,"byte_end":14095440,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In addition to those events, events will also be generated if the other side","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14095441,"byte_end":14095521,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ is dropped. To check if the `Sender` is dropped you'll need to check","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14095522,"byte_end":14095594,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ [`is_read_closed`] on events for the `Receiver`, if it returns true the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14095595,"byte_end":14095670,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ `Sender` is dropped. On the `Sender` end check [`is_write_closed`], if it","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14095671,"byte_end":14095748,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ returns true the `Receiver` was dropped. Also see the second example below.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14095749,"byte_end":14095828,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14095829,"byte_end":14095832,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`WRITABLE`]: Interest::WRITABLE","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14095833,"byte_end":14095869,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/ [writable events]: event::Event::is_writable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14095870,"byte_end":14095918,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"/ [`READABLE`]: Interest::READABLE","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14095919,"byte_end":14095955,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/ [readable event]: event::Event::is_readable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14095956,"byte_end":14096003,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ [`is_read_closed`]: event::Event::is_read_closed","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096004,"byte_end":14096056,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ [`is_write_closed`]: event::Event::is_write_closed","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096057,"byte_end":14096111,"line_start":41,"line_end":41,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096112,"byte_end":14096115,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Deregistering","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096116,"byte_end":14096135,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096136,"byte_end":14096139,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Both `Sender` and `Receiver` will deregister themselves when dropped,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096140,"byte_end":14096213,"line_start":45,"line_end":45,"column_start":1,"column_end":74}},{"value":"/ **iff** the file descriptors are not duplicated (via [`dup(2)`]).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096214,"byte_end":14096283,"line_start":46,"line_end":46,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096284,"byte_end":14096287,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`dup(2)`]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/dup.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096288,"byte_end":14096371,"line_start":48,"line_end":48,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096372,"byte_end":14096375,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096376,"byte_end":14096390,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096391,"byte_end":14096394,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Simple example that writes data into the sending end and read it from the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096395,"byte_end":14096472,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ receiving end.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096473,"byte_end":14096491,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096492,"byte_end":14096495,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096496,"byte_end":14096503,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use std::io::{self, Read, Write};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096504,"byte_end":14096541,"line_start":56,"line_end":56,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096542,"byte_end":14096545,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ use mio::{Poll, Events, Interest, Token};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096546,"byte_end":14096591,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/ use mio::unix::pipe;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096592,"byte_end":14096616,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096617,"byte_end":14096620,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // Unique tokens for the two ends of the channel.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096621,"byte_end":14096674,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/ const PIPE_RECV: Token = Token(0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096675,"byte_end":14096713,"line_start":62,"line_end":62,"column_start":1,"column_end":39}},{"value":"/ const PIPE_SEND: Token = Token(1);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096714,"byte_end":14096752,"line_start":63,"line_end":63,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096753,"byte_end":14096756,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096757,"byte_end":14096792,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/ // Create our `Poll` instance and the `Events` container.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096793,"byte_end":14096854,"line_start":66,"line_end":66,"column_start":1,"column_end":62}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096855,"byte_end":14096887,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(8);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096888,"byte_end":14096934,"line_start":68,"line_end":68,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096935,"byte_end":14096938,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // Create a new pipe.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096939,"byte_end":14096964,"line_start":70,"line_end":70,"column_start":1,"column_end":26}},{"value":"/ let (mut sender, mut receiver) = pipe::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14096965,"byte_end":14097015,"line_start":71,"line_end":71,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097016,"byte_end":14097019,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ // Register both ends of the channel.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097020,"byte_end":14097061,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ poll.registry().register(&mut receiver, PIPE_RECV, Interest::READABLE)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097062,"byte_end":14097138,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ poll.registry().register(&mut sender, PIPE_SEND, Interest::WRITABLE)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097139,"byte_end":14097213,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097214,"byte_end":14097217,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ const MSG: &[u8; 11] = b\"Hello world\";","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097218,"byte_end":14097260,"line_start":77,"line_end":77,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097261,"byte_end":14097264,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097265,"byte_end":14097275,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097276,"byte_end":14097314,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097315,"byte_end":14097318,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     for event in events.iter() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097319,"byte_end":14097355,"line_start":82,"line_end":82,"column_start":1,"column_end":37}},{"value":"/         match event.token() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097356,"byte_end":14097389,"line_start":83,"line_end":83,"column_start":1,"column_end":34}},{"value":"/             PIPE_SEND => sender.write(MSG)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097390,"byte_end":14097436,"line_start":84,"line_end":84,"column_start":1,"column_end":47}},{"value":"/                 .and_then(|n| if n != MSG.len() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097437,"byte_end":14097490,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/                         // We'll consider a short write an error in this","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097491,"byte_end":14097567,"line_start":86,"line_end":86,"column_start":1,"column_end":77}},{"value":"/                         // example. NOTE: we can't use `write_all` with","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097568,"byte_end":14097643,"line_start":87,"line_end":87,"column_start":1,"column_end":76}},{"value":"/                         // non-blocking I/O.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097644,"byte_end":14097692,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/                         Err(io::ErrorKind::WriteZero.into())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097693,"byte_end":14097757,"line_start":89,"line_end":89,"column_start":1,"column_end":65}},{"value":"/                     } else {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097758,"byte_end":14097790,"line_start":90,"line_end":90,"column_start":1,"column_end":33}},{"value":"/                         Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097791,"byte_end":14097825,"line_start":91,"line_end":91,"column_start":1,"column_end":35}},{"value":"/                     })?,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097826,"byte_end":14097854,"line_start":92,"line_end":92,"column_start":1,"column_end":29}},{"value":"/             PIPE_RECV => {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097855,"byte_end":14097885,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/                 let mut buf = [0; 11];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097886,"byte_end":14097928,"line_start":94,"line_end":94,"column_start":1,"column_end":43}},{"value":"/                 let n = receiver.read(&mut buf)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097929,"byte_end":14097982,"line_start":95,"line_end":95,"column_start":1,"column_end":54}},{"value":"/                 println!(\"received: {:?}\", &buf[0..n]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14097983,"byte_end":14098042,"line_start":96,"line_end":96,"column_start":1,"column_end":60}},{"value":"/                 assert_eq!(n, MSG.len());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098043,"byte_end":14098088,"line_start":97,"line_end":97,"column_start":1,"column_end":46}},{"value":"/                 assert_eq!(&buf, &*MSG);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098089,"byte_end":14098133,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/                 return Ok(());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098134,"byte_end":14098168,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/             },","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098169,"byte_end":14098187,"line_start":100,"line_end":100,"column_start":1,"column_end":19}},{"value":"/             _ => unreachable!(),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098188,"byte_end":14098224,"line_start":101,"line_end":101,"column_start":1,"column_end":37}},{"value":"/         }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098225,"byte_end":14098238,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098239,"byte_end":14098248,"line_start":103,"line_end":103,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098249,"byte_end":14098254,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098255,"byte_end":14098262,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098263,"byte_end":14098270,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098271,"byte_end":14098274,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ Example that receives an event once the `Sender` is dropped.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098275,"byte_end":14098339,"line_start":108,"line_end":108,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098340,"byte_end":14098343,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098344,"byte_end":14098351,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/ # use std::io;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098352,"byte_end":14098370,"line_start":111,"line_end":111,"column_start":1,"column_end":19}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098371,"byte_end":14098376,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"/ # use mio::{Poll, Events, Interest, Token};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098377,"byte_end":14098424,"line_start":113,"line_end":113,"column_start":1,"column_end":48}},{"value":"/ # use mio::unix::pipe;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098425,"byte_end":14098451,"line_start":114,"line_end":114,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098452,"byte_end":14098457,"line_start":115,"line_end":115,"column_start":1,"column_end":6}},{"value":"/ # const PIPE_RECV: Token = Token(0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098458,"byte_end":14098498,"line_start":116,"line_end":116,"column_start":1,"column_end":41}},{"value":"/ # const PIPE_SEND: Token = Token(1);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098499,"byte_end":14098539,"line_start":117,"line_end":117,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098540,"byte_end":14098545,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098546,"byte_end":14098581,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/ // Same setup as in the example above.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098582,"byte_end":14098624,"line_start":120,"line_end":120,"column_start":1,"column_end":43}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098625,"byte_end":14098657,"line_start":121,"line_end":121,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(8);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098658,"byte_end":14098704,"line_start":122,"line_end":122,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098705,"byte_end":14098708,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ let (mut sender, mut receiver) = pipe::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098709,"byte_end":14098759,"line_start":124,"line_end":124,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098760,"byte_end":14098763,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ poll.registry().register(&mut receiver, PIPE_RECV, Interest::READABLE)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098764,"byte_end":14098840,"line_start":126,"line_end":126,"column_start":1,"column_end":77}},{"value":"/ poll.registry().register(&mut sender, PIPE_SEND, Interest::WRITABLE)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098841,"byte_end":14098915,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098916,"byte_end":14098919,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ // Drop the sender.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098920,"byte_end":14098943,"line_start":129,"line_end":129,"column_start":1,"column_end":24}},{"value":"/ drop(sender);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098944,"byte_end":14098961,"line_start":130,"line_end":130,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098962,"byte_end":14098965,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, None)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14098966,"byte_end":14099000,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14099001,"byte_end":14099004,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14099005,"byte_end":14099037,"line_start":134,"line_end":134,"column_start":1,"column_end":33}},{"value":"/     match event.token() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14099038,"byte_end":14099067,"line_start":135,"line_end":135,"column_start":1,"column_end":30}},{"value":"/         PIPE_RECV if event.is_read_closed() => {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14099068,"byte_end":14099120,"line_start":136,"line_end":136,"column_start":1,"column_end":53}},{"value":"/             // Detected that the sender was dropped.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14099121,"byte_end":14099177,"line_start":137,"line_end":137,"column_start":1,"column_end":57}},{"value":"/             println!(\"Sender dropped!\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14099178,"byte_end":14099222,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"/             return Ok(());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14099223,"byte_end":14099253,"line_start":139,"line_end":139,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14099254,"byte_end":14099268,"line_start":140,"line_end":140,"column_start":1,"column_end":15}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14099269,"byte_end":14099301,"line_start":141,"line_end":141,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14099302,"byte_end":14099311,"line_start":142,"line_end":142,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14099312,"byte_end":14099317,"line_start":143,"line_end":143,"column_start":1,"column_end":6}},{"value":"/ # unreachable!();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14099318,"byte_end":14099339,"line_start":144,"line_end":144,"column_start":1,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14099340,"byte_end":14099347,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14099348,"byte_end":14099355,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":962},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14101344,"byte_end":14101350,"line_start":211,"line_end":211,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sys::unix::pipe::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":963}],"decl_id":null,"docs":" Sending end of an Unix pipe.","sig":null,"attributes":[{"value":"/ Sending end of an Unix pipe.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14101224,"byte_end":14101256,"line_start":207,"line_end":207,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14101257,"byte_end":14101260,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ See [`new`] for documentation, including examples.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14101261,"byte_end":14101315,"line_start":209,"line_end":209,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14101467,"byte_end":14101482,"line_start":217,"line_end":217,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<Sender>::set_nonblocking","value":"pub fn set_nonblocking(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `Sender` into or out of non-blocking mode.\n","sig":null,"attributes":[{"value":"/ Set the `Sender` into or out of non-blocking mode.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14101401,"byte_end":14101455,"line_start":216,"line_end":216,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103815,"byte_end":14103821,"line_start":282,"line_end":282,"column_start":12,"column_end":18},"name":"try_io","qualname":"<Sender>::try_io","value":"pub fn try_io<F, T>(&Self, F) -> io::Result<T> where F: FnOnce() ->\nio::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14101601,"byte_end":14101675,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14101680,"byte_end":14101718,"line_start":222,"line_end":222,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14101723,"byte_end":14101726,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14101731,"byte_end":14101742,"line_start":224,"line_end":224,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14101747,"byte_end":14101750,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14101755,"byte_end":14101825,"line_start":226,"line_end":226,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14101830,"byte_end":14101906,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14101911,"byte_end":14101948,"line_start":228,"line_end":228,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14101953,"byte_end":14101956,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14101961,"byte_end":14102006,"line_start":230,"line_end":230,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102011,"byte_end":14102014,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102019,"byte_end":14102033,"line_start":232,"line_end":232,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102038,"byte_end":14102041,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102046,"byte_end":14102053,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102058,"byte_end":14102086,"line_start":235,"line_end":235,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102091,"byte_end":14102096,"line_start":236,"line_end":236,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102101,"byte_end":14102148,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102153,"byte_end":14102169,"line_start":238,"line_end":238,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102174,"byte_end":14102209,"line_start":239,"line_end":239,"column_start":5,"column_end":40}},{"value":"/ use mio::unix::pipe;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102214,"byte_end":14102238,"line_start":240,"line_end":240,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102243,"byte_end":14102246,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = pipe::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102251,"byte_end":14102293,"line_start":242,"line_end":242,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102298,"byte_end":14102301,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ // Wait until the sender is writable...","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102306,"byte_end":14102349,"line_start":244,"line_end":244,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102354,"byte_end":14102357,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ // Write to the sender using a direct libc call, of course the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102362,"byte_end":14102428,"line_start":246,"line_end":246,"column_start":5,"column_end":71}},{"value":"/ // `io::Write` implementation would be easier to use.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102433,"byte_end":14102490,"line_start":247,"line_end":247,"column_start":5,"column_end":62}},{"value":"/ let buf = b\"hello\";","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102495,"byte_end":14102518,"line_start":248,"line_end":248,"column_start":5,"column_end":28}},{"value":"/ let n = sender.try_io(|| {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102523,"byte_end":14102553,"line_start":249,"line_end":249,"column_start":5,"column_end":35}},{"value":"/     let buf_ptr = &buf as *const _ as *const _;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102558,"byte_end":14102609,"line_start":250,"line_end":250,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::write(sender.as_raw_fd(), buf_ptr, buf.len()) };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102614,"byte_end":14102695,"line_start":251,"line_end":251,"column_start":5,"column_end":86}},{"value":"/     if res != -1 {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102700,"byte_end":14102722,"line_start":252,"line_end":252,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102727,"byte_end":14102755,"line_start":253,"line_end":253,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102760,"byte_end":14102776,"line_start":254,"line_end":254,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::write, the closure","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102781,"byte_end":14102855,"line_start":255,"line_end":255,"column_start":5,"column_end":79}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102860,"byte_end":14102908,"line_start":256,"line_end":256,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102913,"byte_end":14102956,"line_start":257,"line_end":257,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102961,"byte_end":14102970,"line_start":258,"line_end":258,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102975,"byte_end":14102983,"line_start":259,"line_end":259,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"write {} bytes\", n);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14102988,"byte_end":14103023,"line_start":260,"line_end":260,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103028,"byte_end":14103031,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ // Wait until the receiver is readable...","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103036,"byte_end":14103081,"line_start":262,"line_end":262,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103086,"byte_end":14103089,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ // Read from the receiver using a direct libc call, of course the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103094,"byte_end":14103163,"line_start":264,"line_end":264,"column_start":5,"column_end":74}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103168,"byte_end":14103224,"line_start":265,"line_end":265,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103229,"byte_end":14103256,"line_start":266,"line_end":266,"column_start":5,"column_end":32}},{"value":"/ let n = receiver.try_io(|| {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103261,"byte_end":14103293,"line_start":267,"line_end":267,"column_start":5,"column_end":37}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103298,"byte_end":14103349,"line_start":268,"line_end":268,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::read(receiver.as_raw_fd(), buf_ptr, buf.len()) };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103354,"byte_end":14103436,"line_start":269,"line_end":269,"column_start":5,"column_end":87}},{"value":"/     if res != -1 {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103441,"byte_end":14103463,"line_start":270,"line_end":270,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103468,"byte_end":14103496,"line_start":271,"line_end":271,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103501,"byte_end":14103517,"line_start":272,"line_end":272,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::read, the closure","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103522,"byte_end":14103595,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103600,"byte_end":14103648,"line_start":274,"line_end":274,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103653,"byte_end":14103696,"line_start":275,"line_end":275,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103701,"byte_end":14103710,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103715,"byte_end":14103723,"line_start":277,"line_end":277,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103728,"byte_end":14103762,"line_start":278,"line_end":278,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103767,"byte_end":14103779,"line_start":279,"line_end":279,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103784,"byte_end":14103791,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103796,"byte_end":14103803,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":966},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106141,"byte_end":14106149,"line_start":376,"line_end":376,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sys::unix::pipe::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":967}],"decl_id":null,"docs":" Receiving end of an Unix pipe.","sig":null,"attributes":[{"value":"/ Receiving end of an Unix pipe.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106019,"byte_end":14106053,"line_start":372,"line_end":372,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106054,"byte_end":14106057,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ See [`new`] for documentation, including examples.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106058,"byte_end":14106112,"line_start":374,"line_end":374,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106270,"byte_end":14106285,"line_start":382,"line_end":382,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<Receiver>::set_nonblocking","value":"pub fn set_nonblocking(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `Receiver` into or out of non-blocking mode.\n","sig":null,"attributes":[{"value":"/ Set the `Receiver` into or out of non-blocking mode.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106202,"byte_end":14106258,"line_start":381,"line_end":381,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14108618,"byte_end":14108624,"line_start":447,"line_end":447,"column_start":12,"column_end":18},"name":"try_io","qualname":"<Receiver>::try_io","value":"pub fn try_io<F, T>(&Self, F) -> io::Result<T> where F: FnOnce() ->\nio::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106404,"byte_end":14106478,"line_start":386,"line_end":386,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106483,"byte_end":14106521,"line_start":387,"line_end":387,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106526,"byte_end":14106529,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106534,"byte_end":14106545,"line_start":389,"line_end":389,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106550,"byte_end":14106553,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106558,"byte_end":14106628,"line_start":391,"line_end":391,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106633,"byte_end":14106709,"line_start":392,"line_end":392,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106714,"byte_end":14106751,"line_start":393,"line_end":393,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106756,"byte_end":14106759,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106764,"byte_end":14106809,"line_start":395,"line_end":395,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106814,"byte_end":14106817,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106822,"byte_end":14106836,"line_start":397,"line_end":397,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106841,"byte_end":14106844,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106849,"byte_end":14106856,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106861,"byte_end":14106889,"line_start":400,"line_end":400,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106894,"byte_end":14106899,"line_start":401,"line_end":401,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106904,"byte_end":14106951,"line_start":402,"line_end":402,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106956,"byte_end":14106972,"line_start":403,"line_end":403,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106977,"byte_end":14107012,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/ use mio::unix::pipe;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107017,"byte_end":14107041,"line_start":405,"line_end":405,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107046,"byte_end":14107049,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = pipe::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107054,"byte_end":14107096,"line_start":407,"line_end":407,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107101,"byte_end":14107104,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ // Wait until the sender is writable...","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107109,"byte_end":14107152,"line_start":409,"line_end":409,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107157,"byte_end":14107160,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ // Write to the sender using a direct libc call, of course the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107165,"byte_end":14107231,"line_start":411,"line_end":411,"column_start":5,"column_end":71}},{"value":"/ // `io::Write` implementation would be easier to use.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107236,"byte_end":14107293,"line_start":412,"line_end":412,"column_start":5,"column_end":62}},{"value":"/ let buf = b\"hello\";","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107298,"byte_end":14107321,"line_start":413,"line_end":413,"column_start":5,"column_end":28}},{"value":"/ let n = sender.try_io(|| {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107326,"byte_end":14107356,"line_start":414,"line_end":414,"column_start":5,"column_end":35}},{"value":"/     let buf_ptr = &buf as *const _ as *const _;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107361,"byte_end":14107412,"line_start":415,"line_end":415,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::write(sender.as_raw_fd(), buf_ptr, buf.len()) };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107417,"byte_end":14107498,"line_start":416,"line_end":416,"column_start":5,"column_end":86}},{"value":"/     if res != -1 {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107503,"byte_end":14107525,"line_start":417,"line_end":417,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107530,"byte_end":14107558,"line_start":418,"line_end":418,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107563,"byte_end":14107579,"line_start":419,"line_end":419,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::write, the closure","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107584,"byte_end":14107658,"line_start":420,"line_end":420,"column_start":5,"column_end":79}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107663,"byte_end":14107711,"line_start":421,"line_end":421,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107716,"byte_end":14107759,"line_start":422,"line_end":422,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107764,"byte_end":14107773,"line_start":423,"line_end":423,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107778,"byte_end":14107786,"line_start":424,"line_end":424,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"write {} bytes\", n);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107791,"byte_end":14107826,"line_start":425,"line_end":425,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107831,"byte_end":14107834,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ // Wait until the receiver is readable...","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107839,"byte_end":14107884,"line_start":427,"line_end":427,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107889,"byte_end":14107892,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ // Read from the receiver using a direct libc call, of course the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107897,"byte_end":14107966,"line_start":429,"line_end":429,"column_start":5,"column_end":74}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14107971,"byte_end":14108027,"line_start":430,"line_end":430,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14108032,"byte_end":14108059,"line_start":431,"line_end":431,"column_start":5,"column_end":32}},{"value":"/ let n = receiver.try_io(|| {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14108064,"byte_end":14108096,"line_start":432,"line_end":432,"column_start":5,"column_end":37}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14108101,"byte_end":14108152,"line_start":433,"line_end":433,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::read(receiver.as_raw_fd(), buf_ptr, buf.len()) };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14108157,"byte_end":14108239,"line_start":434,"line_end":434,"column_start":5,"column_end":87}},{"value":"/     if res != -1 {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14108244,"byte_end":14108266,"line_start":435,"line_end":435,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14108271,"byte_end":14108299,"line_start":436,"line_end":436,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14108304,"byte_end":14108320,"line_start":437,"line_end":437,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::read, the closure","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14108325,"byte_end":14108398,"line_start":438,"line_end":438,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14108403,"byte_end":14108451,"line_start":439,"line_end":439,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14108456,"byte_end":14108499,"line_start":440,"line_end":440,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14108504,"byte_end":14108513,"line_start":441,"line_end":441,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14108518,"byte_end":14108526,"line_start":442,"line_end":442,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14108531,"byte_end":14108565,"line_start":443,"line_end":443,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14108570,"byte_end":14108582,"line_start":444,"line_end":444,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14108587,"byte_end":14108594,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14108599,"byte_end":14108606,"line_start":446,"line_end":446,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":970},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":50792,"byte_end":50797,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"Token","qualname":"::token::Token","value":"","parent":null,"children":[],"decl_id":null,"docs":" Associates readiness events with [`event::Source`]s.","sig":null,"attributes":[{"value":"/ Associates readiness events with [`event::Source`]s.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":45843,"byte_end":45899,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":45900,"byte_end":45903,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `Token` is a wrapper around `usize` and is used as an argument to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":45904,"byte_end":45973,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ [`Registry::register`] and [`Registry::reregister`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":45974,"byte_end":46030,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46031,"byte_end":46034,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ See [`Poll`] for more documentation on polling.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46035,"byte_end":46086,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46087,"byte_end":46090,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46091,"byte_end":46139,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46140,"byte_end":46170,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/ [`Registry::register`]: struct.Registry.html#method.register","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46171,"byte_end":46235,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/ [`Registry::reregister`]: struct.Registry.html#method.reregister","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46236,"byte_end":46304,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46305,"byte_end":46308,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46309,"byte_end":46322,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46323,"byte_end":46326,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Using `Token` to track which socket generated the event. In this example,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46327,"byte_end":46404,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ `HashMap` is used, but usually something like [`slab`] is better.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46405,"byte_end":46474,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46475,"byte_end":46478,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`slab`]: https://crates.io/crates/slab","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46479,"byte_end":46522,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46523,"byte_end":46526,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46674,"byte_end":46702,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46703,"byte_end":46750,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46751,"byte_end":46796,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpListener;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46797,"byte_end":46827,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46828,"byte_end":46831,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ use std::thread;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46832,"byte_end":46852,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/ use std::io::{self, Read};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46853,"byte_end":46883,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46884,"byte_end":46918,"line_start":29,"line_end":29,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46919,"byte_end":46922,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // After this number of sockets is accepted, the server will shutdown.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46923,"byte_end":46997,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ const MAX_SOCKETS: usize = 32;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":46998,"byte_end":47032,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47033,"byte_end":47036,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Pick a token that will not be used by any other socket and use that one","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47037,"byte_end":47115,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ // for the listener.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47116,"byte_end":47140,"line_start":35,"line_end":35,"column_start":1,"column_end":25}},{"value":"/ const LISTENER: Token = Token(1024);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47141,"byte_end":47181,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47182,"byte_end":47185,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // Used to store the sockets.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47186,"byte_end":47219,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ let mut sockets = HashMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47220,"byte_end":47257,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47258,"byte_end":47261,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // This is used to generate a unique token for a socket","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47262,"byte_end":47321,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/ let mut next_socket_index = 0;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47322,"byte_end":47356,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47357,"byte_end":47360,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // The `Poll` instance","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47361,"byte_end":47387,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47388,"byte_end":47420,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47421,"byte_end":47424,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Tcp listener","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47425,"byte_end":47444,"line_start":47,"line_end":47,"column_start":1,"column_end":20}},{"value":"/ let mut listener = TcpListener::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47445,"byte_end":47511,"line_start":48,"line_end":48,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47512,"byte_end":47515,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Register the listener","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47516,"byte_end":47544,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/ poll.registry().register(&mut listener, LISTENER, Interest::READABLE)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47545,"byte_end":47620,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47621,"byte_end":47624,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Spawn a thread that will connect a bunch of sockets then close them","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47625,"byte_end":47699,"line_start":53,"line_end":53,"column_start":1,"column_end":75}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47700,"byte_end":47738,"line_start":54,"line_end":54,"column_start":1,"column_end":39}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47739,"byte_end":47766,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"/     use std::net::TcpStream;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47767,"byte_end":47799,"line_start":56,"line_end":56,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47800,"byte_end":47803,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     // +1 here is to connect an extra socket to signal the socket to close","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47804,"byte_end":47882,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/     for _ in 0..(MAX_SOCKETS+1) {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47883,"byte_end":47920,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/         // Connect then drop the socket","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47921,"byte_end":47964,"line_start":60,"line_end":60,"column_start":1,"column_end":44}},{"value":"/         let _ = TcpStream::connect(addr).unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":47965,"byte_end":48019,"line_start":61,"line_end":61,"column_start":1,"column_end":55}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48020,"byte_end":48029,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48030,"byte_end":48037,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48038,"byte_end":48041,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Event storage","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48042,"byte_end":48062,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48063,"byte_end":48112,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48113,"byte_end":48116,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ // Read buffer, this will never actually get filled","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48117,"byte_end":48172,"line_start":68,"line_end":68,"column_start":1,"column_end":56}},{"value":"/ let mut buf = [0; 256];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48173,"byte_end":48200,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48201,"byte_end":48204,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // The main event loop","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48205,"byte_end":48231,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48232,"byte_end":48242,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     // Wait for events","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48243,"byte_end":48269,"line_start":73,"line_end":73,"column_start":1,"column_end":27}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48270,"byte_end":48308,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48309,"byte_end":48312,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     for event in &events {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48313,"byte_end":48343,"line_start":76,"line_end":76,"column_start":1,"column_end":31}},{"value":"/         match event.token() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48344,"byte_end":48377,"line_start":77,"line_end":77,"column_start":1,"column_end":34}},{"value":"/             LISTENER => {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48378,"byte_end":48407,"line_start":78,"line_end":78,"column_start":1,"column_end":30}},{"value":"/                 // Perform operations in a loop until `WouldBlock` is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48408,"byte_end":48481,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/                 // encountered.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48482,"byte_end":48517,"line_start":80,"line_end":80,"column_start":1,"column_end":36}},{"value":"/                 loop {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48518,"byte_end":48544,"line_start":81,"line_end":81,"column_start":1,"column_end":27}},{"value":"/                     match listener.accept() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48545,"byte_end":48594,"line_start":82,"line_end":82,"column_start":1,"column_end":50}},{"value":"/                         Ok((mut socket, _)) => {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48595,"byte_end":48647,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/                             // Shutdown the server","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48648,"byte_end":48702,"line_start":84,"line_end":84,"column_start":1,"column_end":55}},{"value":"/                             if next_socket_index == MAX_SOCKETS {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48703,"byte_end":48772,"line_start":85,"line_end":85,"column_start":1,"column_end":70}},{"value":"/                                 return Ok(());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48773,"byte_end":48823,"line_start":86,"line_end":86,"column_start":1,"column_end":51}},{"value":"/                             }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48824,"byte_end":48857,"line_start":87,"line_end":87,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48858,"byte_end":48861,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/                             // Get the token for the socket","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48862,"byte_end":48925,"line_start":89,"line_end":89,"column_start":1,"column_end":64}},{"value":"/                             let token = Token(next_socket_index);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48926,"byte_end":48995,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"/                             next_socket_index += 1;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":48996,"byte_end":49051,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":49052,"byte_end":49055,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/                             // Register the new socket w/ poll","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":49056,"byte_end":49122,"line_start":93,"line_end":93,"column_start":1,"column_end":67}},{"value":"/                             poll.registry().register(&mut socket, token, Interest::READABLE)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":49123,"byte_end":49221,"line_start":94,"line_end":94,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":49222,"byte_end":49225,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/                             // Store the socket","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":49226,"byte_end":49277,"line_start":96,"line_end":96,"column_start":1,"column_end":52}},{"value":"/                             sockets.insert(token, socket);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":49278,"byte_end":49340,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/                         }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":49341,"byte_end":49370,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/                         Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":49371,"byte_end":49455,"line_start":99,"line_end":99,"column_start":1,"column_end":85}},{"value":"/                             // Socket is not ready anymore, stop accepting","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":49456,"byte_end":49534,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/                             break;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":49535,"byte_end":49573,"line_start":101,"line_end":101,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":49574,"byte_end":49603,"line_start":102,"line_end":102,"column_start":1,"column_end":30}},{"value":"/                         e => panic!(\"err={:?}\", e), // Unexpected error","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":49604,"byte_end":49679,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/                     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":49680,"byte_end":49705,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":49706,"byte_end":49727,"line_start":105,"line_end":105,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":49728,"byte_end":49745,"line_start":106,"line_end":106,"column_start":1,"column_end":18}},{"value":"/             token => {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":49746,"byte_end":49772,"line_start":107,"line_end":107,"column_start":1,"column_end":27}},{"value":"/                 // Always operate in a loop","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":49773,"byte_end":49820,"line_start":108,"line_end":108,"column_start":1,"column_end":48}},{"value":"/                 loop {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":49821,"byte_end":49847,"line_start":109,"line_end":109,"column_start":1,"column_end":27}},{"value":"/                     match sockets.get_mut(&token).unwrap().read(&mut buf) {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":49848,"byte_end":49927,"line_start":110,"line_end":110,"column_start":1,"column_end":80}},{"value":"/                         Ok(0) => {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":49928,"byte_end":49966,"line_start":111,"line_end":111,"column_start":1,"column_end":39}},{"value":"/                             // Socket is closed, remove it from the map","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":49967,"byte_end":50042,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/                             sockets.remove(&token);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":50043,"byte_end":50098,"line_start":113,"line_end":113,"column_start":1,"column_end":56}},{"value":"/                             break;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":50099,"byte_end":50137,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":50138,"byte_end":50167,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/                         // Data is not actually sent in this example","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":50168,"byte_end":50240,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/                         Ok(_) => unreachable!(),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":50241,"byte_end":50293,"line_start":117,"line_end":117,"column_start":1,"column_end":53}},{"value":"/                         Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":50294,"byte_end":50378,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/                             // Socket is not ready anymore, stop reading","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":50379,"byte_end":50455,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/                             break;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":50456,"byte_end":50494,"line_start":120,"line_end":120,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":50495,"byte_end":50524,"line_start":121,"line_end":121,"column_start":1,"column_end":30}},{"value":"/                         e => panic!(\"err={:?}\", e), // Unexpected error","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":50525,"byte_end":50600,"line_start":122,"line_end":122,"column_start":1,"column_end":76}},{"value":"/                     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":50601,"byte_end":50626,"line_start":123,"line_end":123,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":50627,"byte_end":50648,"line_start":124,"line_end":124,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":50649,"byte_end":50666,"line_start":125,"line_end":125,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":50667,"byte_end":50680,"line_start":126,"line_end":126,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":50681,"byte_end":50690,"line_start":127,"line_end":127,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":50691,"byte_end":50696,"line_start":128,"line_end":128,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":50697,"byte_end":50704,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":50705,"byte_end":50712,"line_start":130,"line_end":130,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":972},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/token.rs","byte_start":50798,"byte_end":50807,"line_start":132,"line_end":132,"column_start":18,"column_end":27},"name":"0","qualname":"::token::Token::0","value":"usize","parent":{"krate":0,"index":970},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":992},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":53469,"byte_end":53474,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"Waker","qualname":"::waker::Waker","value":"Waker {  }","parent":null,"children":[{"krate":0,"index":993}],"decl_id":null,"docs":" Waker allows cross-thread waking of [`Poll`].","sig":null,"attributes":[{"value":"/ Waker allows cross-thread waking of [`Poll`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":50948,"byte_end":50997,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":50998,"byte_end":51001,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ When created it will cause events with [`readable`] readiness and the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51002,"byte_end":51075,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ provided `token` if [`wake`] is called, possibly from another thread.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51076,"byte_end":51149,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51150,"byte_end":51153,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51154,"byte_end":51184,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ [`readable`]: ./event/struct.Event.html#method.is_readable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51185,"byte_end":51247,"line_start":11,"line_end":11,"column_start":1,"column_end":63}},{"value":"/ [`wake`]: struct.Waker.html#method.wake","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51248,"byte_end":51291,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51292,"byte_end":51295,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51296,"byte_end":51307,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51308,"byte_end":51311,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `Waker` events are only guaranteed to be delivered while the `Waker` value","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51312,"byte_end":51390,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ is alive.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51391,"byte_end":51404,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51405,"byte_end":51408,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Only a single `Waker` can be active per [`Poll`], if multiple threads need","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51409,"byte_end":51487,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ access to the `Waker` it can be shared via for example an `Arc`. What","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51488,"byte_end":51561,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ happens if multiple `Waker`s are registered with the same `Poll` is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51562,"byte_end":51633,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ unspecified.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51634,"byte_end":51650,"line_start":22,"line_end":22,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51651,"byte_end":51654,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51655,"byte_end":51681,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51682,"byte_end":51685,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ On platforms that support kqueue this will use the `EVFILT_USER` event","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51686,"byte_end":51760,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ filter, see [implementation notes of `Poll`] to see what platforms support","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51761,"byte_end":51839,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ kqueue. On Linux it uses [eventfd].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51840,"byte_end":51879,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51880,"byte_end":51883,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [implementation notes of `Poll`]: struct.Poll.html#implementation-notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51884,"byte_end":51959,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ [eventfd]: https://man7.org/linux/man-pages/man2/eventfd.2.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":51960,"byte_end":52027,"line_start":31,"line_end":31,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52028,"byte_end":52031,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52032,"byte_end":52046,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52047,"byte_end":52050,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Wake a [`Poll`] instance from another thread.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52051,"byte_end":52100,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52101,"byte_end":52104,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52208,"byte_end":52267,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/ use std::thread;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52268,"byte_end":52288,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52289,"byte_end":52317,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52318,"byte_end":52341,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52342,"byte_end":52345,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ use mio::{Events, Token, Poll, Waker};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52346,"byte_end":52388,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52389,"byte_end":52392,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ const WAKE_TOKEN: Token = Token(10);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52393,"byte_end":52433,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52434,"byte_end":52437,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52438,"byte_end":52470,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52471,"byte_end":52517,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52518,"byte_end":52521,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ let waker = Arc::new(Waker::new(poll.registry(), WAKE_TOKEN)?);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52522,"byte_end":52589,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52590,"byte_end":52593,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // We need to keep the Waker alive, so we'll create a clone for the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52594,"byte_end":52665,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ // thread we create below.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52666,"byte_end":52696,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/ let waker1 = waker.clone();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52697,"byte_end":52728,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/ let handle = thread::spawn(move || {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52729,"byte_end":52769,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/     // Working hard, or hardly working?","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52770,"byte_end":52813,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52814,"byte_end":52864,"line_start":58,"line_end":58,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52865,"byte_end":52868,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     // Now we'll wake the queue on the other thread.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52869,"byte_end":52925,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/     waker1.wake().expect(\"unable to wake\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52926,"byte_end":52973,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52974,"byte_end":52981,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52982,"byte_end":52985,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // On our current thread we'll poll for events, without a timeout.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":52986,"byte_end":53056,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ poll.poll(&mut events, None)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":53057,"byte_end":53091,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":53092,"byte_end":53095,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // After about 500 milliseconds we should be awoken by the other thread and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":53096,"byte_end":53175,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"/ // get a single event.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":53176,"byte_end":53202,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/ assert!(!events.is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":53203,"byte_end":53235,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/ let waker_event = events.iter().next().unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":53236,"byte_end":53288,"line_start":70,"line_end":70,"column_start":1,"column_end":53}},{"value":"/ assert!(waker_event.is_readable());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":53289,"byte_end":53328,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(waker_event.token(), WAKE_TOKEN);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":53329,"byte_end":53377,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":53378,"byte_end":53407,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/ #     Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":53408,"byte_end":53424,"line_start":74,"line_end":74,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":53425,"byte_end":53432,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":53433,"byte_end":53440,"line_start":76,"line_end":76,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":53557,"byte_end":53560,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"new","qualname":"<Waker>::new","value":"pub fn new(&Registry, Token) -> io::Result<Waker>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Waker`.\n","sig":null,"attributes":[{"value":"/ Create a new `Waker`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":53520,"byte_end":53545,"line_start":83,"line_end":83,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":53888,"byte_end":53892,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"wake","qualname":"<Waker>::wake","value":"pub fn wake(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wake up the [`Poll`] associated with this `Waker`.","sig":null,"attributes":[{"value":"/ Wake up the [`Poll`] associated with this `Waker`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":53779,"byte_end":53833,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":53838,"byte_end":53841,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":53846,"byte_end":53876,"line_start":92,"line_end":92,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":126},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"event","qualname":"::event","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/mod.rs","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":158},{"krate":0,"index":190},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":223}],"decl_id":null,"docs":" Readiness event types and utilities.\n","sig":null,"attributes":[{"value":"/ Readiness event types and utilities.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/mod.rs","byte_start":53955,"byte_end":53995,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":996},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":54572,"byte_end":54577,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"name":"Event","qualname":"::event::event::Event","value":"Event {  }","parent":null,"children":[{"krate":0,"index":997}],"decl_id":null,"docs":" A readiness event.","sig":null,"attributes":[{"value":"/ A readiness event.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":54206,"byte_end":54228,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":54229,"byte_end":54232,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `Event` is a readiness state paired with a [`Token`]. It is returned by","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":54233,"byte_end":54308,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ [`Poll::poll`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":54309,"byte_end":54328,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":54329,"byte_end":54332,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ For more documentation on polling and events, see [`Poll`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":54333,"byte_end":54396,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":54397,"byte_end":54400,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`]: ../struct.Poll.html#method.poll","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":54401,"byte_end":54452,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":54453,"byte_end":54486,"line_start":13,"line_end":13,"column_start":1,"column_end":34}},{"value":"/ [`Token`]: ../struct.Token.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":54487,"byte_end":54522,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":54540,"byte_end":54560,"line_start":16,"line_end":16,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":54665,"byte_end":54670,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"token","qualname":"<Event>::token","value":"pub fn token(&Self) -> Token","parent":null,"children":[],"decl_id":null,"docs":" Returns the event's token.\n","sig":null,"attributes":[{"value":"/ Returns the event's token.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":54623,"byte_end":54653,"line_start":22,"line_end":22,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":55322,"byte_end":55333,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"is_readable","qualname":"<Event>::is_readable","value":"pub fn is_readable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains readable readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains readable readiness.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":54739,"byte_end":54797,"line_start":27,"line_end":27,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":54802,"byte_end":54805,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":54810,"byte_end":54821,"line_start":29,"line_end":29,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":54826,"byte_end":54829,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Out-of-band (OOB) data also triggers readable events. But must","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":54834,"byte_end":54900,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ application don't actually read OOB data, this could leave an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":54905,"byte_end":54970,"line_start":32,"line_end":32,"column_start":5,"column_end":70}},{"value":"/ application open to a Denial-of-Service (Dos) attack, see","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":54975,"byte_end":55036,"line_start":33,"line_end":33,"column_start":5,"column_end":66}},{"value":"/ <https://github.com/sandstorm-io/sandstorm-website/blob/58f93346028c0576e8147627667328eaaf4be9fa/_posts/2015-04-08-osx-security-bug.md>.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":55041,"byte_end":55181,"line_start":34,"line_end":34,"column_start":5,"column_end":145}},{"value":"/ However because Mio uses edge-triggers it will not result in an infinite","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":55186,"byte_end":55262,"line_start":35,"line_end":35,"column_start":5,"column_end":81}},{"value":"/ loop as described in the article above.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":55267,"byte_end":55310,"line_start":36,"line_end":36,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":55477,"byte_end":55488,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"is_writable","qualname":"<Event>::is_writable","value":"pub fn is_writable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the event contains writable readiness.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":55407,"byte_end":55465,"line_start":41,"line_end":41,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":56491,"byte_end":56499,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"is_error","qualname":"<Event>::is_error","value":"pub fn is_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains error readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains error readiness.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":55562,"byte_end":55617,"line_start":46,"line_end":46,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":55622,"byte_end":55625,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Error events occur when the socket enters an error state. In this case,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":55630,"byte_end":55705,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ the socket will also receive a readable or writable event. Reading or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":55710,"byte_end":55783,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ writing to the socket will result in an error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":55788,"byte_end":55838,"line_start":50,"line_end":50,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":55843,"byte_end":55846,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":55851,"byte_end":55862,"line_start":52,"line_end":52,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":55867,"byte_end":55870,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms trigger the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":55875,"byte_end":55950,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ error event.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":55955,"byte_end":55971,"line_start":55,"line_end":55,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":55976,"byte_end":55979,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":55984,"byte_end":56044,"line_start":57,"line_end":57,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":56049,"byte_end":56052,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":56057,"byte_end":56096,"line_start":59,"line_end":59,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":56101,"byte_end":56140,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLERR`      |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":56145,"byte_end":56184,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]      | `EV_ERROR` and `EV_EOF` with `fflags` set to `0`. |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":56189,"byte_end":56262,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":56267,"byte_end":56270,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":56275,"byte_end":56334,"line_start":64,"line_end":64,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":56339,"byte_end":56402,"line_start":65,"line_end":65,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":56407,"byte_end":56479,"line_start":66,"line_end":66,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":57813,"byte_end":57827,"line_start":98,"line_end":98,"column_start":12,"column_end":26},"name":"is_read_closed","qualname":"<Event>::is_read_closed","value":"pub fn is_read_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains read closed readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains read closed readiness.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":56570,"byte_end":56631,"line_start":71,"line_end":71,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":56636,"byte_end":56639,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":56644,"byte_end":56655,"line_start":73,"line_end":73,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":56660,"byte_end":56663,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Read closed readiness can be expected after any of the following have","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":56668,"byte_end":56741,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ occurred:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":56746,"byte_end":56759,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/ * The local stream has shutdown the read half of its socket","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":56764,"byte_end":56827,"line_start":77,"line_end":77,"column_start":5,"column_end":68}},{"value":"/ * The local stream has shutdown both the read half and the write half","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":56832,"byte_end":56905,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/   of its socket","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":56910,"byte_end":56929,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/ * The peer stream has shutdown the write half its socket; this sends a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":56934,"byte_end":57008,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/   `FIN` packet that has been received by the local stream","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":57013,"byte_end":57074,"line_start":81,"line_end":81,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":57079,"byte_end":57082,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Method is a best effort implementation. While some platforms may not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":57087,"byte_end":57159,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ return readiness when read half is closed, it is guaranteed that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":57164,"byte_end":57232,"line_start":84,"line_end":84,"column_start":5,"column_end":73}},{"value":"/ false-positives will not occur.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":57237,"byte_end":57272,"line_start":85,"line_end":85,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":57277,"byte_end":57280,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":57285,"byte_end":57345,"line_start":87,"line_end":87,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":57350,"byte_end":57353,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":57358,"byte_end":57397,"line_start":89,"line_end":89,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":57402,"byte_end":57441,"line_start":90,"line_end":90,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLHUP`, or  |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":57446,"byte_end":57485,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/ |               | `EPOLLIN` and `EPOLLRDHUP` |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":57490,"byte_end":57540,"line_start":92,"line_end":92,"column_start":5,"column_end":55}},{"value":"/ | [kqueue]      | `EV_EOF`        |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":57545,"byte_end":57584,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":57589,"byte_end":57592,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":57597,"byte_end":57656,"line_start":95,"line_end":95,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":57661,"byte_end":57724,"line_start":96,"line_end":96,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":57729,"byte_end":57801,"line_start":97,"line_end":97,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":59059,"byte_end":59074,"line_start":128,"line_end":128,"column_start":12,"column_end":27},"name":"is_write_closed","qualname":"<Event>::is_write_closed","value":"pub fn is_write_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains write closed readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains write closed readiness.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":57904,"byte_end":57966,"line_start":102,"line_end":102,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":57971,"byte_end":57974,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":57979,"byte_end":57990,"line_start":104,"line_end":104,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":57995,"byte_end":57998,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ On [epoll] this is essentially a check for `EPOLLHUP` flag as the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":58003,"byte_end":58072,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/ local stream shutting down its write half does not trigger this event.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":58077,"byte_end":58151,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":58156,"byte_end":58159,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ On [kqueue] the local stream shutting down the write half of its","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":58164,"byte_end":58232,"line_start":109,"line_end":109,"column_start":5,"column_end":73}},{"value":"/ socket will trigger this event.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":58237,"byte_end":58272,"line_start":110,"line_end":110,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":58277,"byte_end":58280,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Method is a best effort implementation. While some platforms may not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":58285,"byte_end":58357,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ return readiness when write half is closed, it is guaranteed that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":58362,"byte_end":58431,"line_start":113,"line_end":113,"column_start":5,"column_end":74}},{"value":"/ false-positives will not occur.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":58436,"byte_end":58471,"line_start":114,"line_end":114,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":58476,"byte_end":58479,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":58484,"byte_end":58544,"line_start":116,"line_end":116,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":58549,"byte_end":58552,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":58557,"byte_end":58596,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":58601,"byte_end":58640,"line_start":119,"line_end":119,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLHUP`, or  |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":58645,"byte_end":58684,"line_start":120,"line_end":120,"column_start":5,"column_end":44}},{"value":"/ |               | only `EPOLLERR`, or |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":58689,"byte_end":58732,"line_start":121,"line_end":121,"column_start":5,"column_end":48}},{"value":"/ |               | `EPOLLOUT` and `EPOLLERR` |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":58737,"byte_end":58786,"line_start":122,"line_end":122,"column_start":5,"column_end":54}},{"value":"/ | [kqueue]      | `EV_EOF`        |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":58791,"byte_end":58830,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":58835,"byte_end":58838,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":58843,"byte_end":58902,"line_start":125,"line_end":125,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":58907,"byte_end":58970,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":58975,"byte_end":59047,"line_start":127,"line_end":127,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":59846,"byte_end":59857,"line_start":150,"line_end":150,"column_start":12,"column_end":23},"name":"is_priority","qualname":"<Event>::is_priority","value":"pub fn is_priority(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains priority readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains priority readiness.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":59152,"byte_end":59210,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":59215,"byte_end":59218,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":59223,"byte_end":59234,"line_start":134,"line_end":134,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":59239,"byte_end":59242,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms trigger the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":59247,"byte_end":59322,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ priority event.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":59327,"byte_end":59346,"line_start":137,"line_end":137,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":59351,"byte_end":59354,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":59359,"byte_end":59419,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":59424,"byte_end":59427,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":59432,"byte_end":59471,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":59476,"byte_end":59515,"line_start":142,"line_end":142,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLPRI`      |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":59520,"byte_end":59559,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]      | *Not supported* |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":59564,"byte_end":59603,"line_start":144,"line_end":144,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":59608,"byte_end":59611,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":59616,"byte_end":59675,"line_start":146,"line_end":146,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":59680,"byte_end":59743,"line_start":147,"line_end":147,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":59748,"byte_end":59820,"line_start":148,"line_end":148,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":59825,"byte_end":59834,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":60663,"byte_end":60669,"line_start":172,"line_end":172,"column_start":12,"column_end":18},"name":"is_aio","qualname":"<Event>::is_aio","value":"pub fn is_aio(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains AIO readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains AIO readiness.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":59931,"byte_end":59984,"line_start":154,"line_end":154,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":59989,"byte_end":59992,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":59997,"byte_end":60008,"line_start":156,"line_end":156,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":60013,"byte_end":60016,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms support AIO.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":60021,"byte_end":60097,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":60102,"byte_end":60105,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":60110,"byte_end":60170,"line_start":160,"line_end":160,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":60175,"byte_end":60178,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":60183,"byte_end":60222,"line_start":162,"line_end":162,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":60227,"byte_end":60266,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | *Not supported* |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":60271,"byte_end":60310,"line_start":164,"line_end":164,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]<sup>1</sup> | `EVFILT_AIO` |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":60315,"byte_end":60358,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":60363,"byte_end":60366,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ 1: Only supported on DragonFly BSD, FreeBSD, iOS and macOS.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":60371,"byte_end":60434,"line_start":167,"line_end":167,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":60439,"byte_end":60442,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":60447,"byte_end":60506,"line_start":169,"line_end":169,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":60511,"byte_end":60574,"line_start":170,"line_end":170,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":60579,"byte_end":60651,"line_start":171,"line_end":171,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":60973,"byte_end":60979,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"is_lio","qualname":"<Event>::is_lio","value":"pub fn is_lio(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains LIO readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains LIO readiness.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":60738,"byte_end":60791,"line_start":176,"line_end":176,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":60796,"byte_end":60799,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":60804,"byte_end":60815,"line_start":178,"line_end":178,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":60820,"byte_end":60823,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but only FreeBSD supports LIO. On","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":60828,"byte_end":60903,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/ FreeBSD this method checks the `EVFILT_LIO` flag.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":60908,"byte_end":60961,"line_start":181,"line_end":181,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":168},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63976,"byte_end":63982,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"Events","qualname":"::event::events::Events","value":"Events {  }","parent":null,"children":[{"krate":0,"index":169}],"decl_id":null,"docs":" A collection of readiness events.","sig":null,"attributes":[{"value":"/ A collection of readiness events.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":62866,"byte_end":62903,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":62904,"byte_end":62907,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `Events` is passed as an argument to [`Poll::poll`] and will be used to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":62908,"byte_end":62983,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ receive any new readiness events received since the last poll. Usually, a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":62984,"byte_end":63061,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ single `Events` instance is created at the same time as a [`Poll`] and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63062,"byte_end":63136,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ reused on each call to [`Poll::poll`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63137,"byte_end":63179,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63180,"byte_end":63183,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See [`Poll`] for more documentation on polling.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63184,"byte_end":63235,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63236,"byte_end":63239,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`]: ../struct.Poll.html#method.poll","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63240,"byte_end":63291,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63292,"byte_end":63325,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63326,"byte_end":63329,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63330,"byte_end":63344,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63345,"byte_end":63348,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63452,"byte_end":63480,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63481,"byte_end":63528,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63529,"byte_end":63557,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63558,"byte_end":63586,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63587,"byte_end":63590,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63591,"byte_end":63640,"line_start":27,"line_end":27,"column_start":1,"column_end":50}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63641,"byte_end":63673,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63674,"byte_end":63679,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ # assert!(events.is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63680,"byte_end":63713,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63714,"byte_end":63717,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // Register `event::Source`s with `poll`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63718,"byte_end":63763,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63764,"byte_end":63767,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63768,"byte_end":63830,"line_start":34,"line_end":34,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63831,"byte_end":63834,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63835,"byte_end":63867,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63868,"byte_end":63925,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63926,"byte_end":63931,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63932,"byte_end":63948,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63949,"byte_end":63956,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":63957,"byte_end":63964,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1000},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64815,"byte_end":64819,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"Iter","qualname":"::event::events::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1002},{"krate":0,"index":1003}],"decl_id":null,"docs":" [`Events`] iterator.","sig":null,"attributes":[{"value":"/ [`Events`] iterator.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64012,"byte_end":64036,"line_start":46,"line_end":46,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64037,"byte_end":64040,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`iter`] method on [`Events`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64041,"byte_end":64105,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64106,"byte_end":64109,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Events`]: struct.Events.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64110,"byte_end":64144,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/ [`iter`]: struct.Events.html#method.iter","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64145,"byte_end":64189,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64190,"byte_end":64193,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64194,"byte_end":64208,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64209,"byte_end":64212,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64316,"byte_end":64344,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64345,"byte_end":64392,"line_start":58,"line_end":58,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64393,"byte_end":64421,"line_start":59,"line_end":59,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64422,"byte_end":64450,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64451,"byte_end":64454,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64455,"byte_end":64504,"line_start":62,"line_end":62,"column_start":1,"column_end":50}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64505,"byte_end":64537,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64538,"byte_end":64541,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64542,"byte_end":64578,"line_start":65,"line_end":65,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64579,"byte_end":64582,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64583,"byte_end":64645,"line_start":67,"line_end":67,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64646,"byte_end":64649,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64650,"byte_end":64682,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64683,"byte_end":64740,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64741,"byte_end":64746,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64747,"byte_end":64763,"line_start":72,"line_end":72,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64764,"byte_end":64771,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64772,"byte_end":64779,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65154,"byte_end":65167,"line_start":92,"line_end":92,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Events>::with_capacity","value":"pub fn with_capacity(usize) -> Events","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Events` capable of holding up to `capacity` events.","sig":null,"attributes":[{"value":"/ Return a new `Events` capable of holding up to `capacity` events.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64886,"byte_end":64955,"line_start":82,"line_end":82,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64960,"byte_end":64963,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64968,"byte_end":64982,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64987,"byte_end":64990,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64995,"byte_end":65002,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65007,"byte_end":65027,"line_start":87,"line_end":87,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65032,"byte_end":65035,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65040,"byte_end":65085,"line_start":89,"line_end":89,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(1024, events.capacity());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65090,"byte_end":65130,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65135,"byte_end":65142,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65526,"byte_end":65534,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Events>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of `Event` values that `self` can hold.","sig":null,"attributes":[{"value":"/ Returns the number of `Event` values that `self` can hold.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65292,"byte_end":65354,"line_start":98,"line_end":98,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65359,"byte_end":65362,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65367,"byte_end":65374,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65379,"byte_end":65399,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65404,"byte_end":65407,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65412,"byte_end":65457,"line_start":103,"line_end":103,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(1024, events.capacity());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65462,"byte_end":65502,"line_start":104,"line_end":104,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65507,"byte_end":65514,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65840,"byte_end":65848,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Events>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` contains no `Event` values.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` contains no `Event` values.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65594,"byte_end":65650,"line_start":110,"line_end":110,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65655,"byte_end":65658,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65663,"byte_end":65677,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65682,"byte_end":65685,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65690,"byte_end":65697,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65702,"byte_end":65722,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65727,"byte_end":65730,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65735,"byte_end":65780,"line_start":117,"line_end":117,"column_start":5,"column_end":50}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65785,"byte_end":65816,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65821,"byte_end":65828,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66649,"byte_end":66653,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"iter","qualname":"<Events>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the `Event` values.","sig":null,"attributes":[{"value":"/ Returns an iterator over the `Event` values.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65907,"byte_end":65955,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65960,"byte_end":65963,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65968,"byte_end":65982,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":65987,"byte_end":65990,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66106,"byte_end":66134,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66139,"byte_end":66186,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66191,"byte_end":66219,"line_start":132,"line_end":132,"column_start":5,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66224,"byte_end":66252,"line_start":133,"line_end":133,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66257,"byte_end":66260,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66265,"byte_end":66314,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66319,"byte_end":66351,"line_start":136,"line_end":136,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66356,"byte_end":66359,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66364,"byte_end":66400,"line_start":138,"line_end":138,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66405,"byte_end":66408,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66413,"byte_end":66475,"line_start":140,"line_end":140,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66480,"byte_end":66483,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ for event in events.iter() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66488,"byte_end":66520,"line_start":142,"line_end":142,"column_start":5,"column_end":37}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66525,"byte_end":66582,"line_start":143,"line_end":143,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66587,"byte_end":66592,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66597,"byte_end":66613,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66618,"byte_end":66625,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66630,"byte_end":66637,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":67621,"byte_end":67626,"line_start":184,"line_end":184,"column_start":12,"column_end":17},"name":"clear","qualname":"<Events>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clearing all `Event` values from container explicitly.","sig":null,"attributes":[{"value":"/ Clearing all `Event` values from container explicitly.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66756,"byte_end":66814,"line_start":155,"line_end":155,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66819,"byte_end":66822,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66827,"byte_end":66838,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66843,"byte_end":66846,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Events are cleared before every `poll`, so it is not required to call","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66851,"byte_end":66924,"line_start":159,"line_end":159,"column_start":5,"column_end":78}},{"value":"/ this manually.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66929,"byte_end":66947,"line_start":160,"line_end":160,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66952,"byte_end":66955,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66960,"byte_end":66974,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":66979,"byte_end":66982,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":67098,"byte_end":67126,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":67131,"byte_end":67178,"line_start":167,"line_end":167,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":67183,"byte_end":67211,"line_start":168,"line_end":168,"column_start":5,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":67216,"byte_end":67244,"line_start":169,"line_end":169,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":67249,"byte_end":67252,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":67257,"byte_end":67306,"line_start":171,"line_end":171,"column_start":5,"column_end":54}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":67311,"byte_end":67343,"line_start":172,"line_end":172,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":67348,"byte_end":67351,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":67356,"byte_end":67392,"line_start":174,"line_end":174,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":67397,"byte_end":67400,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":67405,"byte_end":67467,"line_start":176,"line_end":176,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":67472,"byte_end":67475,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ // Clear all events.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":67480,"byte_end":67504,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/ events.clear();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":67509,"byte_end":67528,"line_start":179,"line_end":179,"column_start":5,"column_end":24}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":67533,"byte_end":67564,"line_start":180,"line_end":180,"column_start":5,"column_end":36}},{"value":"/ #     Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":67569,"byte_end":67585,"line_start":181,"line_end":181,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":67590,"byte_end":67597,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":67602,"byte_end":67609,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":204},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":71204,"byte_end":71210,"line_start":75,"line_end":75,"column_start":11,"column_end":17},"name":"Source","qualname":"::event::source::Source","value":"Source","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207}],"decl_id":null,"docs":" An event source that may be registered with [`Registry`].","sig":null,"attributes":[{"value":"/ An event source that may be registered with [`Registry`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":68657,"byte_end":68718,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":68719,"byte_end":68722,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Types that implement `event::Source` can be registered with","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":68723,"byte_end":68786,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/ `Registry`. Users of Mio **should not** use the `event::Source` trait","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":68787,"byte_end":68860,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ functions directly. Instead, the equivalent functions on `Registry` should","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":68861,"byte_end":68939,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ be used.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":68940,"byte_end":68952,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":68953,"byte_end":68956,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See [`Registry`] for more details.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":68957,"byte_end":68995,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":68996,"byte_end":68999,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Registry`]: ../struct.Registry.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69000,"byte_end":69041,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69042,"byte_end":69045,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Implementing `event::Source`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69046,"byte_end":69080,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69081,"byte_end":69084,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Event sources are always backed by system handles, such as sockets or other","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69085,"byte_end":69164,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ system handles. These `event::Source`s will be monitored by the system","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69165,"byte_end":69239,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ selector. An implementation of `Source` will almost always delegates to a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69240,"byte_end":69317,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ lower level handle. Examples of this are [`TcpStream`]s, or the *unix only*","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69318,"byte_end":69397,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ [`SourceFd`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69398,"byte_end":69415,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69416,"byte_end":69419,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: ../net/struct.TcpStream.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69420,"byte_end":69467,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/ [`SourceFd`]: ../unix/struct.SourceFd.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69468,"byte_end":69514,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69515,"byte_end":69518,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Dropping `event::Source`s","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69519,"byte_end":69550,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69551,"byte_end":69554,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ All `event::Source`s, unless otherwise specified, need to be [deregistered]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69555,"byte_end":69634,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ before being dropped for them to not leak resources. This goes against the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69635,"byte_end":69713,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ normal drop behaviour of types in Rust which cleanup after themselves, e.g.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69714,"byte_end":69793,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ a `File` will close itself. However since deregistering needs access to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69794,"byte_end":69869,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ [`Registry`] this cannot be done while being dropped.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69870,"byte_end":69927,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69928,"byte_end":69931,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [deregistered]: ../struct.Registry.html#method.deregister","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69932,"byte_end":69993,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69994,"byte_end":69997,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":69998,"byte_end":70012,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70013,"byte_end":70016,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Implementing `Source` on a struct containing a socket:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70017,"byte_end":70075,"line_start":39,"line_end":39,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70076,"byte_end":70079,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ use mio::{Interest, Registry, Token};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70227,"byte_end":70268,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"/ use mio::event::Source;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70269,"byte_end":70296,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70297,"byte_end":70325,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70326,"byte_end":70329,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70330,"byte_end":70346,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70347,"byte_end":70350,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70351,"byte_end":70376,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/ pub struct MySource {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70377,"byte_end":70402,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/     socket: TcpStream,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70403,"byte_end":70429,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70430,"byte_end":70435,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70436,"byte_end":70439,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ impl Source for MySource {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70440,"byte_end":70470,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/     fn register(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70471,"byte_end":70557,"line_start":55,"line_end":55,"column_start":1,"column_end":87}},{"value":"/         -> io::Result<()>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70558,"byte_end":70587,"line_start":56,"line_end":56,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70588,"byte_end":70597,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/         // Delegate the `register` call to `socket`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70598,"byte_end":70653,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"/         self.socket.register(registry, token, interests)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70654,"byte_end":70714,"line_start":59,"line_end":59,"column_start":1,"column_end":61}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70715,"byte_end":70724,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70725,"byte_end":70728,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     fn reregister(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70729,"byte_end":70817,"line_start":62,"line_end":62,"column_start":1,"column_end":89}},{"value":"/         -> io::Result<()>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70818,"byte_end":70847,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70848,"byte_end":70857,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/         // Delegate the `reregister` call to `socket`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70858,"byte_end":70915,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/         self.socket.reregister(registry, token, interests)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70916,"byte_end":70978,"line_start":66,"line_end":66,"column_start":1,"column_end":63}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70979,"byte_end":70988,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70989,"byte_end":70992,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     fn deregister(&mut self, registry: &Registry) -> io::Result<()> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":70993,"byte_end":71066,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/         // Delegate the `deregister` call to `socket`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":71067,"byte_end":71124,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/         self.socket.deregister(registry)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":71125,"byte_end":71169,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":71170,"byte_end":71179,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":71180,"byte_end":71185,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":71186,"byte_end":71193,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":71562,"byte_end":71570,"line_start":83,"line_end":83,"column_start":8,"column_end":16},"name":"register","qualname":"::event::source::Source::register","value":"pub fn register(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" Register `self` with the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Register `self` with the given `Registry` instance.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":71217,"byte_end":71272,"line_start":76,"line_end":76,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":71277,"byte_end":71280,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use [`Registry::register`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":71285,"byte_end":71360,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ instead. Implementors should handle registration by delegating the call","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":71365,"byte_end":71440,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to another `Source` type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":71445,"byte_end":71474,"line_start":80,"line_end":80,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":71479,"byte_end":71482,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Registry::register`]: ../struct.Registry.html#method.register","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":71487,"byte_end":71554,"line_start":82,"line_end":82,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":72065,"byte_end":72075,"line_start":97,"line_end":97,"column_start":8,"column_end":18},"name":"reregister","qualname":"::event::source::Source::reregister","value":"pub fn reregister(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" Re-register `self` with the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Re-register `self` with the given `Registry` instance.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":71701,"byte_end":71759,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":71764,"byte_end":71767,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":71772,"byte_end":71824,"line_start":92,"line_end":92,"column_start":5,"column_end":57}},{"value":"/ [`Registry::reregister`] instead. Implementors should handle","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":71829,"byte_end":71893,"line_start":93,"line_end":93,"column_start":5,"column_end":69}},{"value":"/ re-registration by either delegating the call to another `Source` type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":71898,"byte_end":71973,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":71978,"byte_end":71981,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ [`Registry::reregister`]: ../struct.Registry.html#method.reregister","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":71986,"byte_end":72057,"line_start":96,"line_end":96,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":72561,"byte_end":72571,"line_start":111,"line_end":111,"column_start":8,"column_end":18},"name":"deregister","qualname":"::event::source::Source::deregister","value":"pub fn deregister(&mut Self, &Registry) -> io::Result<()>","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" Deregister `self` from the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Deregister `self` from the given `Registry` instance.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":72206,"byte_end":72263,"line_start":104,"line_end":104,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":72268,"byte_end":72271,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":72276,"byte_end":72328,"line_start":106,"line_end":106,"column_start":5,"column_end":57}},{"value":"/ [`Registry::deregister`] instead. Implementors should handle","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":72333,"byte_end":72397,"line_start":107,"line_end":107,"column_start":5,"column_end":69}},{"value":"/ deregistration by delegating the call to another `Source` type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":72402,"byte_end":72469,"line_start":108,"line_end":108,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":72474,"byte_end":72477,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ [`Registry::deregister`]: ../struct.Registry.html#method.deregister","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":72482,"byte_end":72553,"line_start":110,"line_end":110,"column_start":5,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":1090},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1311},{"krate":0,"index":1314},{"krate":0,"index":1418},{"krate":0,"index":1421},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1716},{"krate":0,"index":1719},{"krate":0,"index":1722}],"decl_id":null,"docs":" Networking primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/macros.rs","byte_start":10437,"byte_end":10460,"line_start":42,"line_end":42,"column_start":13,"column_end":36}},{"value":"/ Networking primitives.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14121028,"byte_end":14121054,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14121055,"byte_end":14121058,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The types provided in this module are non-blocking by default and are","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14121059,"byte_end":14121132,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ designed to be portable across all supported Mio platforms. As long as the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14121133,"byte_end":14121211,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ [portability guidelines] are followed, the behavior should be identical no","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14121212,"byte_end":14121290,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ matter the target platform.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14121291,"byte_end":14121322,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14121323,"byte_end":14121326,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [portability guidelines]: ../struct.Poll.html#portability","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14121327,"byte_end":14121388,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14121389,"byte_end":14121392,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14121393,"byte_end":14121404,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14121405,"byte_end":14121408,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ When using a datagram based socket, i.e. [`UdpSocket`] or [`UnixDatagram`],","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14121409,"byte_end":14121488,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ its only possible to receive a packet once. This means that if you provide a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14121489,"byte_end":14121569,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ buffer that is too small you won't be able to receive the data anymore. How","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14121570,"byte_end":14121649,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ OSs deal with this situation is different for each OS:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14121650,"byte_end":14121708,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/  * Unixes, such as Linux, FreeBSD and macOS, will simply fill the buffer and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14121709,"byte_end":14121789,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/    return the amount of bytes written. This means that if the returned value","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14121790,"byte_end":14121870,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/    is equal to the size of the buffer it may have only written a part of the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14121871,"byte_end":14121951,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/    packet (or the packet has the same size as the buffer).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14121952,"byte_end":14122014,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"/  * Windows returns an `WSAEMSGSIZE` error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14122015,"byte_end":14122061,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14122062,"byte_end":14122065,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Mio does not change the value (either ok or error) returned by the OS, it's","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14122066,"byte_end":14122145,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ up to the user handle this. How to deal with these difference is still up","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14122146,"byte_end":14122223,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ for debate, specifically in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14122224,"byte_end":14122255,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/ <https://github.com/rust-lang/rust/issues/55794>. The best advice we can","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14122256,"byte_end":14122332,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ give is to always call receive with a large enough buffer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/mod.rs","byte_start":14122333,"byte_end":14122395,"line_start":26,"line_end":26,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1155},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14124125,"byte_end":14124136,"line_start":44,"line_end":44,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":1156}],"decl_id":null,"docs":" A structure representing a socket server","sig":null,"attributes":[{"value":"/ A structure representing a socket server","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14123326,"byte_end":14123370,"line_start":18,"line_end":18,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14123371,"byte_end":14123374,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14123375,"byte_end":14123389,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14123390,"byte_end":14123393,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14123497,"byte_end":14123525,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14123526,"byte_end":14123573,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14123574,"byte_end":14123619,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpListener;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14123620,"byte_end":14123650,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14123651,"byte_end":14123679,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14123680,"byte_end":14123683,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let mut listener = TcpListener::bind(\"127.0.0.1:34255\".parse()?)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14123684,"byte_end":14123754,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14123755,"byte_end":14123758,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14123759,"byte_end":14123791,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14123792,"byte_end":14123840,"line_start":33,"line_end":33,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14123841,"byte_end":14123844,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ // Register the socket with `Poll`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14123845,"byte_end":14123883,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut listener, Token(0), Interest::READABLE)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14123884,"byte_end":14123959,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14123960,"byte_end":14123963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14123964,"byte_end":14124026,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14124027,"byte_end":14124030,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // There may be a socket ready to be accepted","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14124031,"byte_end":14124080,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/ #     Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14124081,"byte_end":14124097,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14124098,"byte_end":14124105,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14124106,"byte_end":14124113,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14124666,"byte_end":14124670,"line_start":59,"line_end":59,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpListener>::bind","value":"pub fn bind(SocketAddr) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to bind a new TCP listener to the specified address\n to receive new connections.","sig":null,"attributes":[{"value":"/ Convenience method to bind a new TCP listener to the specified address","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14124204,"byte_end":14124278,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ to receive new connections.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14124283,"byte_end":14124314,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14124319,"byte_end":14124322,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This function will take the following steps:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14124327,"byte_end":14124375,"line_start":52,"line_end":52,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14124380,"byte_end":14124383,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ 1. Create a new TCP socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14124388,"byte_end":14124419,"line_start":54,"line_end":54,"column_start":5,"column_end":36}},{"value":"/ 2. Set the `SO_REUSEADDR` option on the socket on Unix.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14124424,"byte_end":14124483,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/ 3. Bind the socket to the specified address.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14124488,"byte_end":14124536,"line_start":56,"line_end":56,"column_start":5,"column_end":53}},{"value":"/ 4. Calls `listen` on the socket to prepare it to receive new connections.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14124541,"byte_end":14124618,"line_start":57,"line_end":57,"column_start":5,"column_end":82}},{"value":"cfg(not(target_os = \"wasi\"))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14124623,"byte_end":14124654,"line_start":58,"line_end":58,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14125954,"byte_end":14125962,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> TcpListener","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpListener` from a standard `net::TcpListener`.","sig":null,"attributes":[{"value":"/ Creates a new `TcpListener` from a standard `net::TcpListener`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14125604,"byte_end":14125671,"line_start":81,"line_end":81,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14125676,"byte_end":14125679,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP listener from the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14125684,"byte_end":14125756,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14125761,"byte_end":14125835,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ about the underlying listener; ; it is left up to the user to set it","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14125840,"byte_end":14125912,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ in non-blocking mode.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14125917,"byte_end":14125942,"line_start":86,"line_end":86,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14126477,"byte_end":14126483,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"accept","qualname":"<TcpListener>::accept","value":"pub fn accept(&Self) -> io::Result<(TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new `TcpStream`.","sig":null,"attributes":[{"value":"/ Accepts a new `TcpStream`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14126095,"byte_end":14126125,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14126130,"byte_end":14126133,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This may return an `Err(e)` where `e.kind()` is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14126138,"byte_end":14126189,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/ `io::ErrorKind::WouldBlock`. This means a stream may be ready at a later","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14126194,"byte_end":14126270,"line_start":96,"line_end":96,"column_start":5,"column_end":81}},{"value":"/ point and one should wait for an event before calling `accept` again.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14126275,"byte_end":14126348,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14126353,"byte_end":14126356,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ If an accepted stream is returned, the remote address of the peer is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14126361,"byte_end":14126433,"line_start":99,"line_end":99,"column_start":5,"column_end":77}},{"value":"/ returned along with it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14126438,"byte_end":14126465,"line_start":100,"line_end":100,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14126749,"byte_end":14126759,"line_start":108,"line_end":108,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14126683,"byte_end":14126737,"line_start":107,"line_end":107,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14127023,"byte_end":14127030,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14126838,"byte_end":14126896,"line_start":112,"line_end":112,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14126901,"byte_end":14126904,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14126909,"byte_end":14126985,"line_start":114,"line_end":114,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14126990,"byte_end":14127011,"line_start":115,"line_end":115,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14127300,"byte_end":14127303,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14127111,"byte_end":14127169,"line_start":120,"line_end":120,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14127174,"byte_end":14127177,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14127182,"byte_end":14127248,"line_start":122,"line_end":122,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14127253,"byte_end":14127256,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14127261,"byte_end":14127288,"line_start":124,"line_end":124,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14127621,"byte_end":14127631,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14127368,"byte_end":14127426,"line_start":129,"line_end":129,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14127431,"byte_end":14127434,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14127439,"byte_end":14127513,"line_start":131,"line_end":131,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14127518,"byte_end":14127594,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14127599,"byte_end":14127609,"line_start":133,"line_end":133,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1248},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131894,"byte_end":14131903,"line_start":48,"line_end":48,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":1249}],"decl_id":null,"docs":" A non-blocking TCP stream between a local socket and a remote socket.","sig":null,"attributes":[{"value":"/ A non-blocking TCP stream between a local socket and a remote socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14130862,"byte_end":14130935,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14130936,"byte_end":14130939,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14130940,"byte_end":14130996,"line_start":18,"line_end":18,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14130997,"byte_end":14131000,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131001,"byte_end":14131015,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131016,"byte_end":14131019,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # use std::net::{TcpListener, SocketAddr};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131123,"byte_end":14131169,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131170,"byte_end":14131198,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131199,"byte_end":14131204,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131205,"byte_end":14131252,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131253,"byte_end":14131306,"line_start":28,"line_end":28,"column_start":1,"column_end":54}},{"value":"/ let listener = TcpListener::bind(address)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131307,"byte_end":14131354,"line_start":29,"line_end":29,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131355,"byte_end":14131400,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131401,"byte_end":14131429,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131430,"byte_end":14131458,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131459,"byte_end":14131462,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let mut stream = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131463,"byte_end":14131528,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131529,"byte_end":14131532,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131533,"byte_end":14131565,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131566,"byte_end":14131614,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131615,"byte_end":14131618,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Register the socket with `Poll`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131619,"byte_end":14131657,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut stream, Token(0), Interest::WRITABLE)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131658,"byte_end":14131731,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131732,"byte_end":14131735,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131736,"byte_end":14131798,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131799,"byte_end":14131802,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // The socket might be ready at this point","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131803,"byte_end":14131849,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/ #     Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131850,"byte_end":14131866,"line_start":45,"line_end":45,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131867,"byte_end":14131874,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131875,"byte_end":14131882,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14133561,"byte_end":14133568,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"connect","qualname":"<TcpStream>::connect","value":"pub fn connect(SocketAddr) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TCP stream and issue a non-blocking connect to the\n specified address.","sig":null,"attributes":[{"value":"/ Create a new TCP stream and issue a non-blocking connect to the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131967,"byte_end":14132034,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ specified address.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14132039,"byte_end":14132061,"line_start":54,"line_end":54,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14132066,"byte_end":14132069,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14132074,"byte_end":14132085,"line_start":56,"line_end":56,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14132090,"byte_end":14132093,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The returned `TcpStream` may not be connected (and thus usable), unlike","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14132098,"byte_end":14132173,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ the API found in `std::net::TcpStream`. Because Mio issues a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14132178,"byte_end":14132242,"line_start":59,"line_end":59,"column_start":5,"column_end":69}},{"value":"/ *non-blocking* connect it will not block the thread and instead return","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14132247,"byte_end":14132321,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ an unconnected `TcpStream`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14132326,"byte_end":14132357,"line_start":61,"line_end":61,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14132362,"byte_end":14132365,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Ensuring the returned stream is connected is surprisingly complex when","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14132370,"byte_end":14132444,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ considering cross-platform support. Doing this properly should follow","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14132449,"byte_end":14132522,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ the steps below, an example implementation can be found","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14132527,"byte_end":14132586,"line_start":65,"line_end":65,"column_start":5,"column_end":64}},{"value":"/ [here](https://github.com/Thomasdezeeuw/heph/blob/0c4f1ab3eaf08bea1d65776528bfd6114c9f8374/src/net/tcp/stream.rs#L560-L622).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14132591,"byte_end":14132719,"line_start":66,"line_end":66,"column_start":5,"column_end":133}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14132724,"byte_end":14132727,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/  1. Call `TcpStream::connect`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14132732,"byte_end":14132765,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/  2. Register the returned stream with at least [write interest].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14132770,"byte_end":14132838,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"/  3. Wait for a (writable) event.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14132843,"byte_end":14132879,"line_start":70,"line_end":70,"column_start":5,"column_end":41}},{"value":"/  4. Check `TcpStream::peer_addr`. If it returns `libc::EINPROGRESS` or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14132884,"byte_end":14132958,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/     `ErrorKind::NotConnected` it means the stream is not yet connected,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14132963,"byte_end":14133038,"line_start":72,"line_end":72,"column_start":5,"column_end":80}},{"value":"/     go back to step 3. If it returns an address it means the stream is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14133043,"byte_end":14133117,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/     connected, go to step 5. If another error is returned something","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14133122,"byte_end":14133193,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/     whent wrong.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14133198,"byte_end":14133218,"line_start":75,"line_end":75,"column_start":5,"column_end":25}},{"value":"/  5. Now the stream can be used.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14133223,"byte_end":14133258,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14133263,"byte_end":14133266,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This may return a `WouldBlock` in which case the socket connection","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14133271,"byte_end":14133341,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ cannot be completed immediately, it usually means there are insufficient","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14133346,"byte_end":14133422,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ entries in the routing cache.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14133427,"byte_end":14133460,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14133465,"byte_end":14133468,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [write interest]: Interest::WRITABLE","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14133473,"byte_end":14133513,"line_start":82,"line_end":82,"column_start":5,"column_end":45}},{"value":"cfg(not(target_os = \"wasi\"))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14133518,"byte_end":14133549,"line_start":83,"line_end":83,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14134458,"byte_end":14134466,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(net::TcpStream) -> TcpStream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpStream` from a standard `net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates a new `TcpStream` from a standard `net::TcpStream`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14133907,"byte_end":14133970,"line_start":94,"line_end":94,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14133975,"byte_end":14133978,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP stream from the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14133983,"byte_end":14134053,"line_start":96,"line_end":96,"column_start":5,"column_end":75}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14134058,"byte_end":14134132,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14134137,"byte_end":14134208,"line_start":98,"line_end":98,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14134213,"byte_end":14134235,"line_start":99,"line_end":99,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14134240,"byte_end":14134243,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14134248,"byte_end":14134258,"line_start":101,"line_end":101,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14134263,"byte_end":14134266,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ The TCP stream here will not have `connect` called on it, so it","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14134271,"byte_end":14134338,"line_start":103,"line_end":103,"column_start":5,"column_end":72}},{"value":"/ should already be connected via some other means (be it manually, or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14134343,"byte_end":14134415,"line_start":104,"line_end":104,"column_start":5,"column_end":77}},{"value":"/ the standard library).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14134420,"byte_end":14134446,"line_start":105,"line_end":105,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14134674,"byte_end":14134683,"line_start":113,"line_end":113,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote peer of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote peer of this TCP connection.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14134589,"byte_end":14134662,"line_start":112,"line_end":112,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14134845,"byte_end":14134855,"line_start":118,"line_end":118,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this TCP connection.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14134761,"byte_end":14134833,"line_start":117,"line_end":117,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14135209,"byte_end":14135217,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14134934,"byte_end":14135000,"line_start":122,"line_end":122,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14135005,"byte_end":14135008,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14135013,"byte_end":14135085,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14135090,"byte_end":14135159,"line_start":125,"line_end":125,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14135164,"byte_end":14135197,"line_start":126,"line_end":126,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14135961,"byte_end":14135972,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14135304,"byte_end":14135366,"line_start":131,"line_end":131,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14135371,"byte_end":14135374,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14135379,"byte_end":14135448,"line_start":133,"line_end":133,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14135453,"byte_end":14135526,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14135531,"byte_end":14135604,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14135609,"byte_end":14135684,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14135689,"byte_end":14135707,"line_start":137,"line_end":137,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14135712,"byte_end":14135715,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14135720,"byte_end":14135731,"line_start":139,"line_end":139,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14135736,"byte_end":14135739,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14135744,"byte_end":14135820,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to set `nodelay` on an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14135825,"byte_end":14135892,"line_start":142,"line_end":142,"column_start":5,"column_end":72}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14135897,"byte_end":14135949,"line_start":143,"line_end":143,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14136509,"byte_end":14136516,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14136066,"byte_end":14136128,"line_start":148,"line_end":148,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14136133,"byte_end":14136136,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`][link].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14136141,"byte_end":14136211,"line_start":150,"line_end":150,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14136216,"byte_end":14136219,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_nodelay","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14136224,"byte_end":14136255,"line_start":152,"line_end":152,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14136260,"byte_end":14136263,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14136268,"byte_end":14136279,"line_start":154,"line_end":154,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14136284,"byte_end":14136287,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14136292,"byte_end":14136368,"line_start":156,"line_end":156,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to get `nodelay` on an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14136373,"byte_end":14136440,"line_start":157,"line_end":157,"column_start":5,"column_end":72}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14136445,"byte_end":14136497,"line_start":158,"line_end":158,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14137009,"byte_end":14137016,"line_start":173,"line_end":173,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14136586,"byte_end":14136644,"line_start":163,"line_end":163,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14136649,"byte_end":14136652,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14136657,"byte_end":14136733,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14136738,"byte_end":14136759,"line_start":166,"line_end":166,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14136764,"byte_end":14136767,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14136772,"byte_end":14136783,"line_start":168,"line_end":168,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14136788,"byte_end":14136791,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14136796,"byte_end":14136872,"line_start":170,"line_end":170,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to set `ttl` on an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14136877,"byte_end":14136940,"line_start":171,"line_end":171,"column_start":5,"column_end":68}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14136945,"byte_end":14136997,"line_start":172,"line_end":172,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14137524,"byte_end":14137527,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14137097,"byte_end":14137155,"line_start":177,"line_end":177,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14137160,"byte_end":14137163,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14137168,"byte_end":14137234,"line_start":179,"line_end":179,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14137239,"byte_end":14137242,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14137247,"byte_end":14137258,"line_start":181,"line_end":181,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14137263,"byte_end":14137266,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14137271,"byte_end":14137347,"line_start":183,"line_end":183,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to get `ttl` on an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14137352,"byte_end":14137415,"line_start":184,"line_end":184,"column_start":5,"column_end":68}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14137420,"byte_end":14137472,"line_start":185,"line_end":185,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14137477,"byte_end":14137480,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14137485,"byte_end":14137512,"line_start":187,"line_end":187,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14137845,"byte_end":14137855,"line_start":197,"line_end":197,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14137592,"byte_end":14137650,"line_start":192,"line_end":192,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14137655,"byte_end":14137658,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14137663,"byte_end":14137737,"line_start":194,"line_end":194,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14137742,"byte_end":14137818,"line_start":195,"line_end":195,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14137823,"byte_end":14137833,"line_start":196,"line_end":196,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14138293,"byte_end":14138297,"line_start":207,"line_end":207,"column_start":12,"column_end":16},"name":"peek","qualname":"<TcpStream>::peek","value":"pub fn peek(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14137941,"byte_end":14138011,"line_start":201,"line_end":201,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14138016,"byte_end":14138085,"line_start":202,"line_end":202,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14138090,"byte_end":14138129,"line_start":203,"line_end":203,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14138134,"byte_end":14138137,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14138142,"byte_end":14138216,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14138221,"byte_end":14138281,"line_start":206,"line_end":206,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14140302,"byte_end":14140308,"line_start":262,"line_end":262,"column_start":12,"column_end":18},"name":"try_io","qualname":"<TcpStream>::try_io","value":"pub fn try_io<F, T>(&Self, F) -> io::Result<T> where F: FnOnce() ->\nio::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14138384,"byte_end":14138458,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14138463,"byte_end":14138501,"line_start":212,"line_end":212,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14138506,"byte_end":14138509,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14138514,"byte_end":14138525,"line_start":214,"line_end":214,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14138530,"byte_end":14138533,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14138538,"byte_end":14138608,"line_start":216,"line_end":216,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14138613,"byte_end":14138689,"line_start":217,"line_end":217,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14138694,"byte_end":14138731,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14138736,"byte_end":14138739,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14138744,"byte_end":14138789,"line_start":220,"line_end":220,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14138794,"byte_end":14138797,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14138802,"byte_end":14138816,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14138821,"byte_end":14138824,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14138914,"byte_end":14138942,"line_start":226,"line_end":226,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14138947,"byte_end":14138952,"line_start":227,"line_end":227,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14138957,"byte_end":14139004,"line_start":228,"line_end":228,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139009,"byte_end":14139025,"line_start":229,"line_end":229,"column_start":5,"column_end":21}},{"value":"/ #[cfg(unix)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139030,"byte_end":14139046,"line_start":230,"line_end":230,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139051,"byte_end":14139086,"line_start":231,"line_end":231,"column_start":5,"column_end":40}},{"value":"/ #[cfg(windows)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139091,"byte_end":14139110,"line_start":232,"line_end":232,"column_start":5,"column_end":24}},{"value":"/ use std::os::windows::io::AsRawSocket;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139115,"byte_end":14139157,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139162,"byte_end":14139190,"line_start":234,"line_end":234,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139195,"byte_end":14139198,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ let address = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139203,"byte_end":14139255,"line_start":236,"line_end":236,"column_start":5,"column_end":57}},{"value":"/ let stream = TcpStream::connect(address)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139260,"byte_end":14139306,"line_start":237,"line_end":237,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139311,"byte_end":14139314,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is readable...","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139319,"byte_end":14139362,"line_start":239,"line_end":239,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139367,"byte_end":14139370,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ // Read from the stream using a direct libc call, of course the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139375,"byte_end":14139442,"line_start":241,"line_end":241,"column_start":5,"column_end":72}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139447,"byte_end":14139503,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139508,"byte_end":14139535,"line_start":243,"line_end":243,"column_start":5,"column_end":32}},{"value":"/ let n = stream.try_io(|| {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139540,"byte_end":14139570,"line_start":244,"line_end":244,"column_start":5,"column_end":35}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139575,"byte_end":14139626,"line_start":245,"line_end":245,"column_start":5,"column_end":56}},{"value":"/     #[cfg(unix)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139631,"byte_end":14139651,"line_start":246,"line_end":246,"column_start":5,"column_end":25}},{"value":"/     let res = unsafe { libc::recv(stream.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139656,"byte_end":14139739,"line_start":247,"line_end":247,"column_start":5,"column_end":88}},{"value":"/     #[cfg(windows)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139744,"byte_end":14139767,"line_start":248,"line_end":248,"column_start":5,"column_end":28}},{"value":"/     let res = unsafe { libc::recvfrom(stream.as_raw_socket() as usize, buf_ptr, buf.len() as i32, 0, std::ptr::null_mut(), std::ptr::null_mut()) };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139772,"byte_end":14139923,"line_start":249,"line_end":249,"column_start":5,"column_end":156}},{"value":"/     if res != -1 {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139928,"byte_end":14139950,"line_start":250,"line_end":250,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139955,"byte_end":14139983,"line_start":251,"line_end":251,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14139988,"byte_end":14140004,"line_start":252,"line_end":252,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::recv, the closure","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14140009,"byte_end":14140082,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14140087,"byte_end":14140135,"line_start":254,"line_end":254,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14140140,"byte_end":14140183,"line_start":255,"line_end":255,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14140188,"byte_end":14140197,"line_start":256,"line_end":256,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14140202,"byte_end":14140210,"line_start":257,"line_end":257,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14140215,"byte_end":14140249,"line_start":258,"line_end":258,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14140254,"byte_end":14140266,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14140271,"byte_end":14140278,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14140283,"byte_end":14140290,"line_start":261,"line_end":261,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1366},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147806,"byte_end":14147815,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":1367}],"decl_id":null,"docs":" A User Datagram Protocol socket.","sig":null,"attributes":[{"value":"/ A User Datagram Protocol socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14145168,"byte_end":14145204,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14145205,"byte_end":14145208,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This is an implementation of a bound UDP socket. This supports both IPv4 and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14145209,"byte_end":14145289,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ IPv6 addresses, and there is no corresponding notion of a server because UDP","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14145290,"byte_end":14145370,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ is a datagram protocol.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14145371,"byte_end":14145398,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14145399,"byte_end":14145402,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14145403,"byte_end":14145417,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14145418,"byte_end":14145421,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14145525,"byte_end":14145553,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14145554,"byte_end":14145559,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14145560,"byte_end":14145607,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/ // An Echo program:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14145608,"byte_end":14145631,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ // SENDER -> sends a message.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14145632,"byte_end":14145665,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ // ECHOER -> listens and prints the message received.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14145666,"byte_end":14145723,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14145724,"byte_end":14145727,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14145728,"byte_end":14145756,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14145757,"byte_end":14145802,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14145803,"byte_end":14145831,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14145832,"byte_end":14145835,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ const SENDER: Token = Token(0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14145836,"byte_end":14145871,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/ const ECHOER: Token = Token(1);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14145872,"byte_end":14145907,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14145908,"byte_end":14145911,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // This operation will fail if the address is in use, so we select different ports for each","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14145912,"byte_end":14146007,"line_start":46,"line_end":46,"column_start":1,"column_end":96}},{"value":"/ // socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146008,"byte_end":14146022,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ let mut sender_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146023,"byte_end":14146092,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ let mut echoer_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146093,"byte_end":14146162,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146163,"byte_end":14146166,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ // If we do not use connect here, SENDER and ECHOER would need to call send_to and recv_from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146167,"byte_end":14146263,"line_start":51,"line_end":51,"column_start":1,"column_end":97}},{"value":"/ // respectively.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146264,"byte_end":14146284,"line_start":52,"line_end":52,"column_start":1,"column_end":21}},{"value":"/ sender_socket.connect(echoer_socket.local_addr()?)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146285,"byte_end":14146341,"line_start":53,"line_end":53,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146342,"byte_end":14146345,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // We need a Poll to check if SENDER is ready to be written into, and if ECHOER is ready to be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146346,"byte_end":14146444,"line_start":55,"line_end":55,"column_start":1,"column_end":99}},{"value":"/ // read from.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146445,"byte_end":14146462,"line_start":56,"line_end":56,"column_start":1,"column_end":18}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146463,"byte_end":14146495,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146496,"byte_end":14146499,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // We register our sockets here so that we can check if they are ready to be written/read.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146500,"byte_end":14146594,"line_start":59,"line_end":59,"column_start":1,"column_end":95}},{"value":"/ poll.registry().register(&mut sender_socket, SENDER, Interest::WRITABLE)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146595,"byte_end":14146673,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ poll.registry().register(&mut echoer_socket, ECHOER, Interest::READABLE)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146674,"byte_end":14146752,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146753,"byte_end":14146756,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ let msg_to_send = [9; 9];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146757,"byte_end":14146786,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/ let mut buffer = [0; 9];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146787,"byte_end":14146815,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146816,"byte_end":14146819,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146820,"byte_end":14146868,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/ loop {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146869,"byte_end":14146879,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146880,"byte_end":14146946,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/     for event in events.iter() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146947,"byte_end":14146983,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"/         match event.token() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14146984,"byte_end":14147017,"line_start":70,"line_end":70,"column_start":1,"column_end":34}},{"value":"/             // Our SENDER is ready to be written into.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147018,"byte_end":14147076,"line_start":71,"line_end":71,"column_start":1,"column_end":59}},{"value":"/             SENDER => {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147077,"byte_end":14147104,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"/                 let bytes_sent = sender_socket.send(&msg_to_send)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147105,"byte_end":14147176,"line_start":73,"line_end":73,"column_start":1,"column_end":72}},{"value":"/                 assert_eq!(bytes_sent, 9);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147177,"byte_end":14147223,"line_start":74,"line_end":74,"column_start":1,"column_end":47}},{"value":"/                 println!(\"sent {:?} -> {:?} bytes\", msg_to_send, bytes_sent);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147224,"byte_end":14147305,"line_start":75,"line_end":75,"column_start":1,"column_end":82}},{"value":"/             },","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147306,"byte_end":14147324,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"/             // Our ECHOER is ready to be read from.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147325,"byte_end":14147380,"line_start":77,"line_end":77,"column_start":1,"column_end":56}},{"value":"/             ECHOER => {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147381,"byte_end":14147408,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/                 let num_recv = echoer_socket.recv(&mut buffer)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147409,"byte_end":14147477,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/                 println!(\"echo {:?} -> {:?}\", buffer, num_recv);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147478,"byte_end":14147546,"line_start":80,"line_end":80,"column_start":1,"column_end":69}},{"value":"/                 buffer = [0; 9];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147547,"byte_end":14147583,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/                 # drop(buffer); // Silence unused assignment warning.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147584,"byte_end":14147657,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/                 # return Ok(());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147658,"byte_end":14147694,"line_start":83,"line_end":83,"column_start":1,"column_end":37}},{"value":"/             }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147695,"byte_end":14147712,"line_start":84,"line_end":84,"column_start":1,"column_end":18}},{"value":"/             _ => unreachable!()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147713,"byte_end":14147748,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147749,"byte_end":14147762,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147763,"byte_end":14147772,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147773,"byte_end":14147778,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147779,"byte_end":14147786,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147787,"byte_end":14147794,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14148789,"byte_end":14148793,"line_start":121,"line_end":121,"column_start":12,"column_end":16},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub fn bind(SocketAddr) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket from the given address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket from the given address.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147879,"byte_end":14147927,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147932,"byte_end":14147935,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147940,"byte_end":14147954,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147959,"byte_end":14147962,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14148078,"byte_end":14148106,"line_start":102,"line_end":102,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14148111,"byte_end":14148116,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14148121,"byte_end":14148168,"line_start":104,"line_end":104,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14148173,"byte_end":14148201,"line_start":105,"line_end":105,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14148206,"byte_end":14148209,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ // We must bind it to an open address.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14148214,"byte_end":14148256,"line_start":107,"line_end":107,"column_start":5,"column_end":47}},{"value":"/ let socket = match UdpSocket::bind(\"127.0.0.1:0\".parse()?) {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14148261,"byte_end":14148325,"line_start":108,"line_end":108,"column_start":5,"column_end":69}},{"value":"/     Ok(new_socket) => new_socket,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14148330,"byte_end":14148367,"line_start":109,"line_end":109,"column_start":5,"column_end":42}},{"value":"/     Err(fail) => {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14148372,"byte_end":14148394,"line_start":110,"line_end":110,"column_start":5,"column_end":27}},{"value":"/         // We panic! here, but you could try to bind it again on another address.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14148399,"byte_end":14148484,"line_start":111,"line_end":111,"column_start":5,"column_end":90}},{"value":"/         panic!(\"Failed to bind socket. {:?}\", fail);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14148489,"byte_end":14148545,"line_start":112,"line_end":112,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14148550,"byte_end":14148559,"line_start":113,"line_end":113,"column_start":5,"column_end":14}},{"value":"/ };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14148564,"byte_end":14148570,"line_start":114,"line_end":114,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14148575,"byte_end":14148578,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ // Our socket was created, but we should not use it before checking it's readiness.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14148583,"byte_end":14148670,"line_start":116,"line_end":116,"column_start":5,"column_end":92}},{"value":"/ #    drop(socket); // Silence unused variable warning.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14148675,"byte_end":14148733,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/ #    Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14148738,"byte_end":14148753,"line_start":118,"line_end":118,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14148758,"byte_end":14148765,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14148770,"byte_end":14148777,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14149244,"byte_end":14149252,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from a standard `net::UdpSocket`.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from a standard `net::UdpSocket`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14148904,"byte_end":14148967,"line_start":125,"line_end":125,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14148972,"byte_end":14148975,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UDP socket from the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14148980,"byte_end":14149050,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14149055,"byte_end":14149129,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ about the underlying socket; it is left up to the user to set it in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14149134,"byte_end":14149205,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14149210,"byte_end":14149232,"line_start":130,"line_end":130,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150206,"byte_end":14150216,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address that this socket was created from.","sig":null,"attributes":[{"value":"/ Returns the socket address that this socket was created from.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14149375,"byte_end":14149440,"line_start":137,"line_end":137,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14149445,"byte_end":14149448,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14149453,"byte_end":14149467,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14149472,"byte_end":14149475,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14149873,"byte_end":14149901,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14149906,"byte_end":14149911,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14149916,"byte_end":14149963,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14149968,"byte_end":14149996,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150001,"byte_end":14150004,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150009,"byte_end":14150047,"line_start":154,"line_end":154,"column_start":5,"column_end":43}},{"value":"/ let socket = UdpSocket::bind(addr)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150052,"byte_end":14150092,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(socket.local_addr()?.ip(), addr.ip());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150097,"byte_end":14150150,"line_start":156,"line_end":156,"column_start":5,"column_end":58}},{"value":"/ #    Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150155,"byte_end":14150170,"line_start":157,"line_end":157,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150175,"byte_end":14150182,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150187,"byte_end":14150194,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150950,"byte_end":14150959,"line_start":183,"line_end":183,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UdpSocket>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote peer this socket was connected to.","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote peer this socket was connected to.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150295,"byte_end":14150374,"line_start":164,"line_end":164,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150379,"byte_end":14150382,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150387,"byte_end":14150401,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150406,"byte_end":14150409,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150525,"byte_end":14150553,"line_start":170,"line_end":170,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150558,"byte_end":14150563,"line_start":171,"line_end":171,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150568,"byte_end":14150615,"line_start":172,"line_end":172,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150620,"byte_end":14150648,"line_start":173,"line_end":173,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150653,"byte_end":14150656,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150661,"byte_end":14150699,"line_start":175,"line_end":175,"column_start":5,"column_end":43}},{"value":"/ let peer_addr = \"127.0.0.1:11100\".parse()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150704,"byte_end":14150751,"line_start":176,"line_end":176,"column_start":5,"column_end":52}},{"value":"/ let socket = UdpSocket::bind(addr)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150756,"byte_end":14150796,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/ socket.connect(peer_addr)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150801,"byte_end":14150832,"line_start":178,"line_end":178,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(socket.peer_addr()?.ip(), peer_addr.ip());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150837,"byte_end":14150894,"line_start":179,"line_end":179,"column_start":5,"column_end":62}},{"value":"/ #    Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150899,"byte_end":14150914,"line_start":180,"line_end":180,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150919,"byte_end":14150926,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14150931,"byte_end":14150938,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151840,"byte_end":14151847,"line_start":211,"line_end":211,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub fn send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151037,"byte_end":14151111,"line_start":187,"line_end":187,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151116,"byte_end":14151144,"line_start":188,"line_end":188,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151149,"byte_end":14151152,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Address type can be any implementor of `ToSocketAddrs` trait. See its","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151157,"byte_end":14151230,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ documentation for concrete examples.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151235,"byte_end":14151275,"line_start":191,"line_end":191,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151280,"byte_end":14151283,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151288,"byte_end":14151302,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151307,"byte_end":14151310,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151315,"byte_end":14151328,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151333,"byte_end":14151361,"line_start":196,"line_end":196,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151366,"byte_end":14151413,"line_start":197,"line_end":197,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151418,"byte_end":14151446,"line_start":198,"line_end":198,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151451,"byte_end":14151454,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151459,"byte_end":14151517,"line_start":200,"line_end":200,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151522,"byte_end":14151525,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is writable before calling send_to,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151530,"byte_end":14151600,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151605,"byte_end":14151652,"line_start":203,"line_end":203,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151657,"byte_end":14151660,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let bytes_sent = socket.send_to(&[9; 9], \"127.0.0.1:11100\".parse()?)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151665,"byte_end":14151739,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(bytes_sent, 9);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151744,"byte_end":14151774,"line_start":206,"line_end":206,"column_start":5,"column_end":35}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151779,"byte_end":14151784,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151789,"byte_end":14151804,"line_start":208,"line_end":208,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151809,"byte_end":14151816,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151821,"byte_end":14151828,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153148,"byte_end":14153157,"line_start":246,"line_end":246,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub fn recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket. On success, returns the number of bytes\n read and the address from whence the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket. On success, returns the number of bytes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14151982,"byte_end":14152056,"line_start":215,"line_end":215,"column_start":5,"column_end":79}},{"value":"/ read and the address from whence the data came.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152061,"byte_end":14152112,"line_start":216,"line_end":216,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152117,"byte_end":14152120,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152125,"byte_end":14152136,"line_start":218,"line_end":218,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152141,"byte_end":14152144,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152149,"byte_end":14152224,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and recv_from returns the error","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152229,"byte_end":14152307,"line_start":221,"line_end":221,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152312,"byte_end":14152360,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152365,"byte_end":14152432,"line_start":223,"line_end":223,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152437,"byte_end":14152505,"line_start":224,"line_end":224,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152510,"byte_end":14152513,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152518,"byte_end":14152532,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152537,"byte_end":14152540,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152545,"byte_end":14152558,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152563,"byte_end":14152591,"line_start":229,"line_end":229,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152596,"byte_end":14152601,"line_start":230,"line_end":230,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152606,"byte_end":14152653,"line_start":231,"line_end":231,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152658,"byte_end":14152686,"line_start":232,"line_end":232,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152691,"byte_end":14152694,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152699,"byte_end":14152757,"line_start":234,"line_end":234,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152762,"byte_end":14152765,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is readable before calling recv_from,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152770,"byte_end":14152842,"line_start":236,"line_end":236,"column_start":5,"column_end":77}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152847,"byte_end":14152894,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152899,"byte_end":14152902,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0; 9];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152907,"byte_end":14152932,"line_start":239,"line_end":239,"column_start":5,"column_end":30}},{"value":"/ let (num_recv, from_addr) = socket.recv_from(&mut buf)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14152937,"byte_end":14152997,"line_start":240,"line_end":240,"column_start":5,"column_end":65}},{"value":"/ println!(\"Received {:?} -> {:?} bytes from {:?}\", buf, num_recv, from_addr);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153002,"byte_end":14153082,"line_start":241,"line_end":241,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153087,"byte_end":14153092,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153097,"byte_end":14153112,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153117,"byte_end":14153124,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153129,"byte_end":14153136,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14154500,"byte_end":14154509,"line_start":282,"line_end":282,"column_start":12,"column_end":21},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub fn peek_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read and the address from whence\n the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153284,"byte_end":14153360,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read and the address from whence","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153365,"byte_end":14153441,"line_start":251,"line_end":251,"column_start":5,"column_end":81}},{"value":"/ the data came.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153446,"byte_end":14153464,"line_start":252,"line_end":252,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153469,"byte_end":14153472,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153477,"byte_end":14153488,"line_start":254,"line_end":254,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153493,"byte_end":14153496,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153501,"byte_end":14153576,"line_start":256,"line_end":256,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek_from returns the error","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153581,"byte_end":14153659,"line_start":257,"line_end":257,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153664,"byte_end":14153712,"line_start":258,"line_end":258,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153717,"byte_end":14153784,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153789,"byte_end":14153857,"line_start":260,"line_end":260,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153862,"byte_end":14153865,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153870,"byte_end":14153884,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153889,"byte_end":14153892,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153897,"byte_end":14153910,"line_start":264,"line_end":264,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153915,"byte_end":14153943,"line_start":265,"line_end":265,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153948,"byte_end":14153953,"line_start":266,"line_end":266,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14153958,"byte_end":14154005,"line_start":267,"line_end":267,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14154010,"byte_end":14154038,"line_start":268,"line_end":268,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14154043,"byte_end":14154046,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14154051,"byte_end":14154109,"line_start":270,"line_end":270,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14154114,"byte_end":14154117,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is readable before calling recv_from,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14154122,"byte_end":14154194,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14154199,"byte_end":14154246,"line_start":273,"line_end":273,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14154251,"byte_end":14154254,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0; 9];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14154259,"byte_end":14154284,"line_start":275,"line_end":275,"column_start":5,"column_end":30}},{"value":"/ let (num_recv, from_addr) = socket.peek_from(&mut buf)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14154289,"byte_end":14154349,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/ println!(\"Received {:?} -> {:?} bytes from {:?}\", buf, num_recv, from_addr);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14154354,"byte_end":14154434,"line_start":277,"line_end":277,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14154439,"byte_end":14154444,"line_start":278,"line_end":278,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14154449,"byte_end":14154464,"line_start":279,"line_end":279,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14154469,"byte_end":14154476,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14154481,"byte_end":14154488,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14154780,"byte_end":14154784,"line_start":288,"line_end":288,"column_start":12,"column_end":16},"name":"send","qualname":"<UdpSocket>::send","value":"pub fn send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the address previously bound via connect(). On success,\n returns the number of bytes written.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the address previously bound via connect(). On success,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14154636,"byte_end":14154723,"line_start":286,"line_end":286,"column_start":5,"column_end":92}},{"value":"/ returns the number of bytes written.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14154728,"byte_end":14154768,"line_start":287,"line_end":287,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14155408,"byte_end":14155412,"line_start":302,"line_end":302,"column_start":12,"column_end":16},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub fn recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket previously bound with connect(). On success, returns\n the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket previously bound with connect(). On success, returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14154888,"byte_end":14154974,"line_start":292,"line_end":292,"column_start":5,"column_end":91}},{"value":"/ the number of bytes read.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14154979,"byte_end":14155008,"line_start":293,"line_end":293,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14155013,"byte_end":14155016,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14155021,"byte_end":14155032,"line_start":295,"line_end":295,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14155037,"byte_end":14155040,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14155045,"byte_end":14155120,"line_start":297,"line_end":297,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and recv returns the error","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14155125,"byte_end":14155198,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14155203,"byte_end":14155251,"line_start":299,"line_end":299,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14155256,"byte_end":14155323,"line_start":300,"line_end":300,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14155328,"byte_end":14155396,"line_start":301,"line_end":301,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14156050,"byte_end":14156054,"line_start":316,"line_end":316,"column_start":12,"column_end":16},"name":"peek","qualname":"<UdpSocket>::peek","value":"pub fn peek(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14155520,"byte_end":14155596,"line_start":306,"line_end":306,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14155601,"byte_end":14155650,"line_start":307,"line_end":307,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14155655,"byte_end":14155658,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14155663,"byte_end":14155674,"line_start":309,"line_end":309,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14155679,"byte_end":14155682,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14155687,"byte_end":14155762,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek returns the error","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14155767,"byte_end":14155840,"line_start":312,"line_end":312,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14155845,"byte_end":14155893,"line_start":313,"line_end":313,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14155898,"byte_end":14155965,"line_start":314,"line_end":314,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14155970,"byte_end":14156038,"line_start":315,"line_end":315,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14156548,"byte_end":14156555,"line_start":327,"line_end":327,"column_start":12,"column_end":19},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub fn connect(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for `send()`\n and limiting packets that are read via `recv` from the address specified\n in `addr`.","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for `send()`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14156162,"byte_end":14156234,"line_start":320,"line_end":320,"column_start":5,"column_end":77}},{"value":"/ and limiting packets that are read via `recv` from the address specified","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14156239,"byte_end":14156315,"line_start":321,"line_end":321,"column_start":5,"column_end":81}},{"value":"/ in `addr`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14156320,"byte_end":14156334,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14156339,"byte_end":14156342,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This may return a `WouldBlock` in which case the socket connection","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14156347,"byte_end":14156417,"line_start":324,"line_end":324,"column_start":5,"column_end":75}},{"value":"/ cannot be completed immediately, it usually means there are insufficient","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14156422,"byte_end":14156498,"line_start":325,"line_end":325,"column_start":5,"column_end":81}},{"value":"/ entries in the routing cache.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14156503,"byte_end":14156536,"line_start":326,"line_end":326,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157409,"byte_end":14157422,"line_start":355,"line_end":355,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14156645,"byte_end":14156709,"line_start":331,"line_end":331,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14156714,"byte_end":14156717,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14156722,"byte_end":14156793,"line_start":333,"line_end":333,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14156798,"byte_end":14156810,"line_start":334,"line_end":334,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14156815,"byte_end":14156818,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14156823,"byte_end":14156837,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14156842,"byte_end":14156845,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14156961,"byte_end":14156989,"line_start":340,"line_end":340,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14156994,"byte_end":14156999,"line_start":341,"line_end":341,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157004,"byte_end":14157051,"line_start":342,"line_end":342,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157056,"byte_end":14157084,"line_start":343,"line_end":343,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157089,"byte_end":14157092,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ let broadcast_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157097,"byte_end":14157165,"line_start":345,"line_end":345,"column_start":5,"column_end":73}},{"value":"/ if broadcast_socket.broadcast()? == false {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157170,"byte_end":14157217,"line_start":346,"line_end":346,"column_start":5,"column_end":52}},{"value":"/     broadcast_socket.set_broadcast(true)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157222,"byte_end":14157268,"line_start":347,"line_end":347,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157273,"byte_end":14157278,"line_start":348,"line_end":348,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157283,"byte_end":14157286,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(broadcast_socket.broadcast()?, true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157291,"byte_end":14157343,"line_start":350,"line_end":350,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157348,"byte_end":14157353,"line_start":351,"line_end":351,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157358,"byte_end":14157373,"line_start":352,"line_end":352,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157378,"byte_end":14157385,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157390,"byte_end":14157397,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14158190,"byte_end":14158199,"line_start":381,"line_end":381,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157508,"byte_end":14157572,"line_start":359,"line_end":359,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157577,"byte_end":14157580,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157585,"byte_end":14157632,"line_start":361,"line_end":361,"column_start":5,"column_end":52}},{"value":"/ [`set_broadcast`][link].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157637,"byte_end":14157665,"line_start":362,"line_end":362,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157670,"byte_end":14157673,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_broadcast","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157678,"byte_end":14157711,"line_start":364,"line_end":364,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157716,"byte_end":14157719,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157724,"byte_end":14157738,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157743,"byte_end":14157746,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157862,"byte_end":14157890,"line_start":370,"line_end":370,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157895,"byte_end":14157900,"line_start":371,"line_end":371,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157905,"byte_end":14157952,"line_start":372,"line_end":372,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157957,"byte_end":14157985,"line_start":373,"line_end":373,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157990,"byte_end":14157993,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let broadcast_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14157998,"byte_end":14158066,"line_start":375,"line_end":375,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(broadcast_socket.broadcast()?, false);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14158071,"byte_end":14158124,"line_start":376,"line_end":376,"column_start":5,"column_end":58}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14158129,"byte_end":14158134,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14158139,"byte_end":14158154,"line_start":378,"line_end":378,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14158159,"byte_end":14158166,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14158171,"byte_end":14158178,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14158503,"byte_end":14158524,"line_start":389,"line_end":389,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14158271,"byte_end":14158340,"line_start":385,"line_end":385,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14158345,"byte_end":14158348,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14158353,"byte_end":14158427,"line_start":387,"line_end":387,"column_start":5,"column_end":79}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14158432,"byte_end":14158491,"line_start":388,"line_end":388,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1389},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14158854,"byte_end":14158871,"line_start":399,"line_end":399,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14158618,"byte_end":14158687,"line_start":393,"line_end":393,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14158692,"byte_end":14158695,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14158700,"byte_end":14158747,"line_start":395,"line_end":395,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v4`][link].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14158752,"byte_end":14158788,"line_start":396,"line_end":396,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14158793,"byte_end":14158796,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v4","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14158801,"byte_end":14158842,"line_start":398,"line_end":398,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14159332,"byte_end":14159352,"line_start":410,"line_end":410,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14158951,"byte_end":14159019,"line_start":403,"line_end":403,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14159024,"byte_end":14159027,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14159032,"byte_end":14159102,"line_start":405,"line_end":405,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14159107,"byte_end":14159181,"line_start":406,"line_end":406,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14159186,"byte_end":14159248,"line_start":407,"line_end":407,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14159253,"byte_end":14159256,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14159261,"byte_end":14159320,"line_start":409,"line_end":409,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14159679,"byte_end":14159695,"line_start":420,"line_end":420,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14159446,"byte_end":14159514,"line_start":414,"line_end":414,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14159519,"byte_end":14159522,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14159527,"byte_end":14159574,"line_start":416,"line_end":416,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_ttl_v4`][link].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14159579,"byte_end":14159614,"line_start":417,"line_end":417,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14159619,"byte_end":14159622,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_ttl_v4","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14159627,"byte_end":14159667,"line_start":419,"line_end":419,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14160009,"byte_end":14160030,"line_start":428,"line_end":428,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14159773,"byte_end":14159844,"line_start":424,"line_end":424,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14159849,"byte_end":14159852,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14159857,"byte_end":14159933,"line_start":426,"line_end":426,"column_start":5,"column_end":81}},{"value":"/ Note that this may not have any affect on IPv4 sockets.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14159938,"byte_end":14159997,"line_start":427,"line_end":427,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1393},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14160362,"byte_end":14160379,"line_start":438,"line_end":438,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14160124,"byte_end":14160195,"line_start":432,"line_end":432,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14160200,"byte_end":14160203,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14160208,"byte_end":14160255,"line_start":434,"line_end":434,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v6`][link].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14160260,"byte_end":14160296,"line_start":435,"line_end":435,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14160301,"byte_end":14160304,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v6","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14160309,"byte_end":14160350,"line_start":437,"line_end":437,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161168,"byte_end":14161175,"line_start":466,"line_end":466,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14160459,"byte_end":14160517,"line_start":442,"line_end":442,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14160522,"byte_end":14160525,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14160530,"byte_end":14160606,"line_start":444,"line_end":444,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14160611,"byte_end":14160632,"line_start":445,"line_end":445,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14160637,"byte_end":14160640,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14160645,"byte_end":14160659,"line_start":447,"line_end":447,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14160664,"byte_end":14160667,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14160783,"byte_end":14160811,"line_start":451,"line_end":451,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14160816,"byte_end":14160821,"line_start":452,"line_end":452,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14160826,"byte_end":14160873,"line_start":453,"line_end":453,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14160878,"byte_end":14160906,"line_start":454,"line_end":454,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14160911,"byte_end":14160914,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14160919,"byte_end":14160977,"line_start":456,"line_end":456,"column_start":5,"column_end":63}},{"value":"/ if socket.ttl()? < 255 {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14160982,"byte_end":14161010,"line_start":457,"line_end":457,"column_start":5,"column_end":33}},{"value":"/     socket.set_ttl(255)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161015,"byte_end":14161044,"line_start":458,"line_end":458,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161049,"byte_end":14161054,"line_start":459,"line_end":459,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161059,"byte_end":14161062,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.ttl()?, 255);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161067,"byte_end":14161102,"line_start":461,"line_end":461,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161107,"byte_end":14161112,"line_start":462,"line_end":462,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161117,"byte_end":14161132,"line_start":463,"line_end":463,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161137,"byte_end":14161144,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161149,"byte_end":14161156,"line_start":465,"line_end":465,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1395},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161922,"byte_end":14161925,"line_start":493,"line_end":493,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161256,"byte_end":14161314,"line_start":470,"line_end":470,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161319,"byte_end":14161322,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161327,"byte_end":14161393,"line_start":472,"line_end":472,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161398,"byte_end":14161401,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161406,"byte_end":14161433,"line_start":474,"line_end":474,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161438,"byte_end":14161441,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161446,"byte_end":14161460,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161465,"byte_end":14161468,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161584,"byte_end":14161612,"line_start":480,"line_end":480,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161617,"byte_end":14161622,"line_start":481,"line_end":481,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161627,"byte_end":14161674,"line_start":482,"line_end":482,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161679,"byte_end":14161707,"line_start":483,"line_end":483,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161712,"byte_end":14161715,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161720,"byte_end":14161778,"line_start":485,"line_end":485,"column_start":5,"column_end":63}},{"value":"/ socket.set_ttl(255)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161783,"byte_end":14161808,"line_start":486,"line_end":486,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161813,"byte_end":14161816,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.ttl()?, 255);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161821,"byte_end":14161856,"line_start":488,"line_end":488,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161861,"byte_end":14161866,"line_start":489,"line_end":489,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161871,"byte_end":14161886,"line_start":490,"line_end":490,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161891,"byte_end":14161898,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161903,"byte_end":14161910,"line_start":492,"line_end":492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14162469,"byte_end":14162486,"line_start":505,"line_end":505,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14161990,"byte_end":14162048,"line_start":497,"line_end":497,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14162053,"byte_end":14162056,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14162061,"byte_end":14162135,"line_start":499,"line_end":499,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14162140,"byte_end":14162213,"line_start":500,"line_end":500,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14162218,"byte_end":14162290,"line_start":501,"line_end":501,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14162295,"byte_end":14162365,"line_start":502,"line_end":502,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14162370,"byte_end":14162408,"line_start":503,"line_end":503,"column_start":5,"column_end":43}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14162413,"byte_end":14162457,"line_start":504,"line_end":504,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14162993,"byte_end":14163010,"line_start":515,"line_end":515,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14162628,"byte_end":14162688,"line_start":509,"line_end":509,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14162693,"byte_end":14162696,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14162701,"byte_end":14162775,"line_start":511,"line_end":511,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14162780,"byte_end":14162853,"line_start":512,"line_end":512,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14162858,"byte_end":14162932,"line_start":513,"line_end":513,"column_start":5,"column_end":79}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14162937,"byte_end":14162981,"line_start":514,"line_end":514,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14163413,"byte_end":14163431,"line_start":526,"line_end":526,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14163146,"byte_end":14163205,"line_start":519,"line_end":519,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14163210,"byte_end":14163213,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14163218,"byte_end":14163265,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v4`][link].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14163270,"byte_end":14163302,"line_start":522,"line_end":522,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14163307,"byte_end":14163310,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v4","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14163315,"byte_end":14163352,"line_start":524,"line_end":524,"column_start":5,"column_end":42}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14163357,"byte_end":14163401,"line_start":525,"line_end":525,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14163843,"byte_end":14163861,"line_start":537,"line_end":537,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14163574,"byte_end":14163635,"line_start":530,"line_end":530,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14163640,"byte_end":14163643,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14163648,"byte_end":14163695,"line_start":532,"line_end":532,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v6`][link].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14163700,"byte_end":14163732,"line_start":533,"line_end":533,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14163737,"byte_end":14163740,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v6","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14163745,"byte_end":14163782,"line_start":535,"line_end":535,"column_start":5,"column_end":42}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14163787,"byte_end":14163831,"line_start":536,"line_end":536,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14164120,"byte_end":14164127,"line_start":543,"line_end":543,"column_start":12,"column_end":19},"name":"only_v6","qualname":"<UdpSocket>::only_v6","value":"pub fn only_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IPV6_V6ONLY` option on this socket.\n","sig":null,"attributes":[{"value":"/ Get the value of the `IPV6_V6ONLY` option on this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14163998,"byte_end":14164059,"line_start":541,"line_end":541,"column_start":5,"column_end":66}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14164064,"byte_end":14164108,"line_start":542,"line_end":542,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14164460,"byte_end":14164470,"line_start":552,"line_end":552,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UdpSocket>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14164207,"byte_end":14164265,"line_start":547,"line_end":547,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14164270,"byte_end":14164273,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14164278,"byte_end":14164352,"line_start":549,"line_end":549,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14164357,"byte_end":14164433,"line_start":550,"line_end":550,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14164438,"byte_end":14164448,"line_start":551,"line_end":551,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14166465,"byte_end":14166471,"line_start":607,"line_end":607,"column_start":12,"column_end":18},"name":"try_io","qualname":"<UdpSocket>::try_io","value":"pub fn try_io<F, T>(&Self, F) -> io::Result<T> where F: FnOnce() ->\nio::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14164556,"byte_end":14164630,"line_start":556,"line_end":556,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14164635,"byte_end":14164673,"line_start":557,"line_end":557,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14164678,"byte_end":14164681,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14164686,"byte_end":14164697,"line_start":559,"line_end":559,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14164702,"byte_end":14164705,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14164710,"byte_end":14164780,"line_start":561,"line_end":561,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14164785,"byte_end":14164861,"line_start":562,"line_end":562,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14164866,"byte_end":14164903,"line_start":563,"line_end":563,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14164908,"byte_end":14164911,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14164916,"byte_end":14164961,"line_start":565,"line_end":565,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14164966,"byte_end":14164969,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14164974,"byte_end":14164988,"line_start":567,"line_end":567,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14164993,"byte_end":14164996,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165086,"byte_end":14165114,"line_start":571,"line_end":571,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165119,"byte_end":14165124,"line_start":572,"line_end":572,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165129,"byte_end":14165176,"line_start":573,"line_end":573,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165181,"byte_end":14165197,"line_start":574,"line_end":574,"column_start":5,"column_end":21}},{"value":"/ #[cfg(unix)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165202,"byte_end":14165218,"line_start":575,"line_end":575,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165223,"byte_end":14165258,"line_start":576,"line_end":576,"column_start":5,"column_end":40}},{"value":"/ #[cfg(windows)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165263,"byte_end":14165282,"line_start":577,"line_end":577,"column_start":5,"column_end":24}},{"value":"/ use std::os::windows::io::AsRawSocket;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165287,"byte_end":14165329,"line_start":578,"line_end":578,"column_start":5,"column_end":47}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165334,"byte_end":14165362,"line_start":579,"line_end":579,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165367,"byte_end":14165370,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ let address = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165375,"byte_end":14165427,"line_start":581,"line_end":581,"column_start":5,"column_end":57}},{"value":"/ let dgram = UdpSocket::bind(address)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165432,"byte_end":14165474,"line_start":582,"line_end":582,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165479,"byte_end":14165482,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ // Wait until the dgram is readable...","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165487,"byte_end":14165529,"line_start":584,"line_end":584,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165534,"byte_end":14165537,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ // Read from the dgram using a direct libc call, of course the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165542,"byte_end":14165608,"line_start":586,"line_end":586,"column_start":5,"column_end":71}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165613,"byte_end":14165669,"line_start":587,"line_end":587,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165674,"byte_end":14165701,"line_start":588,"line_end":588,"column_start":5,"column_end":32}},{"value":"/ let n = dgram.try_io(|| {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165706,"byte_end":14165735,"line_start":589,"line_end":589,"column_start":5,"column_end":34}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165740,"byte_end":14165791,"line_start":590,"line_end":590,"column_start":5,"column_end":56}},{"value":"/     #[cfg(unix)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165796,"byte_end":14165816,"line_start":591,"line_end":591,"column_start":5,"column_end":25}},{"value":"/     let res = unsafe { libc::recv(dgram.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165821,"byte_end":14165903,"line_start":592,"line_end":592,"column_start":5,"column_end":87}},{"value":"/     #[cfg(windows)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165908,"byte_end":14165931,"line_start":593,"line_end":593,"column_start":5,"column_end":28}},{"value":"/     let res = unsafe { libc::recvfrom(dgram.as_raw_socket() as usize, buf_ptr, buf.len() as i32, 0, std::ptr::null_mut(), std::ptr::null_mut()) };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14165936,"byte_end":14166086,"line_start":594,"line_end":594,"column_start":5,"column_end":155}},{"value":"/     if res != -1 {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14166091,"byte_end":14166113,"line_start":595,"line_end":595,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14166118,"byte_end":14166146,"line_start":596,"line_end":596,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14166151,"byte_end":14166167,"line_start":597,"line_end":597,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::recv, the closure","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14166172,"byte_end":14166245,"line_start":598,"line_end":598,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14166250,"byte_end":14166298,"line_start":599,"line_end":599,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14166303,"byte_end":14166346,"line_start":600,"line_end":600,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14166351,"byte_end":14166360,"line_start":601,"line_end":601,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14166365,"byte_end":14166373,"line_start":602,"line_end":602,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14166378,"byte_end":14166412,"line_start":603,"line_end":603,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14166417,"byte_end":14166429,"line_start":604,"line_end":604,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14166434,"byte_end":14166441,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14166446,"byte_end":14166453,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1471},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14169011,"byte_end":14169023,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"UnixDatagram","qualname":"::net::uds::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":1472}],"decl_id":null,"docs":" A Unix datagram socket.\n","sig":null,"attributes":[{"value":"/ A Unix datagram socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14168972,"byte_end":14168999,"line_start":10,"line_end":10,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1474},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14169164,"byte_end":14169168,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram socket bound to the given path.\n","sig":null,"attributes":[{"value":"/ Creates a Unix datagram socket bound to the given path.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14169093,"byte_end":14169152,"line_start":16,"line_end":16,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14169662,"byte_end":14169670,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"pub fn from_std(net::UnixDatagram) -> UnixDatagram","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` from a standard `net::UnixDatagram`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` from a standard `net::UnixDatagram`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14169311,"byte_end":14169380,"line_start":21,"line_end":21,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14169385,"byte_end":14169388,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix datagram from the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14169393,"byte_end":14169466,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14169471,"byte_end":14169545,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ about the underlying datagram; it is left up to the user to set it in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14169550,"byte_end":14169623,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14169628,"byte_end":14169650,"line_start":26,"line_end":26,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14169987,"byte_end":14169994,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub fn connect<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14169802,"byte_end":14169851,"line_start":33,"line_end":33,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14169856,"byte_end":14169859,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This may return a `WouldBlock` in which case the socket connection","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14169864,"byte_end":14169934,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ cannot be completed immediately.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14169939,"byte_end":14169975,"line_start":36,"line_end":36,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14170172,"byte_end":14170179,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix Datagram socket which is not bound to any address.\n","sig":null,"attributes":[{"value":"/ Creates a Unix Datagram socket which is not bound to any address.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14170091,"byte_end":14170160,"line_start":41,"line_end":41,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14170349,"byte_end":14170353,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Create an unnamed pair of connected sockets.\n","sig":null,"attributes":[{"value":"/ Create an unnamed pair of connected sockets.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14170289,"byte_end":14170337,"line_start":46,"line_end":46,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14170663,"byte_end":14170673,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket.\n","sig":null,"attributes":[{"value":"/ Returns the address of this socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14170612,"byte_end":14170651,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1483},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14170907,"byte_end":14170916,"line_start":64,"line_end":64,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14170777,"byte_end":14170823,"line_start":61,"line_end":61,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14170828,"byte_end":14170831,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14170836,"byte_end":14170895,"line_start":63,"line_end":63,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1484},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14171177,"byte_end":14171186,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub fn recv_from(&Self, &mut [u8]) -> io::Result<(usize, sys::SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14171019,"byte_end":14171053,"line_start":68,"line_end":68,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14171058,"byte_end":14171061,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the address from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14171066,"byte_end":14171135,"line_start":70,"line_end":70,"column_start":5,"column_end":74}},{"value":"/ whence the data came.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14171140,"byte_end":14171165,"line_start":71,"line_end":71,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14171460,"byte_end":14171464,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub fn recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14171352,"byte_end":14171386,"line_start":77,"line_end":77,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14171391,"byte_end":14171394,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14171399,"byte_end":14171448,"line_start":79,"line_end":79,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14171703,"byte_end":14171710,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub fn send_to<P: AsRef<Path>>(&Self, &[u8], P) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14171572,"byte_end":14171626,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14171631,"byte_end":14171634,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14171639,"byte_end":14171691,"line_start":86,"line_end":86,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14172135,"byte_end":14172139,"line_start":97,"line_end":97,"column_start":12,"column_end":16},"name":"send","qualname":"<UnixDatagram>::send","value":"pub fn send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14171848,"byte_end":14171898,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14171903,"byte_end":14171906,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The peer address may be set by the `connect` method, and this method","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14171911,"byte_end":14171983,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ will return an error if the socket has not already been connected.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14171988,"byte_end":14172058,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14172063,"byte_end":14172066,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14172071,"byte_end":14172123,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1493},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14172302,"byte_end":14172312,"line_start":102,"line_end":102,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14172243,"byte_end":14172290,"line_start":101,"line_end":101,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14172678,"byte_end":14172686,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shut down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shut down the read, write, or both halves of this connection.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14172398,"byte_end":14172463,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14172468,"byte_end":14172471,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14172476,"byte_end":14172544,"line_start":108,"line_end":108,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14172549,"byte_end":14172619,"line_start":109,"line_end":109,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14172624,"byte_end":14172666,"line_start":110,"line_end":110,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1495},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174993,"byte_end":14174999,"line_start":176,"line_end":176,"column_start":12,"column_end":18},"name":"try_io","qualname":"<UnixDatagram>::try_io","value":"pub fn try_io<F, T>(&Self, F) -> io::Result<T> where F: FnOnce() ->\nio::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14172773,"byte_end":14172847,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14172852,"byte_end":14172890,"line_start":116,"line_end":116,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14172895,"byte_end":14172898,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14172903,"byte_end":14172914,"line_start":118,"line_end":118,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14172919,"byte_end":14172922,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14172927,"byte_end":14172997,"line_start":120,"line_end":120,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173002,"byte_end":14173078,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173083,"byte_end":14173120,"line_start":122,"line_end":122,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173125,"byte_end":14173128,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173133,"byte_end":14173178,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173183,"byte_end":14173186,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173191,"byte_end":14173205,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173210,"byte_end":14173213,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173218,"byte_end":14173225,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173230,"byte_end":14173258,"line_start":129,"line_end":129,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173263,"byte_end":14173268,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173273,"byte_end":14173320,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173325,"byte_end":14173341,"line_start":132,"line_end":132,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173346,"byte_end":14173381,"line_start":133,"line_end":133,"column_start":5,"column_end":40}},{"value":"/ use mio::net::UnixDatagram;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173386,"byte_end":14173417,"line_start":134,"line_end":134,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173422,"byte_end":14173425,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ let (dgram1, dgram2) = UnixDatagram::pair()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173430,"byte_end":14173479,"line_start":136,"line_end":136,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173484,"byte_end":14173487,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ // Wait until the dgram is writable...","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173492,"byte_end":14173534,"line_start":138,"line_end":138,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173539,"byte_end":14173542,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ // Write to the dgram using a direct libc call, of course the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173547,"byte_end":14173612,"line_start":140,"line_end":140,"column_start":5,"column_end":70}},{"value":"/ // `io::Write` implementation would be easier to use.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173617,"byte_end":14173674,"line_start":141,"line_end":141,"column_start":5,"column_end":62}},{"value":"/ let buf = b\"hello\";","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173679,"byte_end":14173702,"line_start":142,"line_end":142,"column_start":5,"column_end":28}},{"value":"/ let n = dgram1.try_io(|| {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173707,"byte_end":14173737,"line_start":143,"line_end":143,"column_start":5,"column_end":35}},{"value":"/     let buf_ptr = &buf as *const _ as *const _;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173742,"byte_end":14173793,"line_start":144,"line_end":144,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::send(dgram1.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173798,"byte_end":14173881,"line_start":145,"line_end":145,"column_start":5,"column_end":88}},{"value":"/     if res != -1 {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173886,"byte_end":14173908,"line_start":146,"line_end":146,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173913,"byte_end":14173941,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173946,"byte_end":14173962,"line_start":148,"line_end":148,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::send, the closure","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14173967,"byte_end":14174040,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174045,"byte_end":14174093,"line_start":150,"line_end":150,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174098,"byte_end":14174141,"line_start":151,"line_end":151,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174146,"byte_end":14174155,"line_start":152,"line_end":152,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174160,"byte_end":14174168,"line_start":153,"line_end":153,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"write {} bytes\", n);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174173,"byte_end":14174208,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174213,"byte_end":14174216,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ // Wait until the dgram is readable...","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174221,"byte_end":14174263,"line_start":156,"line_end":156,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174268,"byte_end":14174271,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ // Read from the dgram using a direct libc call, of course the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174276,"byte_end":14174342,"line_start":158,"line_end":158,"column_start":5,"column_end":71}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174347,"byte_end":14174403,"line_start":159,"line_end":159,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174408,"byte_end":14174435,"line_start":160,"line_end":160,"column_start":5,"column_end":32}},{"value":"/ let n = dgram2.try_io(|| {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174440,"byte_end":14174470,"line_start":161,"line_end":161,"column_start":5,"column_end":35}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174475,"byte_end":14174526,"line_start":162,"line_end":162,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::recv(dgram2.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174531,"byte_end":14174614,"line_start":163,"line_end":163,"column_start":5,"column_end":88}},{"value":"/     if res != -1 {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174619,"byte_end":14174641,"line_start":164,"line_end":164,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174646,"byte_end":14174674,"line_start":165,"line_end":165,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174679,"byte_end":14174695,"line_start":166,"line_end":166,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::recv, the closure","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174700,"byte_end":14174773,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174778,"byte_end":14174826,"line_start":168,"line_end":168,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174831,"byte_end":14174874,"line_start":169,"line_end":169,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174879,"byte_end":14174888,"line_start":170,"line_end":170,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174893,"byte_end":14174901,"line_start":171,"line_end":171,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174906,"byte_end":14174940,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174945,"byte_end":14174957,"line_start":173,"line_end":173,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174962,"byte_end":14174969,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14174974,"byte_end":14174981,"line_start":175,"line_end":175,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1567},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14176715,"byte_end":14176727,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"UnixListener","qualname":"::net::uds::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":1568}],"decl_id":null,"docs":" A non-blocking Unix domain socket server.\n","sig":null,"attributes":[{"value":"/ A non-blocking Unix domain socket server.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14176658,"byte_end":14176703,"line_start":10,"line_end":10,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14176872,"byte_end":14176876,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified socket.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14176797,"byte_end":14176860,"line_start":16,"line_end":16,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14177370,"byte_end":14177378,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"pub fn from_std(net::UnixListener) -> UnixListener","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` from a standard `net::UnixListener`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` from a standard `net::UnixListener`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14177019,"byte_end":14177088,"line_start":21,"line_end":21,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14177093,"byte_end":14177096,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix listener from the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14177101,"byte_end":14177174,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14177179,"byte_end":14177253,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ about the underlying listener; it is left up to the user to set it in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14177258,"byte_end":14177331,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14177336,"byte_end":14177358,"line_start":26,"line_end":26,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14177693,"byte_end":14177699,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"accept","qualname":"<UnixListener>::accept","value":"pub fn accept(&Self) -> io::Result<(UnixStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14177514,"byte_end":14177569,"line_start":33,"line_end":33,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14177574,"byte_end":14177577,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The call is responsible for ensuring that the listening socket is in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14177582,"byte_end":14177654,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14177659,"byte_end":14177681,"line_start":36,"line_end":36,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14177874,"byte_end":14177884,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14177808,"byte_end":14177862,"line_start":41,"line_end":41,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14178047,"byte_end":14178057,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14177988,"byte_end":14178035,"line_start":46,"line_end":46,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1652},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14179747,"byte_end":14179757,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"UnixStream","qualname":"::net::uds::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":1653}],"decl_id":null,"docs":" A non-blocking Unix stream socket.\n","sig":null,"attributes":[{"value":"/ A non-blocking Unix stream socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14179697,"byte_end":14179735,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1655},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14180040,"byte_end":14180047,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixStream>::connect","value":"pub fn connect<P: AsRef<Path>>(P) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14179823,"byte_end":14179866,"line_start":17,"line_end":17,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14179871,"byte_end":14179874,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This may return a `WouldBlock` in which case the socket connection","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14179879,"byte_end":14179949,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ cannot be completed immediately. Usually it means the backlog is full.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14179954,"byte_end":14180028,"line_start":20,"line_end":20,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1657},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14180742,"byte_end":14180750,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"pub fn from_std(net::UnixStream) -> UnixStream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixStream` from a standard `net::UnixStream`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixStream` from a standard `net::UnixStream`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14180187,"byte_end":14180252,"line_start":25,"line_end":25,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14180257,"byte_end":14180260,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix stream from the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14180265,"byte_end":14180336,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14180341,"byte_end":14180415,"line_start":28,"line_end":28,"column_start":5,"column_end":79}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14180420,"byte_end":14180491,"line_start":29,"line_end":29,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14180496,"byte_end":14180518,"line_start":30,"line_end":30,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14180523,"byte_end":14180526,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14180531,"byte_end":14180541,"line_start":32,"line_end":32,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14180546,"byte_end":14180549,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The Unix stream here will not have `connect` called on it, so it","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14180554,"byte_end":14180622,"line_start":34,"line_end":34,"column_start":5,"column_end":73}},{"value":"/ should already be connected via some other means (be it manually, or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14180627,"byte_end":14180699,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ the standard library).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14180704,"byte_end":14180730,"line_start":36,"line_end":36,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1658},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14181014,"byte_end":14181018,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14180876,"byte_end":14180925,"line_start":43,"line_end":43,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14180930,"byte_end":14180933,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Returns two `UnixStream`s which are connected to each other.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14180938,"byte_end":14181002,"line_start":45,"line_end":45,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1660},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14181300,"byte_end":14181310,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14181220,"byte_end":14181288,"line_start":52,"line_end":52,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1661},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14181493,"byte_end":14181502,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14181412,"byte_end":14181481,"line_start":57,"line_end":57,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1662},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14181662,"byte_end":14181672,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14181603,"byte_end":14181650,"line_start":62,"line_end":62,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1663},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182039,"byte_end":14182047,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14181758,"byte_end":14181824,"line_start":67,"line_end":67,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14181829,"byte_end":14181832,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14181837,"byte_end":14181905,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14181910,"byte_end":14181980,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14181985,"byte_end":14182027,"line_start":71,"line_end":71,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1664},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14184360,"byte_end":14184366,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"name":"try_io","qualname":"<UnixStream>::try_io","value":"pub fn try_io<F, T>(&Self, F) -> io::Result<T> where F: FnOnce() ->\nio::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182134,"byte_end":14182208,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182213,"byte_end":14182251,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182256,"byte_end":14182259,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182264,"byte_end":14182275,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182280,"byte_end":14182283,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182288,"byte_end":14182358,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182363,"byte_end":14182439,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182444,"byte_end":14182481,"line_start":83,"line_end":83,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182486,"byte_end":14182489,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182494,"byte_end":14182539,"line_start":85,"line_end":85,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182544,"byte_end":14182547,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182552,"byte_end":14182566,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182571,"byte_end":14182574,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182579,"byte_end":14182586,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182591,"byte_end":14182619,"line_start":90,"line_end":90,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182624,"byte_end":14182629,"line_start":91,"line_end":91,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182634,"byte_end":14182681,"line_start":92,"line_end":92,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182686,"byte_end":14182702,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182707,"byte_end":14182742,"line_start":94,"line_end":94,"column_start":5,"column_end":40}},{"value":"/ use mio::net::UnixStream;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182747,"byte_end":14182776,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182781,"byte_end":14182784,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let (stream1, stream2) = UnixStream::pair()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182789,"byte_end":14182838,"line_start":97,"line_end":97,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182843,"byte_end":14182846,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is writable...","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182851,"byte_end":14182894,"line_start":99,"line_end":99,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182899,"byte_end":14182902,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ // Write to the stream using a direct libc call, of course the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182907,"byte_end":14182973,"line_start":101,"line_end":101,"column_start":5,"column_end":71}},{"value":"/ // `io::Write` implementation would be easier to use.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14182978,"byte_end":14183035,"line_start":102,"line_end":102,"column_start":5,"column_end":62}},{"value":"/ let buf = b\"hello\";","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14183040,"byte_end":14183063,"line_start":103,"line_end":103,"column_start":5,"column_end":28}},{"value":"/ let n = stream1.try_io(|| {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14183068,"byte_end":14183099,"line_start":104,"line_end":104,"column_start":5,"column_end":36}},{"value":"/     let buf_ptr = &buf as *const _ as *const _;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14183104,"byte_end":14183155,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::send(stream1.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14183160,"byte_end":14183244,"line_start":106,"line_end":106,"column_start":5,"column_end":89}},{"value":"/     if res != -1 {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14183249,"byte_end":14183271,"line_start":107,"line_end":107,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14183276,"byte_end":14183304,"line_start":108,"line_end":108,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14183309,"byte_end":14183325,"line_start":109,"line_end":109,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::send, the closure","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14183330,"byte_end":14183403,"line_start":110,"line_end":110,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14183408,"byte_end":14183456,"line_start":111,"line_end":111,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14183461,"byte_end":14183504,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14183509,"byte_end":14183518,"line_start":113,"line_end":113,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14183523,"byte_end":14183531,"line_start":114,"line_end":114,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"write {} bytes\", n);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14183536,"byte_end":14183571,"line_start":115,"line_end":115,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14183576,"byte_end":14183579,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is readable...","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14183584,"byte_end":14183627,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14183632,"byte_end":14183635,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ // Read from the stream using a direct libc call, of course the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14183640,"byte_end":14183707,"line_start":119,"line_end":119,"column_start":5,"column_end":72}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14183712,"byte_end":14183768,"line_start":120,"line_end":120,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14183773,"byte_end":14183800,"line_start":121,"line_end":121,"column_start":5,"column_end":32}},{"value":"/ let n = stream2.try_io(|| {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14183805,"byte_end":14183836,"line_start":122,"line_end":122,"column_start":5,"column_end":36}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14183841,"byte_end":14183892,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::recv(stream2.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14183897,"byte_end":14183981,"line_start":124,"line_end":124,"column_start":5,"column_end":89}},{"value":"/     if res != -1 {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14183986,"byte_end":14184008,"line_start":125,"line_end":125,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14184013,"byte_end":14184041,"line_start":126,"line_end":126,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14184046,"byte_end":14184062,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::recv, the closure","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14184067,"byte_end":14184140,"line_start":128,"line_end":128,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14184145,"byte_end":14184193,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14184198,"byte_end":14184241,"line_start":130,"line_end":130,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14184246,"byte_end":14184255,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14184260,"byte_end":14184268,"line_start":132,"line_end":132,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14184273,"byte_end":14184307,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14184312,"byte_end":14184324,"line_start":134,"line_end":134,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14184329,"byte_end":14184336,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14184341,"byte_end":14184348,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":245},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1717,"byte_end":1721,"line_start":74,"line_end":74,"column_start":9,"column_end":13},"name":"unix","qualname":"::unix","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":257},{"krate":0,"index":258}],"decl_id":null,"docs":" Unix only extensions.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"os-ext\"))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1610,"byte_end":1647,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/ Unix only extensions.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1728,"byte_end":1753,"line_start":75,"line_end":75,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":246},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1767,"byte_end":1771,"line_start":77,"line_end":77,"column_start":13,"column_end":17},"name":"pipe","qualname":"::unix::pipe","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":254}],"decl_id":null,"docs":" Unix pipe.","sig":null,"attributes":[{"value":"/ Unix pipe.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1782,"byte_end":1796,"line_start":78,"line_end":78,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1805,"byte_end":1808,"line_start":79,"line_end":79,"column_start":9,"column_end":12}},{"value":"/ See the [`new`] function for documentation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1817,"byte_end":1864,"line_start":80,"line_end":80,"column_start":9,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":260},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":2184,"byte_end":2192,"line_start":96,"line_end":96,"column_start":9,"column_end":17},"name":"features","qualname":"::features","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" # Mio's optional features.","sig":null,"attributes":[{"value":"/ # Mio's optional features.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":2199,"byte_end":2229,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":2234,"byte_end":2237,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This document describes the available features in Mio.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":2242,"byte_end":2300,"line_start":99,"line_end":99,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":2305,"byte_end":2308,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":2459,"byte_end":2462,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Mio by default provides only a shell implementation that `panic!`s the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":2467,"byte_end":2541,"line_start":104,"line_end":104,"column_start":5,"column_end":79}},{"value":"/ moment it is actually run. To run it requires OS support, this is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":2546,"byte_end":2615,"line_start":105,"line_end":105,"column_start":5,"column_end":74}},{"value":"/ enabled by activating the `os-poll` feature.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":2620,"byte_end":2668,"line_start":106,"line_end":106,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":2673,"byte_end":2676,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This makes `Poll`, `Registry` and `Waker` functional.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":2681,"byte_end":2738,"line_start":108,"line_end":108,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":2743,"byte_end":2746,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":2893,"byte_end":2896,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ `os-ext` enables additional OS specific facilities. These facilities can","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":2901,"byte_end":2977,"line_start":113,"line_end":113,"column_start":5,"column_end":81}},{"value":"/ be found in the `unix` and `windows` module.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":2982,"byte_end":3030,"line_start":114,"line_end":114,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":3035,"byte_end":3038,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":3189,"byte_end":3192,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The `net` feature enables networking primitives in the `net` module.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":3197,"byte_end":3269,"line_start":119,"line_end":119,"column_start":5,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":261},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":3281,"byte_end":3286,"line_start":122,"line_end":122,"column_start":9,"column_end":14},"name":"guide","qualname":"::guide","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" # Getting started guide.","sig":null,"attributes":[{"value":"/ # Getting started guide.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":3293,"byte_end":3321,"line_start":123,"line_end":123,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":3326,"byte_end":3329,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ In this guide we'll do the following:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":3334,"byte_end":3375,"line_start":125,"line_end":125,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":3380,"byte_end":3383,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ 1. Create a [`Poll`] instance (and learn what it is).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":3388,"byte_end":3445,"line_start":127,"line_end":127,"column_start":5,"column_end":62}},{"value":"/ 2. Register an [event source].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":3450,"byte_end":3484,"line_start":128,"line_end":128,"column_start":5,"column_end":39}},{"value":"/ 3. Create an event loop.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":3489,"byte_end":3517,"line_start":129,"line_end":129,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":3522,"byte_end":3525,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ At the end you'll have a very small (but quick) TCP server that accepts","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":3530,"byte_end":3605,"line_start":131,"line_end":131,"column_start":5,"column_end":80}},{"value":"/ connections and then drops (disconnects) them.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":3610,"byte_end":3660,"line_start":132,"line_end":132,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":3665,"byte_end":3668,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ## 1. Creating a `Poll` instance","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":3673,"byte_end":3709,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":3714,"byte_end":3717,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Using Mio starts by creating a [`Poll`] instance, which monitors events","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":3722,"byte_end":3797,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ from the OS and puts them into [`Events`]. This allows us to execute I/O","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":3802,"byte_end":3878,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/ operations based on what operations are ready.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":3883,"byte_end":3933,"line_start":138,"line_end":138,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":3938,"byte_end":3941,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":3946,"byte_end":3979,"line_start":140,"line_end":140,"column_start":5,"column_end":38}},{"value":"/ [`Events`]: ../event/struct.Events.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":3984,"byte_end":4027,"line_start":141,"line_end":141,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":4032,"byte_end":4035,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # use mio::{Poll, Events};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":4153,"byte_end":4183,"line_start":145,"line_end":145,"column_start":5,"column_end":35}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":4188,"byte_end":4228,"line_start":146,"line_end":146,"column_start":5,"column_end":45}},{"value":"/ // `Poll` allows for polling of readiness events.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":4233,"byte_end":4286,"line_start":147,"line_end":147,"column_start":5,"column_end":58}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":4291,"byte_end":4319,"line_start":148,"line_end":148,"column_start":5,"column_end":33}},{"value":"/ // `Events` is collection of readiness `Event`s and can be filled by","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":4324,"byte_end":4396,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ // calling `Poll::poll`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":4401,"byte_end":4429,"line_start":150,"line_end":150,"column_start":5,"column_end":33}},{"value":"/ let events = Events::with_capacity(128);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":4434,"byte_end":4478,"line_start":151,"line_end":151,"column_start":5,"column_end":49}},{"value":"/ # drop((poll, events));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":4483,"byte_end":4510,"line_start":152,"line_end":152,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":4515,"byte_end":4527,"line_start":153,"line_end":153,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":4532,"byte_end":4539,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":4544,"byte_end":4551,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":4556,"byte_end":4559,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ For example if we're using a [`TcpListener`],  we'll only want to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":4564,"byte_end":4633,"line_start":157,"line_end":157,"column_start":5,"column_end":74}},{"value":"/ attempt to accept an incoming connection *iff* any connections are","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":4638,"byte_end":4708,"line_start":158,"line_end":158,"column_start":5,"column_end":75}},{"value":"/ queued and ready to be accepted. We don't want to waste our time if no","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":4713,"byte_end":4787,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ connections are ready.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":4792,"byte_end":4818,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":4823,"byte_end":4826,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ [`TcpListener`]: ../net/struct.TcpListener.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":4831,"byte_end":4882,"line_start":162,"line_end":162,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":4887,"byte_end":4890,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ## 2. Registering event source","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":4895,"byte_end":4929,"line_start":164,"line_end":164,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":4934,"byte_end":4937,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ After we've created a [`Poll`] instance that monitors events from the OS","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":4942,"byte_end":5018,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/ for us, we need to provide it with a source of events. This is done by","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":5023,"byte_end":5097,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ registering an [event source]. As the name “event source” suggests it is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":5102,"byte_end":5182,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ a source of events which can be polled using a `Poll` instance. On Unix","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":5187,"byte_end":5262,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/ systems this is usually a file descriptor, or a socket/handle on","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":5267,"byte_end":5335,"line_start":170,"line_end":170,"column_start":5,"column_end":73}},{"value":"/ Windows.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":5340,"byte_end":5352,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":5357,"byte_end":5360,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ In the example below we'll use a [`TcpListener`] for which we'll receive","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":5365,"byte_end":5441,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ an event (from [`Poll`]) once a connection is ready to be accepted.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":5446,"byte_end":5517,"line_start":174,"line_end":174,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":5522,"byte_end":5525,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ [event source]: ../event/trait.Source.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":5530,"byte_end":5576,"line_start":176,"line_end":176,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":5581,"byte_end":5584,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # use mio::net::TcpListener;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":5746,"byte_end":5778,"line_start":180,"line_end":180,"column_start":5,"column_end":37}},{"value":"/ # use mio::{Poll, Token, Interest};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":5783,"byte_end":5822,"line_start":181,"line_end":181,"column_start":5,"column_end":44}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":5827,"byte_end":5867,"line_start":182,"line_end":182,"column_start":5,"column_end":45}},{"value":"/ # let poll = Poll::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":5872,"byte_end":5902,"line_start":183,"line_end":183,"column_start":5,"column_end":35}},{"value":"/ # let address = \"127.0.0.1:0\".parse().unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":5907,"byte_end":5958,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"/ // Create a `TcpListener`, binding it to `address`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":5963,"byte_end":6018,"line_start":185,"line_end":185,"column_start":5,"column_end":60}},{"value":"/ let mut listener = TcpListener::bind(address)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":6023,"byte_end":6074,"line_start":186,"line_end":186,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":6079,"byte_end":6082,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ // Next we register it with `Poll` to receive events for it. The `SERVER`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":6087,"byte_end":6164,"line_start":188,"line_end":188,"column_start":5,"column_end":82}},{"value":"/ // `Token` is used to determine that we received an event for the listener","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":6169,"byte_end":6247,"line_start":189,"line_end":189,"column_start":5,"column_end":83}},{"value":"/ // later on.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":6252,"byte_end":6268,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/ const SERVER: Token = Token(0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":6273,"byte_end":6308,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/ poll.registry().register(&mut listener, SERVER, Interest::READABLE)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":6313,"byte_end":6386,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ # Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":6391,"byte_end":6403,"line_start":193,"line_end":193,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":6408,"byte_end":6415,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":6420,"byte_end":6427,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":6432,"byte_end":6435,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Multiple event sources can be [registered] (concurrently), so we can","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":6440,"byte_end":6512,"line_start":197,"line_end":197,"column_start":5,"column_end":77}},{"value":"/ monitor multiple sources at a time.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":6517,"byte_end":6556,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":6561,"byte_end":6564,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ [registered]: ../struct.Registry.html#method.register","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":6569,"byte_end":6626,"line_start":200,"line_end":200,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":6631,"byte_end":6634,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ## 3. Creating the event loop","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":6639,"byte_end":6672,"line_start":202,"line_end":202,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":6677,"byte_end":6680,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ After we've created a [`Poll`] instance and registered one or more","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":6685,"byte_end":6755,"line_start":204,"line_end":204,"column_start":5,"column_end":75}},{"value":"/ [event sources] with it, we can [poll] it for events. Polling for events","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":6760,"byte_end":6836,"line_start":205,"line_end":205,"column_start":5,"column_end":81}},{"value":"/ is simple, we need a container to store the events: [`Events`] and need","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":6841,"byte_end":6916,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ to do something based on the polled events (this part is up to you, we","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":6921,"byte_end":6995,"line_start":207,"line_end":207,"column_start":5,"column_end":79}},{"value":"/ can't do it all!). If we do this in a loop we've got ourselves an event","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":7000,"byte_end":7075,"line_start":208,"line_end":208,"column_start":5,"column_end":80}},{"value":"/ loop.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":7080,"byte_end":7089,"line_start":209,"line_end":209,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":7094,"byte_end":7097,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ The example below shows the event loop in action, completing our small","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":7102,"byte_end":7176,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ TCP server.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":7181,"byte_end":7196,"line_start":212,"line_end":212,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":7201,"byte_end":7204,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ [poll]: ../struct.Poll.html#method.poll","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":7209,"byte_end":7252,"line_start":214,"line_end":214,"column_start":5,"column_end":48}},{"value":"/ [event sources]: ../event/trait.Source.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":7257,"byte_end":7304,"line_start":215,"line_end":215,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":7309,"byte_end":7312,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # use std::io;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":7474,"byte_end":7492,"line_start":219,"line_end":219,"column_start":5,"column_end":23}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":7497,"byte_end":7527,"line_start":220,"line_end":220,"column_start":5,"column_end":35}},{"value":"/ # use mio::net::TcpListener;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":7532,"byte_end":7564,"line_start":221,"line_end":221,"column_start":5,"column_end":37}},{"value":"/ # use mio::{Poll, Token, Interest, Events};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":7569,"byte_end":7616,"line_start":222,"line_end":222,"column_start":5,"column_end":52}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":7621,"byte_end":7656,"line_start":223,"line_end":223,"column_start":5,"column_end":40}},{"value":"/ # let mut poll = Poll::new()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":7661,"byte_end":7695,"line_start":224,"line_end":224,"column_start":5,"column_end":39}},{"value":"/ # let mut events = Events::with_capacity(128);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":7700,"byte_end":7750,"line_start":225,"line_end":225,"column_start":5,"column_end":55}},{"value":"/ # let address = \"127.0.0.1:0\".parse().unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":7755,"byte_end":7806,"line_start":226,"line_end":226,"column_start":5,"column_end":56}},{"value":"/ # let mut listener = TcpListener::bind(address)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":7811,"byte_end":7864,"line_start":227,"line_end":227,"column_start":5,"column_end":58}},{"value":"/ # const SERVER: Token = Token(0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":7869,"byte_end":7906,"line_start":228,"line_end":228,"column_start":5,"column_end":42}},{"value":"/ # poll.registry().register(&mut listener, SERVER, Interest::READABLE)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":7911,"byte_end":7986,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ // Start our event loop.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":7991,"byte_end":8019,"line_start":230,"line_end":230,"column_start":5,"column_end":33}},{"value":"/ loop {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":8024,"byte_end":8034,"line_start":231,"line_end":231,"column_start":5,"column_end":15}},{"value":"/     // Poll the OS for events, waiting at most 100 milliseconds.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":8039,"byte_end":8107,"line_start":232,"line_end":232,"column_start":5,"column_end":73}},{"value":"/     poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":8112,"byte_end":8178,"line_start":233,"line_end":233,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":8183,"byte_end":8186,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/     // Process each event.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":8191,"byte_end":8221,"line_start":235,"line_end":235,"column_start":5,"column_end":35}},{"value":"/     for event in events.iter() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":8226,"byte_end":8262,"line_start":236,"line_end":236,"column_start":5,"column_end":41}},{"value":"/         // We can use the token we previously provided to `register` to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":8267,"byte_end":8342,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/         // determine for which type the event is.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":8347,"byte_end":8400,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/         match event.token() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":8405,"byte_end":8438,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/             SERVER => loop {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":8443,"byte_end":8475,"line_start":240,"line_end":240,"column_start":5,"column_end":37}},{"value":"/                 // One or more connections are ready, so we'll attempt to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":8480,"byte_end":8557,"line_start":241,"line_end":241,"column_start":5,"column_end":82}},{"value":"/                 // accept them (in a loop).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":8562,"byte_end":8609,"line_start":242,"line_end":242,"column_start":5,"column_end":52}},{"value":"/                 match listener.accept() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":8614,"byte_end":8659,"line_start":243,"line_end":243,"column_start":5,"column_end":50}},{"value":"/                     Ok((connection, address)) => {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":8664,"byte_end":8718,"line_start":244,"line_end":244,"column_start":5,"column_end":59}},{"value":"/                         println!(\"Got a connection from: {}\", address);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":8723,"byte_end":8798,"line_start":245,"line_end":245,"column_start":5,"column_end":80}},{"value":"/ #                       drop(connection);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":8803,"byte_end":8848,"line_start":246,"line_end":246,"column_start":5,"column_end":50}},{"value":"/                     },","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":8853,"byte_end":8879,"line_start":247,"line_end":247,"column_start":5,"column_end":31}},{"value":"/                     // A \"would block error\" is returned if the operation","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":8884,"byte_end":8961,"line_start":248,"line_end":248,"column_start":5,"column_end":82}},{"value":"/                     // is not ready, so we'll stop trying to accept","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":8966,"byte_end":9037,"line_start":249,"line_end":249,"column_start":5,"column_end":76}},{"value":"/                     // connections.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":9042,"byte_end":9081,"line_start":250,"line_end":250,"column_start":5,"column_end":44}},{"value":"/                     Err(ref err) if would_block(err) => break,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":9086,"byte_end":9152,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/                     Err(err) => return Err(err),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":9157,"byte_end":9209,"line_start":252,"line_end":252,"column_start":5,"column_end":57}},{"value":"/                 }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":9214,"byte_end":9235,"line_start":253,"line_end":253,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":9240,"byte_end":9257,"line_start":254,"line_end":254,"column_start":5,"column_end":22}},{"value":"/ #           _ => unreachable!(),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":9262,"byte_end":9298,"line_start":255,"line_end":255,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":9303,"byte_end":9316,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":9321,"byte_end":9330,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/ #   return Ok(());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":9335,"byte_end":9357,"line_start":258,"line_end":258,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":9362,"byte_end":9367,"line_start":259,"line_end":259,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":9372,"byte_end":9375,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ fn would_block(err: &io::Error) -> bool {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":9380,"byte_end":9425,"line_start":261,"line_end":261,"column_start":5,"column_end":50}},{"value":"/     err.kind() == io::ErrorKind::WouldBlock","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":9430,"byte_end":9477,"line_start":262,"line_end":262,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":9482,"byte_end":9487,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":9492,"byte_end":9499,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":9504,"byte_end":9511,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":12398,"byte_end":12406,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":15337,"byte_end":15345,"line_start":118,"line_end":118,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":15488,"byte_end":15496,"line_start":127,"line_end":127,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":15624,"byte_end":15632,"line_start":134,"line_end":134,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":26673,"byte_end":26677,"line_start":236,"line_end":236,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32328,"byte_end":32332,"line_start":383,"line_end":383,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32433,"byte_end":32437,"line_start":389,"line_end":389,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32561,"byte_end":32569,"line_start":395,"line_end":395,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":42874,"byte_end":42882,"line_start":662,"line_end":662,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":43035,"byte_end":43043,"line_start":669,"line_end":669,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/selector/epoll.rs","byte_start":14049871,"byte_end":14049879,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":353},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/selector/epoll.rs","byte_start":14053161,"byte_end":14053169,"line_start":114,"line_end":114,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/selector/epoll.rs","byte_start":14053297,"byte_end":14053305,"line_start":122,"line_end":122,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/selector/epoll.rs","byte_start":14053382,"byte_end":14053390,"line_start":128,"line_end":128,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059842,"byte_end":14059850,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/waker.rs","byte_start":14061050,"byte_end":14061055,"line_start":21,"line_end":21,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/net.rs","byte_start":14069123,"byte_end":14069138,"line_start":72,"line_end":72,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/uds/socketaddr.rs","byte_start":14084439,"byte_end":14084449,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/uds/socketaddr.rs","byte_start":14085378,"byte_end":14085388,"line_start":55,"line_end":55,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/uds/socketaddr.rs","byte_start":14087420,"byte_end":14087430,"line_start":112,"line_end":112,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/uds/socketaddr.rs","byte_start":14087810,"byte_end":14087822,"line_start":122,"line_end":122,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/mod.rs","byte_start":14047517,"byte_end":14047530,"line_start":41,"line_end":41,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14101388,"byte_end":14101394,"line_start":215,"line_end":215,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103978,"byte_end":14103984,"line_start":290,"line_end":290,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14104535,"byte_end":14104541,"line_start":314,"line_end":314,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":910},{"krate":0,"index":912},{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14105431,"byte_end":14105437,"line_start":345,"line_end":345,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14105648,"byte_end":14105654,"line_start":352,"line_end":352,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14105816,"byte_end":14105822,"line_start":360,"line_end":360,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14105919,"byte_end":14105925,"line_start":366,"line_end":366,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106187,"byte_end":14106195,"line_start":380,"line_end":380,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":932},{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14108781,"byte_end":14108789,"line_start":455,"line_end":455,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14109339,"byte_end":14109347,"line_start":479,"line_end":479,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14110043,"byte_end":14110051,"line_start":502,"line_end":502,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14110350,"byte_end":14110358,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14110577,"byte_end":14110585,"line_start":519,"line_end":519,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14110751,"byte_end":14110759,"line_start":527,"line_end":527,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14110856,"byte_end":14110864,"line_start":533,"line_end":533,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":53508,"byte_end":53513,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":54611,"byte_end":54616,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":61784,"byte_end":61789,"line_start":202,"line_end":202,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":62498,"byte_end":62510,"line_start":219,"line_end":219,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64873,"byte_end":64879,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":67995,"byte_end":67999,"line_start":203,"line_end":203,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":68475,"byte_end":68481,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":72645,"byte_end":72648,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/io_source.rs","byte_start":14113639,"byte_end":14113647,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/io_source.rs","byte_start":14114947,"byte_end":14114955,"line_start":114,"line_end":114,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/io_source.rs","byte_start":14115222,"byte_end":14115230,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/io_source.rs","byte_start":14115359,"byte_end":14115367,"line_start":133,"line_end":133,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/io_source.rs","byte_start":14118251,"byte_end":14118259,"line_start":243,"line_end":243,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/io_source.rs","byte_start":14118564,"byte_end":14118574,"line_start":260,"line_end":260,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/io_source.rs","byte_start":14120872,"byte_end":14120882,"line_start":328,"line_end":328,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14124186,"byte_end":14124197,"line_start":48,"line_end":48,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14127738,"byte_end":14127749,"line_start":139,"line_end":139,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14128305,"byte_end":14128316,"line_start":163,"line_end":163,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14128449,"byte_end":14128460,"line_start":170,"line_end":170,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1174}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14128584,"byte_end":14128595,"line_start":177,"line_end":177,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14128705,"byte_end":14128716,"line_start":184,"line_end":184,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131951,"byte_end":14131960,"line_start":52,"line_end":52,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14140456,"byte_end":14140465,"line_start":270,"line_end":270,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1267},{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14141077,"byte_end":14141086,"line_start":290,"line_end":290,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14141899,"byte_end":14141908,"line_start":318,"line_end":318,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14142464,"byte_end":14142473,"line_start":342,"line_end":342,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14142606,"byte_end":14142615,"line_start":349,"line_end":349,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14142739,"byte_end":14142748,"line_start":356,"line_end":356,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14142858,"byte_end":14142867,"line_start":363,"line_end":363,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147863,"byte_end":14147872,"line_start":95,"line_end":95,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1375},{"krate":0,"index":1377},{"krate":0,"index":1379},{"krate":0,"index":1381},{"krate":0,"index":1383},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14166628,"byte_end":14166637,"line_start":615,"line_end":615,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1409}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14167193,"byte_end":14167202,"line_start":639,"line_end":639,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1411}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14167335,"byte_end":14167344,"line_start":646,"line_end":646,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14167468,"byte_end":14167477,"line_start":653,"line_end":653,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1415}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14167587,"byte_end":14167596,"line_start":660,"line_end":660,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14169074,"byte_end":14169086,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1474},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1488},{"krate":0,"index":1491},{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14175156,"byte_end":14175168,"line_start":184,"line_end":184,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14175724,"byte_end":14175736,"line_start":208,"line_end":208,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14175856,"byte_end":14175868,"line_start":214,"line_end":214,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14175979,"byte_end":14175991,"line_start":220,"line_end":220,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14176088,"byte_end":14176100,"line_start":226,"line_end":226,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14176778,"byte_end":14176790,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1570},{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14178164,"byte_end":14178176,"line_start":52,"line_end":52,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14178732,"byte_end":14178744,"line_start":76,"line_end":76,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1581}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14178864,"byte_end":14178876,"line_start":82,"line_end":82,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1583}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14178987,"byte_end":14178999,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1585}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14179096,"byte_end":14179108,"line_start":94,"line_end":94,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14179806,"byte_end":14179816,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1655},{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14184514,"byte_end":14184524,"line_start":145,"line_end":145,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1669},{"krate":0,"index":1671}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14185137,"byte_end":14185147,"line_start":165,"line_end":165,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1680},{"krate":0,"index":1682},{"krate":0,"index":1684}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14185961,"byte_end":14185971,"line_start":193,"line_end":193,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14186527,"byte_end":14186537,"line_start":217,"line_end":217,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1699}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14186657,"byte_end":14186667,"line_start":223,"line_end":223,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1701}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14186778,"byte_end":14186788,"line_start":229,"line_end":229,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1703}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14186885,"byte_end":14186895,"line_start":235,"line_end":235,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1354,"byte_end":1359,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":126}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/lib.rs","byte_start":1424,"byte_end":1427,"line_start":61,"line_end":61,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1090}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":12398,"byte_end":12406,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":15337,"byte_end":15345,"line_start":118,"line_end":118,"column_start":21,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":3189}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":15488,"byte_end":15496,"line_start":127,"line_end":127,"column_start":27,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/interest.rs","byte_start":15624,"byte_end":15632,"line_start":134,"line_end":134,"column_start":21,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":26673,"byte_end":26677,"line_start":236,"line_end":236,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":78},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32328,"byte_end":32332,"line_start":383,"line_end":383,"column_start":18,"column_end":22},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":78},"to":{"krate":1,"index":6961}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32433,"byte_end":32437,"line_start":389,"line_end":389,"column_start":21,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":78},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":32561,"byte_end":32569,"line_start":395,"line_end":395,"column_start":6,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":80},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":42874,"byte_end":42882,"line_start":662,"line_end":662,"column_start":21,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":80},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/poll.rs","byte_start":43035,"byte_end":43043,"line_start":669,"line_end":669,"column_start":18,"column_end":26},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":80},"to":{"krate":1,"index":6961}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/selector/epoll.rs","byte_start":14049871,"byte_end":14049879,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":485},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/selector/epoll.rs","byte_start":14053161,"byte_end":14053169,"line_start":114,"line_end":114,"column_start":10,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":485},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/selector/epoll.rs","byte_start":14053297,"byte_end":14053305,"line_start":122,"line_end":122,"column_start":18,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":485},"to":{"krate":1,"index":6961}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/selector/epoll.rs","byte_start":14053382,"byte_end":14053390,"line_start":128,"line_end":128,"column_start":15,"column_end":23},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/sourcefd.rs","byte_start":14059842,"byte_end":14059850,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":498},"to":{"krate":0,"index":204}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/waker.rs","byte_start":14061050,"byte_end":14061055,"line_start":21,"line_end":21,"column_start":10,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/net.rs","byte_start":14069123,"byte_end":14069138,"line_start":72,"line_end":72,"column_start":6,"column_end":21},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/uds/socketaddr.rs","byte_start":14084439,"byte_end":14084449,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/uds/socketaddr.rs","byte_start":14085378,"byte_end":14085388,"line_start":55,"line_end":55,"column_start":10,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/uds/socketaddr.rs","byte_start":14087420,"byte_end":14087430,"line_start":112,"line_end":112,"column_start":21,"column_end":31},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":642},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/uds/socketaddr.rs","byte_start":14087810,"byte_end":14087822,"line_start":122,"line_end":122,"column_start":27,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":645},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/mod.rs","byte_start":14047517,"byte_end":14047530,"line_start":41,"line_end":41,"column_start":14,"column_end":27},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14101388,"byte_end":14101394,"line_start":215,"line_end":215,"column_start":6,"column_end":12},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":962},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14103978,"byte_end":14103984,"line_start":290,"line_end":290,"column_start":24,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":962},"to":{"krate":0,"index":204}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14104535,"byte_end":14104541,"line_start":314,"line_end":314,"column_start":16,"column_end":22},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":4783}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14105431,"byte_end":14105437,"line_start":345,"line_end":345,"column_start":27,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14105648,"byte_end":14105654,"line_start":352,"line_end":352,"column_start":20,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":6963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14105816,"byte_end":14105822,"line_start":360,"line_end":360,"column_start":18,"column_end":24},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":6961}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14105919,"byte_end":14105925,"line_start":366,"line_end":366,"column_start":20,"column_end":26},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":6965}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14106187,"byte_end":14106195,"line_start":380,"line_end":380,"column_start":6,"column_end":14},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14108781,"byte_end":14108789,"line_start":455,"line_end":455,"column_start":24,"column_end":32},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":966},"to":{"krate":0,"index":204}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14109339,"byte_end":14109347,"line_start":479,"line_end":479,"column_start":15,"column_end":23},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":966},"to":{"krate":1,"index":4726}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14110043,"byte_end":14110051,"line_start":502,"line_end":502,"column_start":28,"column_end":36},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":966},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14110350,"byte_end":14110358,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":966},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14110577,"byte_end":14110585,"line_start":519,"line_end":519,"column_start":20,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":966},"to":{"krate":1,"index":6963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14110751,"byte_end":14110759,"line_start":527,"line_end":527,"column_start":18,"column_end":26},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":966},"to":{"krate":1,"index":6961}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/sys/unix/pipe.rs","byte_start":14110856,"byte_end":14110864,"line_start":533,"line_end":533,"column_start":20,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":966},"to":{"krate":1,"index":6965}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/waker.rs","byte_start":53508,"byte_end":53513,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":54611,"byte_end":54616,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":61784,"byte_end":61789,"line_start":202,"line_end":202,"column_start":21,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":996},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/event.rs","byte_start":62498,"byte_end":62510,"line_start":219,"line_end":219,"column_start":37,"column_end":49},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":151},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":64873,"byte_end":64879,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":67995,"byte_end":67999,"line_start":203,"line_end":203,"column_start":23,"column_end":27},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1000},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/events.rs","byte_start":68475,"byte_end":68481,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":168},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/event/source.rs","byte_start":72645,"byte_end":72648,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":5,"index":321},"to":{"krate":0,"index":204}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/io_source.rs","byte_start":14113639,"byte_end":14113647,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1051},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/io_source.rs","byte_start":14114947,"byte_end":14114955,"line_start":114,"line_end":114,"column_start":19,"column_end":27},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1051},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/io_source.rs","byte_start":14115222,"byte_end":14115230,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1051},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/io_source.rs","byte_start":14115359,"byte_end":14115367,"line_start":133,"line_end":133,"column_start":27,"column_end":35},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1051},"to":{"krate":0,"index":204}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/io_source.rs","byte_start":14118251,"byte_end":14118259,"line_start":243,"line_end":243,"column_start":24,"column_end":32},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1051},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/io_source.rs","byte_start":14118564,"byte_end":14118574,"line_start":260,"line_end":260,"column_start":6,"column_end":16},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/io_source.rs","byte_start":14120872,"byte_end":14120882,"line_start":328,"line_end":328,"column_start":16,"column_end":26},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1086},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14124186,"byte_end":14124197,"line_start":48,"line_end":48,"column_start":6,"column_end":17},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14127738,"byte_end":14127749,"line_start":139,"line_end":139,"column_start":24,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1155},"to":{"krate":0,"index":204}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14128305,"byte_end":14128316,"line_start":163,"line_end":163,"column_start":21,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1155},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14128449,"byte_end":14128460,"line_start":170,"line_end":170,"column_start":20,"column_end":31},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1155},"to":{"krate":1,"index":6965}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14128584,"byte_end":14128595,"line_start":177,"line_end":177,"column_start":18,"column_end":29},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1155},"to":{"krate":1,"index":6961}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/listener.rs","byte_start":14128705,"byte_end":14128716,"line_start":184,"line_end":184,"column_start":20,"column_end":31},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1155},"to":{"krate":1,"index":6963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14131951,"byte_end":14131960,"line_start":52,"line_end":52,"column_start":6,"column_end":15},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14140456,"byte_end":14140465,"line_start":270,"line_end":270,"column_start":15,"column_end":24},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1248},"to":{"krate":1,"index":4726}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14141077,"byte_end":14141086,"line_start":290,"line_end":290,"column_start":16,"column_end":25},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1248},"to":{"krate":1,"index":4783}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14141899,"byte_end":14141908,"line_start":318,"line_end":318,"column_start":24,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1248},"to":{"krate":0,"index":204}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14142464,"byte_end":14142473,"line_start":342,"line_end":342,"column_start":21,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1248},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14142606,"byte_end":14142615,"line_start":349,"line_end":349,"column_start":20,"column_end":29},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1248},"to":{"krate":1,"index":6965}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14142739,"byte_end":14142748,"line_start":356,"line_end":356,"column_start":18,"column_end":27},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1248},"to":{"krate":1,"index":6961}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/tcp/stream.rs","byte_start":14142858,"byte_end":14142867,"line_start":363,"line_end":363,"column_start":20,"column_end":29},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1248},"to":{"krate":1,"index":6963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14147863,"byte_end":14147872,"line_start":95,"line_end":95,"column_start":6,"column_end":15},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14166628,"byte_end":14166637,"line_start":615,"line_end":615,"column_start":24,"column_end":33},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1366},"to":{"krate":0,"index":204}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14167193,"byte_end":14167202,"line_start":639,"line_end":639,"column_start":21,"column_end":30},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1366},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14167335,"byte_end":14167344,"line_start":646,"line_end":646,"column_start":20,"column_end":29},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1366},"to":{"krate":1,"index":6965}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14167468,"byte_end":14167477,"line_start":653,"line_end":653,"column_start":18,"column_end":27},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1366},"to":{"krate":1,"index":6961}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/udp.rs","byte_start":14167587,"byte_end":14167596,"line_start":660,"line_end":660,"column_start":20,"column_end":29},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1366},"to":{"krate":1,"index":6963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14169074,"byte_end":14169086,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14175156,"byte_end":14175168,"line_start":184,"line_end":184,"column_start":24,"column_end":36},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1471},"to":{"krate":0,"index":204}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14175724,"byte_end":14175736,"line_start":208,"line_end":208,"column_start":21,"column_end":33},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1471},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14175856,"byte_end":14175868,"line_start":214,"line_end":214,"column_start":20,"column_end":32},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1471},"to":{"krate":1,"index":6965}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14175979,"byte_end":14175991,"line_start":220,"line_end":220,"column_start":18,"column_end":30},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1471},"to":{"krate":1,"index":6961}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/datagram.rs","byte_start":14176088,"byte_end":14176100,"line_start":226,"line_end":226,"column_start":20,"column_end":32},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1471},"to":{"krate":1,"index":6963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14176778,"byte_end":14176790,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14178164,"byte_end":14178176,"line_start":52,"line_end":52,"column_start":24,"column_end":36},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1567},"to":{"krate":0,"index":204}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14178732,"byte_end":14178744,"line_start":76,"line_end":76,"column_start":21,"column_end":33},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1567},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14178864,"byte_end":14178876,"line_start":82,"line_end":82,"column_start":20,"column_end":32},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1567},"to":{"krate":1,"index":6965}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14178987,"byte_end":14178999,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1567},"to":{"krate":1,"index":6961}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/listener.rs","byte_start":14179096,"byte_end":14179108,"line_start":94,"line_end":94,"column_start":20,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1567},"to":{"krate":1,"index":6963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14179806,"byte_end":14179816,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14184514,"byte_end":14184524,"line_start":145,"line_end":145,"column_start":15,"column_end":25},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1652},"to":{"krate":1,"index":4726}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14185137,"byte_end":14185147,"line_start":165,"line_end":165,"column_start":16,"column_end":26},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1652},"to":{"krate":1,"index":4783}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14185961,"byte_end":14185971,"line_start":193,"line_end":193,"column_start":24,"column_end":34},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1652},"to":{"krate":0,"index":204}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14186527,"byte_end":14186537,"line_start":217,"line_end":217,"column_start":21,"column_end":31},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1652},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14186657,"byte_end":14186667,"line_start":223,"line_end":223,"column_start":20,"column_end":30},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1652},"to":{"krate":1,"index":6965}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14186778,"byte_end":14186788,"line_start":229,"line_end":229,"column_start":18,"column_end":28},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1652},"to":{"krate":1,"index":6961}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.3/src/net/uds/stream.rs","byte_start":14186885,"byte_end":14186895,"line_start":235,"line_end":235,"column_start":20,"column_end":30},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1652},"to":{"krate":1,"index":6963}}]}