{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4","program":"/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","axum_core","--edition=2018","/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=03fc97d28ff4f793","-C","extra-filename=-03fc97d28ff4f793","--out-dir","/home/johnmorrisett/Documents/mini-kvvm-rs/mini-kvvm-rs/tests/e2e/target/rls/debug/deps","-L","dependency=/home/johnmorrisett/Documents/mini-kvvm-rs/mini-kvvm-rs/tests/e2e/target/rls/debug/deps","--extern","async_trait=/home/johnmorrisett/Documents/mini-kvvm-rs/mini-kvvm-rs/tests/e2e/target/rls/debug/deps/libasync_trait-e268bc2718e408c1.so","--extern","bytes=/home/johnmorrisett/Documents/mini-kvvm-rs/mini-kvvm-rs/tests/e2e/target/rls/debug/deps/libbytes-57de1f6d7c9c6f6c.rmeta","--extern","futures_util=/home/johnmorrisett/Documents/mini-kvvm-rs/mini-kvvm-rs/tests/e2e/target/rls/debug/deps/libfutures_util-5633cf663f09987a.rmeta","--extern","http=/home/johnmorrisett/Documents/mini-kvvm-rs/mini-kvvm-rs/tests/e2e/target/rls/debug/deps/libhttp-8a47b5b804f7af9e.rmeta","--extern","http_body=/home/johnmorrisett/Documents/mini-kvvm-rs/mini-kvvm-rs/tests/e2e/target/rls/debug/deps/libhttp_body-9fb7d6e7ec24c890.rmeta","--extern","mime=/home/johnmorrisett/Documents/mini-kvvm-rs/mini-kvvm-rs/tests/e2e/target/rls/debug/deps/libmime-1d79507d89b2ca88.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/johnmorrisett/Documents/mini-kvvm-rs/mini-kvvm-rs/tests/e2e/target/rls/debug/deps/libaxum_core-03fc97d28ff4f793.rmeta"},"prelude":{"crate_id":{"name":"axum_core","disambiguator":[5591482958952871359,0]},"crate_root":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src","external_crates":[{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/request_parts.rs","num":2,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/body.rs","num":20,"id":{"name":"bytes","disambiguator":[11709949483292364592,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/body.rs","num":21,"id":{"name":"http_body","disambiguator":[16466314367043830236,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","num":22,"id":{"name":"http","disambiguator":[2805664433737079123,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/body.rs","num":23,"id":{"name":"fnv","disambiguator":[9182829020882932385,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/body.rs","num":24,"id":{"name":"itoa","disambiguator":[13487529298765147476,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/body.rs","num":25,"id":{"name":"pin_project_lite","disambiguator":[2300276943370094789,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","num":26,"id":{"name":"async_trait","disambiguator":[3439926520635949386,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/body.rs","num":27,"id":{"name":"futures_util","disambiguator":[8511995853558977994,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/body.rs","num":28,"id":{"name":"futures_core","disambiguator":[9655805743935561678,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/body.rs","num":29,"id":{"name":"pin_utils","disambiguator":[7302173720166050639,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/body.rs","num":30,"id":{"name":"futures_task","disambiguator":[15221942715748759160,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","num":31,"id":{"name":"mime","disambiguator":[6371041994920312389,0]}}],"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","byte_start":0,"byte_end":1820,"line_start":1,"line_end":63,"column_start":1,"column_end":62}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":534},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","byte_start":1661,"byte_end":1666,"line_start":56,"line_end":56,"column_start":22,"column_end":27},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1095},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24009,"byte_end":24022,"line_start":14,"line_end":14,"column_start":21,"column_end":34},"alias_span":null,"name":"AppendHeaders","value":"","parent":{"krate":0,"index":198}},{"kind":"Use","ref_id":{"krate":0,"index":1096},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24009,"byte_end":24022,"line_start":14,"line_end":14,"column_start":21,"column_end":34},"alias_span":null,"name":"AppendHeaders","value":"","parent":{"krate":0,"index":198}},{"kind":"Use","ref_id":{"krate":0,"index":336},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24043,"byte_end":24055,"line_start":15,"line_end":15,"column_start":20,"column_end":32},"alias_span":null,"name":"IntoResponse","value":"","parent":{"krate":0,"index":198}},{"kind":"Use","ref_id":{"krate":0,"index":462},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24083,"byte_end":24100,"line_start":16,"line_end":16,"column_start":27,"column_end":44},"alias_span":null,"name":"IntoResponseParts","value":"","parent":{"krate":0,"index":198}},{"kind":"Use","ref_id":{"krate":0,"index":1844},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24102,"byte_end":24115,"line_start":16,"line_end":16,"column_start":46,"column_end":59},"alias_span":null,"name":"ResponseParts","value":"","parent":{"krate":0,"index":198}},{"kind":"Use","ref_id":{"krate":0,"index":1848},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24117,"byte_end":24135,"line_start":16,"line_end":16,"column_start":61,"column_end":79},"alias_span":null,"name":"TryIntoHeaderError","value":"","parent":{"krate":0,"index":198}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","byte_start":0,"byte_end":1820,"line_start":1,"line_end":63,"column_start":1,"column_end":62},"name":"","qualname":"::","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":7},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":60},{"krate":0,"index":198},{"krate":0,"index":533}],"decl_id":null,"docs":" Core types and traits for [`axum`].","sig":null,"attributes":[{"value":"/ Core types and traits for [`axum`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","byte_start":0,"byte_end":39,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","byte_start":40,"byte_end":43,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Libraries authors that want to provide [`FromRequest`] or [`IntoResponse`] implementations","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","byte_start":44,"byte_end":138,"line_start":3,"line_end":3,"column_start":1,"column_end":95}},{"value":"/ should depend on the [`axum-core`] crate, instead of `axum` if possible.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","byte_start":139,"byte_end":215,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","byte_start":216,"byte_end":219,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [`FromRequest`]: crate::extract::FromRequest","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","byte_start":220,"byte_end":268,"line_start":6,"line_end":6,"column_start":1,"column_end":49}},{"value":"/ [`IntoResponse`]: crate::response::IntoResponse","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","byte_start":269,"byte_end":320,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"/ [`axum`]: https://crates.io/crates/axum","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","byte_start":321,"byte_end":364,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/ [`axum-core`]: http://crates.io/crates/axum-core","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","byte_start":365,"byte_end":417,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"warn(clippy :: all, clippy :: dbg_macro, clippy :: todo, clippy ::\nempty_enum, clippy :: enum_glob_use, clippy :: mem_forget, clippy ::\nunused_self, clippy :: filter_map_next, clippy :: needless_continue, clippy ::\nneedless_borrow, clippy :: match_wildcard_for_single_variants, clippy ::\nif_let_mutex, clippy :: mismatched_target_os, clippy :: await_holding_lock,\nclippy :: match_on_vec_items, clippy :: imprecise_flops, clippy ::\nsuboptimal_flops, clippy :: lossy_float_literal, clippy ::\nrest_pat_in_fully_bound_structs, clippy :: fn_params_excessive_bools, clippy\n:: exit, clippy :: inefficient_to_string, clippy :: linkedlist, clippy ::\nmacro_use_imports, clippy :: option_option, clippy :: verbose_file_reads,\nclippy :: unnested_or_patterns, clippy :: str_to_string, rust_2018_idioms,\nfuture_incompatible, nonstandard_style, missing_debug_implementations,\nmissing_docs)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","byte_start":419,"byte_end":1375,"line_start":11,"line_end":45,"column_start":1,"column_end":3}},{"value":"deny(unreachable_pub, private_in_public)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","byte_start":1376,"byte_end":1420,"line_start":46,"line_end":46,"column_start":1,"column_end":45}},{"value":"allow(elided_lifetimes_in_paths, clippy :: type_complexity)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","byte_start":1421,"byte_end":1482,"line_start":47,"line_end":47,"column_start":1,"column_end":62}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","byte_start":1483,"byte_end":1506,"line_start":48,"line_end":48,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":534},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/error.rs","byte_start":5521,"byte_end":5526,"line_start":6,"line_end":6,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":535}],"decl_id":null,"docs":" Errors that can happen when using axum.\n","sig":null,"attributes":[{"value":"/ Errors that can happen when using axum.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/error.rs","byte_start":5449,"byte_end":5492,"line_start":4,"line_end":4,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/error.rs","byte_start":5628,"byte_end":5631,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"pub fn new<impl Into<BoxError>: Into<BoxError>>(impl Into<BoxError>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Error` from a boxable error.\n","sig":null,"attributes":[{"value":"/ Create a new `Error` from a boxable error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/error.rs","byte_start":5570,"byte_end":5616,"line_start":11,"line_end":11,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":28},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/body.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"body","qualname":"::body","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/body.rs","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56}],"decl_id":null,"docs":" HTTP body utilities.\n","sig":null,"attributes":[{"value":"/ HTTP body utilities.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/body.rs","byte_start":5987,"byte_end":6011,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":49},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/body.rs","byte_start":6295,"byte_end":6302,"line_start":12,"line_end":12,"column_start":10,"column_end":17},"name":"BoxBody","qualname":"::body::BoxBody","value":"http_body::combinators::UnsyncBoxBody<Bytes, Error>","parent":null,"children":[],"decl_id":null,"docs":" A boxed [`Body`] trait object.","sig":null,"attributes":[{"value":"/ A boxed [`Body`] trait object.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/body.rs","byte_start":6109,"byte_end":6143,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/body.rs","byte_start":6144,"byte_end":6147,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is used in axum as the response body type for applications. It's","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/body.rs","byte_start":6148,"byte_end":6221,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ necessary to unify multiple response bodies types into one.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/body.rs","byte_start":6222,"byte_end":6285,"line_start":11,"line_end":11,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":50},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/body.rs","byte_start":6420,"byte_end":6425,"line_start":15,"line_end":15,"column_start":8,"column_end":13},"name":"boxed","qualname":"::body::boxed","value":"pub fn boxed<B>(B) -> BoxBody where B: http_body::Body<Data = Bytes> + Send +\n'static, B::Error: Into<BoxError>","parent":null,"children":[],"decl_id":null,"docs":" Convert a [`http_body::Body`] into a [`BoxBody`].\n","sig":null,"attributes":[{"value":"/ Convert a [`http_body::Body`] into a [`BoxBody`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/body.rs","byte_start":6359,"byte_end":6412,"line_start":14,"line_end":14,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":60},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"extract","qualname":"::extract","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":111},{"krate":0,"index":155},{"krate":0,"index":1062},{"krate":0,"index":1068},{"krate":0,"index":1076},{"krate":0,"index":177},{"krate":0,"index":1079},{"krate":0,"index":1087}],"decl_id":null,"docs":" Types and traits for extracting data from requests.","sig":null,"attributes":[{"value":"/ Types and traits for extracting data from requests.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":9028,"byte_end":9083,"line_start":1,"line_end":1,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":9084,"byte_end":9087,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`axum::extract`] for more details.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":9088,"byte_end":9131,"line_start":3,"line_end":3,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":9132,"byte_end":9135,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`axum::extract`]: https://docs.rs/axum/latest/axum/extract/index.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":9136,"byte_end":9210,"line_start":5,"line_end":5,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":90},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rejection","qualname":"::extract::rejection","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":582},{"krate":0,"index":589},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":603},{"krate":0,"index":613},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":601}],"decl_id":null,"docs":" Rejection response types.\n","sig":null,"attributes":[{"value":"/ Rejection response types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","byte_start":16698,"byte_end":16727,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":538},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","byte_start":16952,"byte_end":16972,"line_start":11,"line_end":11,"column_start":12,"column_end":32},"name":"BodyAlreadyExtracted","qualname":"::extract::rejection::BodyAlreadyExtracted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Rejection type used if you try and extract the request body more than\n once.\n","sig":null,"attributes":[{"value":"/ Rejection type used if you try and extract the request body more than","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","byte_start":16813,"byte_end":16886,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ once.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","byte_start":16887,"byte_end":16896,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"non_exhaustive","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","byte_start":16923,"byte_end":16940,"line_start":10,"line_end":10,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":553},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","byte_start":17723,"byte_end":17741,"line_start":36,"line_end":36,"column_start":16,"column_end":34},"name":"FailedToBufferBody","qualname":"::extract::rejection::FailedToBufferBody","value":"","parent":null,"children":[],"decl_id":null,"docs":" Rejection type for extractors that buffer the request body. Used if the\n request body cannot be buffered due to an error.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":567},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","byte_start":17994,"byte_end":18005,"line_start":44,"line_end":44,"column_start":16,"column_end":27},"name":"InvalidUtf8","qualname":"::extract::rejection::InvalidUtf8","value":"","parent":null,"children":[],"decl_id":null,"docs":" Rejection type used when buffering the request into a [`String`] if the\n body doesn't contain valid UTF-8.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":583},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","byte_start":18236,"byte_end":18256,"line_start":53,"line_end":53,"column_start":9,"column_end":29},"name":"BodyAlreadyExtracted","qualname":"::extract::rejection::BytesRejection::BodyAlreadyExtracted","value":"BytesRejection::BodyAlreadyExtracted(BodyAlreadyExtracted)","parent":{"krate":0,"index":582},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/macros.rs","byte_start":3280,"byte_end":3302,"line_start":57,"line_end":57,"column_start":17,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":586},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","byte_start":18266,"byte_end":18284,"line_start":54,"line_end":54,"column_start":9,"column_end":27},"name":"FailedToBufferBody","qualname":"::extract::rejection::BytesRejection::FailedToBufferBody","value":"BytesRejection::FailedToBufferBody(FailedToBufferBody)","parent":{"krate":0,"index":582},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/macros.rs","byte_start":3280,"byte_end":3302,"line_start":57,"line_end":57,"column_start":17,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":582},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","byte_start":18211,"byte_end":18225,"line_start":52,"line_end":52,"column_start":14,"column_end":28},"name":"BytesRejection","qualname":"::extract::rejection::BytesRejection","value":"pub enum BytesRejection {\n    BodyAlreadyExtracted(BodyAlreadyExtracted),\n    FailedToBufferBody(FailedToBufferBody),\n}","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":586}],"decl_id":null,"docs":" Rejection used for [`Bytes`](bytes::Bytes).","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/macros.rs","byte_start":3206,"byte_end":3223,"line_start":54,"line_end":54,"column_start":9,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":604},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","byte_start":18481,"byte_end":18501,"line_start":63,"line_end":63,"column_start":9,"column_end":29},"name":"BodyAlreadyExtracted","qualname":"::extract::rejection::StringRejection::BodyAlreadyExtracted","value":"StringRejection::BodyAlreadyExtracted(BodyAlreadyExtracted)","parent":{"krate":0,"index":603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/macros.rs","byte_start":3280,"byte_end":3302,"line_start":57,"line_end":57,"column_start":17,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":607},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","byte_start":18511,"byte_end":18529,"line_start":64,"line_end":64,"column_start":9,"column_end":27},"name":"FailedToBufferBody","qualname":"::extract::rejection::StringRejection::FailedToBufferBody","value":"StringRejection::FailedToBufferBody(FailedToBufferBody)","parent":{"krate":0,"index":603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/macros.rs","byte_start":3280,"byte_end":3302,"line_start":57,"line_end":57,"column_start":17,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":610},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","byte_start":18539,"byte_end":18550,"line_start":65,"line_end":65,"column_start":9,"column_end":20},"name":"InvalidUtf8","qualname":"::extract::rejection::StringRejection::InvalidUtf8","value":"StringRejection::InvalidUtf8(InvalidUtf8)","parent":{"krate":0,"index":603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/macros.rs","byte_start":3280,"byte_end":3302,"line_start":57,"line_end":57,"column_start":17,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":603},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","byte_start":18455,"byte_end":18470,"line_start":62,"line_end":62,"column_start":14,"column_end":29},"name":"StringRejection","qualname":"::extract::rejection::StringRejection","value":"pub enum StringRejection {\n    BodyAlreadyExtracted(BodyAlreadyExtracted),\n    FailedToBufferBody(FailedToBufferBody),\n    InvalidUtf8(InvalidUtf8),\n}","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":610}],"decl_id":null,"docs":" Rejection used for [`String`].","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/macros.rs","byte_start":3206,"byte_end":3223,"line_start":54,"line_end":54,"column_start":9,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":1062},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":10873,"byte_end":10884,"line_start":63,"line_end":63,"column_start":11,"column_end":22},"name":"FromRequest","qualname":"::extract::FromRequest","value":"FromRequest<B>: Sized","parent":null,"children":[{"krate":0,"index":1064},{"krate":0,"index":1065}],"decl_id":null,"docs":" Types that can be created from requests.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1064},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":11048,"byte_end":11057,"line_start":66,"line_end":66,"column_start":10,"column_end":19},"name":"Rejection","qualname":"::extract::FromRequest::Rejection","value":"type Rejection: IntoResponse;","parent":{"krate":0,"index":1062},"children":[],"decl_id":null,"docs":" If the extractor fails it'll use this \"rejection\" type. A rejection is\n a kind of error that can be converted into a response.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":11119,"byte_end":11131,"line_start":69,"line_end":69,"column_start":14,"column_end":26},"name":"from_request","qualname":"::extract::FromRequest::from_request","value":"pub fn from_request<'life0, 'async_trait>(&'life0 mut RequestParts<B>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Self, Self::Rejection>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":1062},"children":[],"decl_id":null,"docs":" Perform the extraction.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":10848,"byte_end":10862,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":10848,"byte_end":10862,"line_start":62,"line_end":62,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1068},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":11374,"byte_end":11386,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"name":"RequestParts","qualname":"::extract::RequestParts","value":"RequestParts {  }","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075}],"decl_id":null,"docs":" The type used with [`FromRequest`] to extract data from requests.","sig":null,"attributes":[{"value":"/ The type used with [`FromRequest`] to extract data from requests.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":11196,"byte_end":11265,"line_start":72,"line_end":72,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":11266,"byte_end":11269,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Has several convenience methods for getting owned parts of the request.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":11270,"byte_end":11345,"line_start":74,"line_end":74,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":11870,"byte_end":11873,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"new","qualname":"<RequestParts<B>>::new","value":"pub fn new(Request<B>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `RequestParts`.","sig":null,"attributes":[{"value":"/ Create a new `RequestParts`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":11554,"byte_end":11586,"line_start":86,"line_end":86,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":11591,"byte_end":11594,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ You generally shouldn't need to construct this type yourself, unless","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":11599,"byte_end":11671,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ using extractors outside of axum for example to implement a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":11676,"byte_end":11739,"line_start":89,"line_end":89,"column_start":5,"column_end":68}},{"value":"/ [`tower::Service`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":11744,"byte_end":11767,"line_start":90,"line_end":90,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":11772,"byte_end":11775,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [`tower::Service`]: https://docs.rs/tower/lastest/tower/trait.Service.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":11780,"byte_end":11858,"line_start":92,"line_end":92,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":13233,"byte_end":13240,"line_start":144,"line_end":144,"column_start":18,"column_end":25},"name":"extract","qualname":"<RequestParts<B>>::extract","value":"pub async fn extract<E: FromRequest<B>, '_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Apply an extractor to this `RequestParts`.","sig":null,"attributes":[{"value":"/ Apply an extractor to this `RequestParts`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":12333,"byte_end":12379,"line_start":116,"line_end":116,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":12384,"byte_end":12387,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ `req.extract::<Extractor>()` is equivalent to `Extractor::from_request(req)`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":12392,"byte_end":12473,"line_start":118,"line_end":118,"column_start":5,"column_end":86}},{"value":"/ This function simply exists as a convenience.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":12478,"byte_end":12527,"line_start":119,"line_end":119,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":12532,"byte_end":12535,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":12540,"byte_end":12553,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":12558,"byte_end":12561,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":12566,"byte_end":12573,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ # struct MyExtractor {}","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":12578,"byte_end":12605,"line_start":124,"line_end":124,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":12610,"byte_end":12613,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":12618,"byte_end":12651,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":12656,"byte_end":12659,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ use async_trait::async_trait;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":12664,"byte_end":12697,"line_start":128,"line_end":128,"column_start":5,"column_end":38}},{"value":"/ use axum::extract::{FromRequest, RequestParts};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":12702,"byte_end":12753,"line_start":129,"line_end":129,"column_start":5,"column_end":56}},{"value":"/ use http::{Method, Uri};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":12758,"byte_end":12786,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":12791,"byte_end":12794,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ #[async_trait]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":12799,"byte_end":12817,"line_start":132,"line_end":132,"column_start":5,"column_end":23}},{"value":"/ impl<B: Send> FromRequest<B> for MyExtractor {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":12822,"byte_end":12872,"line_start":133,"line_end":133,"column_start":5,"column_end":55}},{"value":"/     type Rejection = Infallible;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":12877,"byte_end":12913,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":12918,"byte_end":12921,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     async fn from_request(req: &mut RequestParts<B>) -> Result<Self, Infallible> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":12926,"byte_end":13012,"line_start":136,"line_end":136,"column_start":5,"column_end":91}},{"value":"/         let method = req.extract::<Method>().await?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":13017,"byte_end":13073,"line_start":137,"line_end":137,"column_start":5,"column_end":61}},{"value":"/         let path = req.extract::<Uri>().await?.path().to_owned();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":13078,"byte_end":13147,"line_start":138,"line_end":138,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":13152,"byte_end":13155,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/         todo!()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":13160,"byte_end":13179,"line_start":140,"line_end":140,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":13184,"byte_end":13193,"line_start":141,"line_end":141,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":13198,"byte_end":13203,"line_start":142,"line_end":142,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":13208,"byte_end":13215,"line_start":143,"line_end":143,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":13579,"byte_end":13595,"line_start":154,"line_end":154,"column_start":12,"column_end":28},"name":"try_into_request","qualname":"<RequestParts<B>>::try_into_request","value":"pub fn try_into_request(Self) -> Result<Request<B>, BodyAlreadyExtracted>","parent":null,"children":[],"decl_id":null,"docs":" Convert this `RequestParts` back into a [`Request`].","sig":null,"attributes":[{"value":"/ Convert this `RequestParts` back into a [`Request`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":13347,"byte_end":13403,"line_start":148,"line_end":148,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":13408,"byte_end":13411,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Fails if The request body has been extracted, that is [`take_body`] has","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":13416,"byte_end":13491,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"/ been called.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":13496,"byte_end":13512,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":13517,"byte_end":13520,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`take_body`]: RequestParts::take_body","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":13525,"byte_end":13567,"line_start":153,"line_end":153,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":14239,"byte_end":14245,"line_start":180,"line_end":180,"column_start":12,"column_end":18},"name":"method","qualname":"<RequestParts<B>>::method","value":"pub fn method(&Self) -> &Method","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference the request method.\n","sig":null,"attributes":[{"value":"/ Gets a reference the request method.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":14187,"byte_end":14227,"line_start":179,"line_end":179,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":14361,"byte_end":14371,"line_start":185,"line_end":185,"column_start":12,"column_end":22},"name":"method_mut","qualname":"<RequestParts<B>>::method_mut","value":"pub fn method_mut(&mut Self) -> &mut Method","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the request method.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the request method.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":14298,"byte_end":14349,"line_start":184,"line_end":184,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":14485,"byte_end":14488,"line_start":190,"line_end":190,"column_start":12,"column_end":15},"name":"uri","qualname":"<RequestParts<B>>::uri","value":"pub fn uri(&Self) -> &Uri","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference the request URI.\n","sig":null,"attributes":[{"value":"/ Gets a reference the request URI.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":14436,"byte_end":14473,"line_start":189,"line_end":189,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":14595,"byte_end":14602,"line_start":195,"line_end":195,"column_start":12,"column_end":19},"name":"uri_mut","qualname":"<RequestParts<B>>::uri_mut","value":"pub fn uri_mut(&mut Self) -> &mut Uri","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the request URI.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the request URI.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":14535,"byte_end":14583,"line_start":194,"line_end":194,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":14706,"byte_end":14713,"line_start":200,"line_end":200,"column_start":12,"column_end":19},"name":"version","qualname":"<RequestParts<B>>::version","value":"pub fn version(&Self) -> Version","parent":null,"children":[],"decl_id":null,"docs":" Get the request HTTP version.\n","sig":null,"attributes":[{"value":"/ Get the request HTTP version.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":14661,"byte_end":14694,"line_start":199,"line_end":199,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":14835,"byte_end":14846,"line_start":205,"line_end":205,"column_start":12,"column_end":23},"name":"version_mut","qualname":"<RequestParts<B>>::version_mut","value":"pub fn version_mut(&mut Self) -> &mut Version","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the request HTTP version.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the request HTTP version.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":14766,"byte_end":14823,"line_start":204,"line_end":204,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":14969,"byte_end":14976,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"headers","qualname":"<RequestParts<B>>::headers","value":"pub fn headers(&Self) -> &HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the request headers.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the request headers.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":14913,"byte_end":14957,"line_start":209,"line_end":209,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":15097,"byte_end":15108,"line_start":215,"line_end":215,"column_start":12,"column_end":23},"name":"headers_mut","qualname":"<RequestParts<B>>::headers_mut","value":"pub fn headers_mut(&mut Self) -> &mut HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the request headers.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the request headers.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":15033,"byte_end":15085,"line_start":214,"line_end":214,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":15236,"byte_end":15246,"line_start":220,"line_end":220,"column_start":12,"column_end":22},"name":"extensions","qualname":"<RequestParts<B>>::extensions","value":"pub fn extensions(&Self) -> &Extensions","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the request extensions.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the request extensions.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":15177,"byte_end":15224,"line_start":219,"line_end":219,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":15374,"byte_end":15388,"line_start":225,"line_end":225,"column_start":12,"column_end":26},"name":"extensions_mut","qualname":"<RequestParts<B>>::extensions_mut","value":"pub fn extensions_mut(&mut Self) -> &mut Extensions","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the request extensions.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the request extensions.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":15307,"byte_end":15362,"line_start":224,"line_end":224,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":15594,"byte_end":15598,"line_start":232,"line_end":232,"column_start":12,"column_end":16},"name":"body","qualname":"<RequestParts<B>>::body","value":"pub fn body(&Self) -> Option<&B>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the request body.","sig":null,"attributes":[{"value":"/ Gets a reference to the request body.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":15461,"byte_end":15502,"line_start":229,"line_end":229,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":15507,"byte_end":15510,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the body has been taken by another extractor.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":15515,"byte_end":15582,"line_start":231,"line_end":231,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":15911,"byte_end":15919,"line_start":240,"line_end":240,"column_start":12,"column_end":20},"name":"body_mut","qualname":"<RequestParts<B>>::body_mut","value":"pub fn body_mut(&mut Self) -> &mut Option<B>","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the request body.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the request body.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":15660,"byte_end":15709,"line_start":236,"line_end":236,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":15714,"byte_end":15717,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the body has been taken by another extractor.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":15722,"byte_end":15789,"line_start":238,"line_end":238,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":16066,"byte_end":16075,"line_start":245,"line_end":245,"column_start":12,"column_end":21},"name":"take_body","qualname":"<RequestParts<B>>::take_body","value":"pub fn take_body(&mut Self) -> Option<B>","parent":null,"children":[],"decl_id":null,"docs":" Takes the body out of the request, leaving a `None` in its place.\n","sig":null,"attributes":[{"value":"/ Takes the body out of the request, leaving a `None` in its place.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":15985,"byte_end":16054,"line_start":244,"line_end":244,"column_start":5,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":198},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"response","qualname":"::response","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":244},{"krate":0,"index":426},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":2053},{"krate":0,"index":2056},{"krate":0,"index":530}],"decl_id":null,"docs":" Types and traits for generating responses.","sig":null,"attributes":[{"value":"/ Types and traits for generating responses.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":23703,"byte_end":23749,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":23750,"byte_end":23753,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`axum::response`] for more details.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":23754,"byte_end":23798,"line_start":3,"line_end":3,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":23799,"byte_end":23802,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`axum::response`]: https://docs.rs/axum/latest/axum/response/index.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":23803,"byte_end":23879,"line_start":5,"line_end":5,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":1095},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":28064,"byte_end":28077,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"AppendHeaders","qualname":"::response::append_headers::AppendHeaders","value":"","parent":null,"children":[],"decl_id":null,"docs":" Append headers to a response.","sig":null,"attributes":[{"value":"/ Append headers to a response.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27172,"byte_end":27205,"line_start":5,"line_end":5,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27206,"byte_end":27209,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Returning something like `[(\"content-type\", \"foo=bar\")]` from a handler will override any","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27210,"byte_end":27303,"line_start":7,"line_end":7,"column_start":1,"column_end":94}},{"value":"/ existing `content-type` headers. If instead you want to append headers, use `AppendHeaders`:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27304,"byte_end":27400,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27401,"byte_end":27404,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27405,"byte_end":27416,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"/ use axum::{","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27417,"byte_end":27432,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/     response::{AppendHeaders, IntoResponse},","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27433,"byte_end":27481,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/     http::header::SET_COOKIE,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27482,"byte_end":27515,"line_start":13,"line_end":13,"column_start":1,"column_end":34}},{"value":"/ };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27516,"byte_end":27522,"line_start":14,"line_end":14,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27523,"byte_end":27526,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ async fn handler() -> impl IntoResponse {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27527,"byte_end":27572,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/     // something that sets the `set-cookie` header","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27573,"byte_end":27627,"line_start":17,"line_end":17,"column_start":1,"column_end":55}},{"value":"/     let set_some_cookies = /* ... */","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27628,"byte_end":27668,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/     # axum::http::HeaderMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27669,"byte_end":27708,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27709,"byte_end":27712,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/     (","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27713,"byte_end":27722,"line_start":21,"line_end":21,"column_start":1,"column_end":10}},{"value":"/         set_some_cookies,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27723,"byte_end":27752,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/         // append two `set-cookie` headers to the response","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27753,"byte_end":27815,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/         // without overriding the ones added by `set_some_cookies`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27816,"byte_end":27886,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/         AppendHeaders([","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27887,"byte_end":27914,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/             (SET_COOKIE, \"foo=bar\"),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27915,"byte_end":27955,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/             (SET_COOKIE, \"baz=qux\"),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27956,"byte_end":27996,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"/         ])","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":27997,"byte_end":28011,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/     )","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":28012,"byte_end":28021,"line_start":29,"line_end":29,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":28022,"byte_end":28027,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":28028,"byte_end":28035,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1100},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":28100,"byte_end":28115,"line_start":33,"line_end":33,"column_start":48,"column_end":63},"name":"0","qualname":"::response::append_headers::AppendHeaders::0","value":"[(K, V); N]","parent":{"krate":0,"index":1095},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":336},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32474,"byte_end":32486,"line_start":126,"line_end":126,"column_start":11,"column_end":23},"name":"IntoResponse","qualname":"::response::into_response::IntoResponse","value":"IntoResponse","parent":null,"children":[{"krate":0,"index":337}],"decl_id":null,"docs":" Trait for generating responses.","sig":null,"attributes":[{"value":"/ Trait for generating responses.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":29446,"byte_end":29481,"line_start":20,"line_end":20,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":29482,"byte_end":29485,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Types that implement `IntoResponse` can be returned from handlers.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":29486,"byte_end":29556,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":29557,"byte_end":29560,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Implementing `IntoResponse`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":29561,"byte_end":29594,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":29595,"byte_end":29598,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ You generally shouldn't have to implement `IntoResponse` manually, as axum","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":29599,"byte_end":29677,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ provides implementations for many common types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":29678,"byte_end":29729,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":29730,"byte_end":29733,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ However it might be necessary if you have a custom error type that you want","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":29734,"byte_end":29813,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ to return from handlers:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":29814,"byte_end":29842,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":29843,"byte_end":29846,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":29847,"byte_end":29858,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ use axum::{","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":29859,"byte_end":29874,"line_start":33,"line_end":33,"column_start":1,"column_end":16}},{"value":"/     Router,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":29875,"byte_end":29890,"line_start":34,"line_end":34,"column_start":1,"column_end":16}},{"value":"/     body::{self, Bytes},","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":29891,"byte_end":29919,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/     routing::get,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":29920,"byte_end":29941,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     http::StatusCode,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":29942,"byte_end":29967,"line_start":37,"line_end":37,"column_start":1,"column_end":26}},{"value":"/     response::{IntoResponse, Response},","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":29968,"byte_end":30011,"line_start":38,"line_end":38,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30012,"byte_end":30018,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30019,"byte_end":30022,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ enum MyError {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30023,"byte_end":30041,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/     SomethingWentWrong,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30042,"byte_end":30069,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/     SomethingElseWentWrong,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30070,"byte_end":30101,"line_start":43,"line_end":43,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30102,"byte_end":30107,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30108,"byte_end":30111,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ impl IntoResponse for MyError {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30112,"byte_end":30147,"line_start":46,"line_end":46,"column_start":1,"column_end":36}},{"value":"/     fn into_response(self) -> Response {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30148,"byte_end":30192,"line_start":47,"line_end":47,"column_start":1,"column_end":45}},{"value":"/         let body = match self {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30193,"byte_end":30228,"line_start":48,"line_end":48,"column_start":1,"column_end":36}},{"value":"/             MyError::SomethingWentWrong => \"something went wrong\",","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30229,"byte_end":30299,"line_start":49,"line_end":49,"column_start":1,"column_end":71}},{"value":"/             MyError::SomethingElseWentWrong => \"something else went wrong\",","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30300,"byte_end":30379,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/         };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30380,"byte_end":30394,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30395,"byte_end":30398,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/         // its often easiest to implement `IntoResponse` by calling other implementations","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30399,"byte_end":30492,"line_start":53,"line_end":53,"column_start":1,"column_end":94}},{"value":"/         (StatusCode::INTERNAL_SERVER_ERROR, body).into_response()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30493,"byte_end":30562,"line_start":54,"line_end":54,"column_start":1,"column_end":70}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30563,"byte_end":30572,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30573,"byte_end":30578,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30579,"byte_end":30582,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // `Result<impl IntoResponse, MyError>` can now be returned from handlers","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30583,"byte_end":30660,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ let app = Router::new().route(\"/\", get(handler));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30661,"byte_end":30714,"line_start":59,"line_end":59,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30715,"byte_end":30718,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ async fn handler() -> Result<(), MyError> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30719,"byte_end":30766,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/     Err(MyError::SomethingWentWrong)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30767,"byte_end":30807,"line_start":62,"line_end":62,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30808,"byte_end":30813,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ # async {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30814,"byte_end":30827,"line_start":64,"line_end":64,"column_start":1,"column_end":14}},{"value":"/ # hyper::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30828,"byte_end":30922,"line_start":65,"line_end":65,"column_start":1,"column_end":95}},{"value":"/ # };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30923,"byte_end":30931,"line_start":66,"line_end":66,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30932,"byte_end":30939,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30940,"byte_end":30943,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Or if you have a custom body type you'll also need to implement","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":30944,"byte_end":31011,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/ `IntoResponse` for it:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31012,"byte_end":31038,"line_start":70,"line_end":70,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31039,"byte_end":31042,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31043,"byte_end":31054,"line_start":72,"line_end":72,"column_start":1,"column_end":12}},{"value":"/ use axum::{","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31055,"byte_end":31070,"line_start":73,"line_end":73,"column_start":1,"column_end":16}},{"value":"/     body,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31071,"byte_end":31084,"line_start":74,"line_end":74,"column_start":1,"column_end":14}},{"value":"/     routing::get,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31085,"byte_end":31106,"line_start":75,"line_end":75,"column_start":1,"column_end":22}},{"value":"/     response::{IntoResponse, Response},","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31107,"byte_end":31150,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/     Router,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31151,"byte_end":31166,"line_start":77,"line_end":77,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31167,"byte_end":31173,"line_start":78,"line_end":78,"column_start":1,"column_end":7}},{"value":"/ use http_body::Body;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31174,"byte_end":31198,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/ use http::HeaderMap;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31199,"byte_end":31223,"line_start":80,"line_end":80,"column_start":1,"column_end":25}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31224,"byte_end":31245,"line_start":81,"line_end":81,"column_start":1,"column_end":22}},{"value":"/ use std::{","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31246,"byte_end":31260,"line_start":82,"line_end":82,"column_start":1,"column_end":15}},{"value":"/     convert::Infallible,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31261,"byte_end":31289,"line_start":83,"line_end":83,"column_start":1,"column_end":29}},{"value":"/     task::{Poll, Context},","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31290,"byte_end":31320,"line_start":84,"line_end":84,"column_start":1,"column_end":31}},{"value":"/     pin::Pin,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31321,"byte_end":31338,"line_start":85,"line_end":85,"column_start":1,"column_end":18}},{"value":"/ };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31339,"byte_end":31345,"line_start":86,"line_end":86,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31346,"byte_end":31349,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ struct MyBody;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31350,"byte_end":31368,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31369,"byte_end":31372,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ // First implement `Body` for `MyBody`. This could for example use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31373,"byte_end":31443,"line_start":90,"line_end":90,"column_start":1,"column_end":71}},{"value":"/ // some custom streaming protocol.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31444,"byte_end":31482,"line_start":91,"line_end":91,"column_start":1,"column_end":39}},{"value":"/ impl Body for MyBody {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31483,"byte_end":31509,"line_start":92,"line_end":92,"column_start":1,"column_end":27}},{"value":"/     type Data = Bytes;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31510,"byte_end":31536,"line_start":93,"line_end":93,"column_start":1,"column_end":27}},{"value":"/     type Error = Infallible;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31537,"byte_end":31569,"line_start":94,"line_end":94,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31570,"byte_end":31573,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/     fn poll_data(","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31574,"byte_end":31595,"line_start":96,"line_end":96,"column_start":1,"column_end":22}},{"value":"/         self: Pin<&mut Self>,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31596,"byte_end":31629,"line_start":97,"line_end":97,"column_start":1,"column_end":34}},{"value":"/         cx: &mut Context<'_>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31630,"byte_end":31662,"line_start":98,"line_end":98,"column_start":1,"column_end":33}},{"value":"/     ) -> Poll<Option<Result<Self::Data, Self::Error>>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31663,"byte_end":31723,"line_start":99,"line_end":99,"column_start":1,"column_end":61}},{"value":"/         # unimplemented!()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31724,"byte_end":31754,"line_start":100,"line_end":100,"column_start":1,"column_end":31}},{"value":"/         // ...","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31755,"byte_end":31773,"line_start":101,"line_end":101,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31774,"byte_end":31783,"line_start":102,"line_end":102,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31784,"byte_end":31787,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/     fn poll_trailers(","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31788,"byte_end":31813,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/         self: Pin<&mut Self>,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31814,"byte_end":31847,"line_start":105,"line_end":105,"column_start":1,"column_end":34}},{"value":"/         cx: &mut Context<'_>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31848,"byte_end":31880,"line_start":106,"line_end":106,"column_start":1,"column_end":33}},{"value":"/     ) -> Poll<Result<Option<HeaderMap>, Self::Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31881,"byte_end":31940,"line_start":107,"line_end":107,"column_start":1,"column_end":60}},{"value":"/         # unimplemented!()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31941,"byte_end":31971,"line_start":108,"line_end":108,"column_start":1,"column_end":31}},{"value":"/         // ...","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31972,"byte_end":31990,"line_start":109,"line_end":109,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":31991,"byte_end":32000,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32001,"byte_end":32006,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32007,"byte_end":32010,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ // Now we can implement `IntoResponse` directly for `MyBody`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32011,"byte_end":32075,"line_start":113,"line_end":113,"column_start":1,"column_end":65}},{"value":"/ impl IntoResponse for MyBody {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32076,"byte_end":32110,"line_start":114,"line_end":114,"column_start":1,"column_end":35}},{"value":"/     fn into_response(self) -> Response {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32111,"byte_end":32155,"line_start":115,"line_end":115,"column_start":1,"column_end":45}},{"value":"/         Response::new(body::boxed(self))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32156,"byte_end":32200,"line_start":116,"line_end":116,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32201,"byte_end":32210,"line_start":117,"line_end":117,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32211,"byte_end":32216,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32217,"byte_end":32220,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ // `MyBody` can now be returned from handlers.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32221,"byte_end":32271,"line_start":120,"line_end":120,"column_start":1,"column_end":51}},{"value":"/ let app = Router::new().route(\"/\", get(|| async { MyBody }));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32272,"byte_end":32337,"line_start":121,"line_end":121,"column_start":1,"column_end":66}},{"value":"/ # async {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32338,"byte_end":32351,"line_start":122,"line_end":122,"column_start":1,"column_end":14}},{"value":"/ # hyper::Server::bind(&\"\".parse().unwrap()).serve(app.into_make_service()).await.unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32352,"byte_end":32446,"line_start":123,"line_end":123,"column_start":1,"column_end":95}},{"value":"/ # };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32447,"byte_end":32455,"line_start":124,"line_end":124,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32456,"byte_end":32463,"line_start":125,"line_end":125,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32523,"byte_end":32536,"line_start":128,"line_end":128,"column_start":8,"column_end":21},"name":"into_response","qualname":"::response::into_response::IntoResponse::into_response","value":"pub fn into_response(Self) -> Response","parent":{"krate":0,"index":336},"children":[],"decl_id":null,"docs":" Create a response.\n","sig":null,"attributes":[{"value":"/ Create a response.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32493,"byte_end":32515,"line_start":127,"line_end":127,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":462},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44831,"byte_end":44848,"line_start":73,"line_end":73,"column_start":11,"column_end":28},"name":"IntoResponseParts","qualname":"::response::into_response_parts::IntoResponseParts","value":"IntoResponseParts","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464}],"decl_id":null,"docs":" Trait for adding headers and extensions to a response.","sig":null,"attributes":[{"value":"/ Trait for adding headers and extensions to a response.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":42819,"byte_end":42877,"line_start":11,"line_end":11,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":42878,"byte_end":42881,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":42882,"byte_end":42895,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":42896,"byte_end":42899,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":42900,"byte_end":42911,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ use axum::{","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":42912,"byte_end":42927,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"/     response::{ResponseParts, IntoResponse, IntoResponseParts, Response},","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":42928,"byte_end":43005,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/     http::{StatusCode, header::{HeaderName, HeaderValue}},","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43006,"byte_end":43068,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/ };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43069,"byte_end":43075,"line_start":19,"line_end":19,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43076,"byte_end":43079,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ // Hypothetical helper type for setting a single header","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43080,"byte_end":43139,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"/ struct SetHeader<'a>(&'a str, &'a str);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43140,"byte_end":43183,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43184,"byte_end":43187,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ impl<'a> IntoResponseParts for SetHeader<'a> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43188,"byte_end":43238,"line_start":24,"line_end":24,"column_start":1,"column_end":51}},{"value":"/     type Error = (StatusCode, String);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43239,"byte_end":43281,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43282,"byte_end":43285,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     fn into_response_parts(self, mut res: ResponseParts) -> Result<ResponseParts, Self::Error> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43286,"byte_end":43386,"line_start":27,"line_end":27,"column_start":1,"column_end":101}},{"value":"/         match (self.0.parse::<HeaderName>(), self.1.parse::<HeaderValue>()) {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43387,"byte_end":43468,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/             (Ok(name), Ok(value)) => {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43469,"byte_end":43511,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/                 res.headers_mut().insert(name, value);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43512,"byte_end":43570,"line_start":30,"line_end":30,"column_start":1,"column_end":59}},{"value":"/             },","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43571,"byte_end":43589,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/             (Err(_), _) => {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43590,"byte_end":43622,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/                 return Err((","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43623,"byte_end":43655,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/                     StatusCode::INTERNAL_SERVER_ERROR,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43656,"byte_end":43714,"line_start":34,"line_end":34,"column_start":1,"column_end":59}},{"value":"/                     format!(\"Invalid header name {}\", self.0),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43715,"byte_end":43781,"line_start":35,"line_end":35,"column_start":1,"column_end":67}},{"value":"/                 ));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43782,"byte_end":43805,"line_start":36,"line_end":36,"column_start":1,"column_end":24}},{"value":"/             },","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43806,"byte_end":43824,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/             (_, Err(_)) => {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43825,"byte_end":43857,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/                 return Err((","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43858,"byte_end":43890,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/                     StatusCode::INTERNAL_SERVER_ERROR,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43891,"byte_end":43949,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"/                     format!(\"Invalid header value {}\", self.1),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":43950,"byte_end":44017,"line_start":41,"line_end":41,"column_start":1,"column_end":68}},{"value":"/                 ));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44018,"byte_end":44041,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/             },","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44042,"byte_end":44060,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44061,"byte_end":44074,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44075,"byte_end":44078,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/         Ok(res)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44079,"byte_end":44098,"line_start":46,"line_end":46,"column_start":1,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44099,"byte_end":44108,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44109,"byte_end":44114,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44115,"byte_end":44118,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Its also recommended to implement `IntoResponse` so `SetHeader` can be used on its own as","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44119,"byte_end":44215,"line_start":50,"line_end":50,"column_start":1,"column_end":97}},{"value":"/ // the response","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44216,"byte_end":44235,"line_start":51,"line_end":51,"column_start":1,"column_end":20}},{"value":"/ impl<'a> IntoResponse for SetHeader<'a> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44236,"byte_end":44281,"line_start":52,"line_end":52,"column_start":1,"column_end":46}},{"value":"/     fn into_response(self) -> Response {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44282,"byte_end":44326,"line_start":53,"line_end":53,"column_start":1,"column_end":45}},{"value":"/         // This gives an empty response with the header","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44327,"byte_end":44386,"line_start":54,"line_end":54,"column_start":1,"column_end":60}},{"value":"/         (self, ()).into_response()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44387,"byte_end":44425,"line_start":55,"line_end":55,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44426,"byte_end":44435,"line_start":56,"line_end":56,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44436,"byte_end":44441,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44442,"byte_end":44445,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // We can now return `SetHeader` in responses","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44446,"byte_end":44495,"line_start":59,"line_end":59,"column_start":1,"column_end":50}},{"value":"/ async fn handler() -> impl IntoResponse {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44496,"byte_end":44541,"line_start":60,"line_end":60,"column_start":1,"column_end":46}},{"value":"/     (","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44542,"byte_end":44551,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/         SetHeader(\"server\", \"axum\"),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44552,"byte_end":44592,"line_start":62,"line_end":62,"column_start":1,"column_end":41}},{"value":"/         SetHeader(\"x-foo\", \"custom\"),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44593,"byte_end":44634,"line_start":63,"line_end":63,"column_start":1,"column_end":42}},{"value":"/         \"body\",","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44635,"byte_end":44654,"line_start":64,"line_end":64,"column_start":1,"column_end":20}},{"value":"/     )","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44655,"byte_end":44664,"line_start":65,"line_end":65,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44665,"byte_end":44670,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44671,"byte_end":44674,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ // Or on its own as the whole response","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44675,"byte_end":44717,"line_start":68,"line_end":68,"column_start":1,"column_end":43}},{"value":"/ async fn other_handler() -> impl IntoResponse {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44718,"byte_end":44769,"line_start":69,"line_end":69,"column_start":1,"column_end":52}},{"value":"/     SetHeader(\"x-foo\", \"custom\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44770,"byte_end":44806,"line_start":70,"line_end":70,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44807,"byte_end":44812,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44813,"byte_end":44820,"line_start":72,"line_end":72,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":463},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44999,"byte_end":45004,"line_start":77,"line_end":77,"column_start":10,"column_end":15},"name":"Error","qualname":"::response::into_response_parts::IntoResponseParts::Error","value":"type Error: IntoResponse;","parent":{"krate":0,"index":462},"children":[],"decl_id":null,"docs":" The type returned in the event of an error.","sig":null,"attributes":[{"value":"/ The type returned in the event of an error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44855,"byte_end":44902,"line_start":74,"line_end":74,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44907,"byte_end":44910,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This can be used to fallibly convert types into headers or extensions.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":44915,"byte_end":44989,"line_start":76,"line_end":76,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":45062,"byte_end":45081,"line_start":80,"line_end":80,"column_start":8,"column_end":27},"name":"into_response_parts","qualname":"::response::into_response_parts::IntoResponseParts::into_response_parts","value":"pub fn into_response_parts(Self, ResponseParts)\n-> Result<ResponseParts, Self::Error>","parent":{"krate":0,"index":462},"children":[],"decl_id":null,"docs":" Set parts of the response\n","sig":null,"attributes":[{"value":"/ Set parts of the response","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":45025,"byte_end":45054,"line_start":79,"line_end":79,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1844},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":45574,"byte_end":45587,"line_start":102,"line_end":102,"column_start":12,"column_end":25},"name":"ResponseParts","qualname":"::response::into_response_parts::ResponseParts","value":"ResponseParts {  }","parent":null,"children":[{"krate":0,"index":1845}],"decl_id":null,"docs":" Parts of a response.","sig":null,"attributes":[{"value":"/ Parts of a response.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":45480,"byte_end":45504,"line_start":98,"line_end":98,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":45505,"byte_end":45508,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ Used with [`IntoResponseParts`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":45509,"byte_end":45545,"line_start":100,"line_end":100,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":45705,"byte_end":45712,"line_start":108,"line_end":108,"column_start":12,"column_end":19},"name":"headers","qualname":"<ResponseParts>::headers","value":"pub fn headers(&Self) -> &HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the response headers.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the response headers.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":45648,"byte_end":45693,"line_start":107,"line_end":107,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":45839,"byte_end":45850,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"headers_mut","qualname":"<ResponseParts>::headers_mut","value":"pub fn headers_mut(&mut Self) -> &mut HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the response headers.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the response headers.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":45774,"byte_end":45827,"line_start":112,"line_end":112,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":45984,"byte_end":45994,"line_start":118,"line_end":118,"column_start":12,"column_end":22},"name":"extensions","qualname":"<ResponseParts>::extensions","value":"pub fn extensions(&Self) -> &Extensions","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the response extensions.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the response extensions.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":45924,"byte_end":45972,"line_start":117,"line_end":117,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":46128,"byte_end":46142,"line_start":123,"line_end":123,"column_start":12,"column_end":26},"name":"extensions_mut","qualname":"<ResponseParts>::extensions_mut","value":"pub fn extensions_mut(&mut Self) -> &mut Extensions","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the response extensions.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the response extensions.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":46060,"byte_end":46116,"line_start":122,"line_end":122,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1848},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":47145,"byte_end":47163,"line_start":159,"line_end":159,"column_start":12,"column_end":30},"name":"TryIntoHeaderError","qualname":"::response::into_response_parts::TryIntoHeaderError","value":"TryIntoHeaderError {  }","parent":null,"children":[{"krate":0,"index":1851}],"decl_id":null,"docs":" Error returned if converting a value to a header fails.\n","sig":null,"attributes":[{"value":"/ Error returned if converting a value to a header fails.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":47057,"byte_end":47116,"line_start":157,"line_end":157,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":522},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24276,"byte_end":24284,"line_start":21,"line_end":21,"column_start":10,"column_end":18},"name":"Response","qualname":"::response::Response","value":"http::Response<T>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for [`http::Response`] whose body type defaults to [`BoxBody`], the most common body\n type used with axum.\n","sig":null,"attributes":[{"value":"/ Type alias for [`http::Response`] whose body type defaults to [`BoxBody`], the most common body","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24142,"byte_end":24241,"line_start":19,"line_end":19,"column_start":1,"column_end":100}},{"value":"/ type used with axum.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24242,"byte_end":24266,"line_start":20,"line_end":20,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":524},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26448,"byte_end":26454,"line_start":102,"line_end":102,"column_start":10,"column_end":16},"name":"Result","qualname":"::response::Result","value":"std::result::Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" An [`IntoResponse`]-based result type that uses [`ErrorResponse`] as the error type.","sig":null,"attributes":[{"value":"/ An [`IntoResponse`]-based result type that uses [`ErrorResponse`] as the error type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24320,"byte_end":24408,"line_start":23,"line_end":23,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24409,"byte_end":24412,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ All types which implement [`IntoResponse`] can be converted to an [`ErrorResponse`]. This makes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24413,"byte_end":24512,"line_start":25,"line_end":25,"column_start":1,"column_end":100}},{"value":"/ it useful as a general purpose error type for functions which combine multiple distinct error","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24513,"byte_end":24610,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ types that all implement [`IntoResponse`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24611,"byte_end":24657,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24658,"byte_end":24661,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24662,"byte_end":24675,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24676,"byte_end":24679,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24680,"byte_end":24687,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use axum::{","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24688,"byte_end":24703,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"/     response::{IntoResponse, Response},","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24704,"byte_end":24747,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/     http::StatusCode,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24748,"byte_end":24773,"line_start":34,"line_end":34,"column_start":1,"column_end":26}},{"value":"/ };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24774,"byte_end":24780,"line_start":35,"line_end":35,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24781,"byte_end":24784,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // two fallible functions with different error types","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24785,"byte_end":24841,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"/ fn try_something() -> Result<(), ErrorA> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24842,"byte_end":24888,"line_start":38,"line_end":38,"column_start":1,"column_end":47}},{"value":"/     // ...","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24889,"byte_end":24903,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/     # unimplemented!()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24904,"byte_end":24930,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24931,"byte_end":24936,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24937,"byte_end":24940,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ fn try_something_else() -> Result<(), ErrorB> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24941,"byte_end":24992,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/     // ...","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":24993,"byte_end":25007,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/     # unimplemented!()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25008,"byte_end":25034,"line_start":45,"line_end":45,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25035,"byte_end":25040,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25041,"byte_end":25044,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ // each error type implements `IntoResponse`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25045,"byte_end":25093,"line_start":48,"line_end":48,"column_start":1,"column_end":49}},{"value":"/ struct ErrorA;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25094,"byte_end":25112,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25113,"byte_end":25116,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ impl IntoResponse for ErrorA {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25117,"byte_end":25151,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/     fn into_response(self) -> Response {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25152,"byte_end":25196,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/         // ...","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25197,"byte_end":25215,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/         # unimplemented!()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25216,"byte_end":25246,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25247,"byte_end":25256,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25257,"byte_end":25262,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25263,"byte_end":25266,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ enum ErrorB {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25267,"byte_end":25284,"line_start":58,"line_end":58,"column_start":1,"column_end":18}},{"value":"/     SomethingWentWrong,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25285,"byte_end":25312,"line_start":59,"line_end":59,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25313,"byte_end":25318,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25319,"byte_end":25322,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ impl IntoResponse for ErrorB {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25323,"byte_end":25357,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/     fn into_response(self) -> Response {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25358,"byte_end":25402,"line_start":63,"line_end":63,"column_start":1,"column_end":45}},{"value":"/         // ...","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25403,"byte_end":25421,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/         # unimplemented!()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25422,"byte_end":25452,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25453,"byte_end":25462,"line_start":66,"line_end":66,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25463,"byte_end":25468,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25469,"byte_end":25472,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ // we can combine them using `axum::response::Result` and still use `?`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25473,"byte_end":25548,"line_start":69,"line_end":69,"column_start":1,"column_end":76}},{"value":"/ async fn handler() -> axum::response::Result<&'static str> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25549,"byte_end":25613,"line_start":70,"line_end":70,"column_start":1,"column_end":65}},{"value":"/     // the errors are automatically converted to `ErrorResponse`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25614,"byte_end":25682,"line_start":71,"line_end":71,"column_start":1,"column_end":69}},{"value":"/     try_something()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25683,"byte_end":25708,"line_start":72,"line_end":72,"column_start":1,"column_end":26}},{"value":"/     try_something_else()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25709,"byte_end":25739,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25740,"byte_end":25743,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/     Ok(\"it worked!\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25744,"byte_end":25768,"line_start":75,"line_end":75,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25769,"byte_end":25774,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25775,"byte_end":25782,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25783,"byte_end":25786,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # As a replacement for `std::result::Result`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25787,"byte_end":25835,"line_start":79,"line_end":79,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25836,"byte_end":25839,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ Since `axum::response::Result` has a default error type you only have to specify the `Ok` type:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25840,"byte_end":25939,"line_start":81,"line_end":81,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25940,"byte_end":25943,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25944,"byte_end":25951,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ use axum::{","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25952,"byte_end":25967,"line_start":84,"line_end":84,"column_start":1,"column_end":16}},{"value":"/     response::{IntoResponse, Response, Result},","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":25968,"byte_end":26019,"line_start":85,"line_end":85,"column_start":1,"column_end":52}},{"value":"/     http::StatusCode,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26020,"byte_end":26045,"line_start":86,"line_end":86,"column_start":1,"column_end":26}},{"value":"/ };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26046,"byte_end":26052,"line_start":87,"line_end":87,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26053,"byte_end":26056,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ // `Result<T>` automatically uses `ErrorResponse` as the error type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26057,"byte_end":26129,"line_start":89,"line_end":89,"column_start":1,"column_end":73}},{"value":"/ async fn handler() -> Result<&'static str> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26130,"byte_end":26178,"line_start":90,"line_end":90,"column_start":1,"column_end":49}},{"value":"/     try_something()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26179,"byte_end":26204,"line_start":91,"line_end":91,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26205,"byte_end":26208,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     Ok(\"it worked!\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26209,"byte_end":26233,"line_start":93,"line_end":93,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26234,"byte_end":26239,"line_start":94,"line_end":94,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26240,"byte_end":26243,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ // You can still specify the error even if you've imported `axum::response::Result`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26244,"byte_end":26331,"line_start":96,"line_end":96,"column_start":1,"column_end":88}},{"value":"/ fn try_something() -> Result<(), StatusCode> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26332,"byte_end":26382,"line_start":97,"line_end":97,"column_start":1,"column_end":51}},{"value":"/     // ...","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26383,"byte_end":26397,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/     # unimplemented!()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26398,"byte_end":26424,"line_start":99,"line_end":99,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26425,"byte_end":26430,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26431,"byte_end":26438,"line_start":101,"line_end":101,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2053},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26835,"byte_end":26848,"line_start":120,"line_end":120,"column_start":12,"column_end":25},"name":"ErrorResponse","qualname":"::response::ErrorResponse","value":"","parent":null,"children":[],"decl_id":null,"docs":" An [`IntoResponse`]-based error type","sig":null,"attributes":[{"value":"/ An [`IntoResponse`]-based error type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26725,"byte_end":26765,"line_start":116,"line_end":116,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26766,"byte_end":26769,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ See [`Result`] for more details.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26770,"byte_end":26806,"line_start":118,"line_end":118,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":533},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","byte_start":1768,"byte_end":1776,"line_start":63,"line_end":63,"column_start":10,"column_end":18},"name":"BoxError","qualname":"::BoxError","value":"Box<dyn std::error::Error + Send + Sync>","parent":null,"children":[],"decl_id":null,"docs":" Alias for a type-erased error type.\n","sig":null,"attributes":[{"value":"/ Alias for a type-erased error type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","byte_start":1719,"byte_end":1758,"line_start":62,"line_end":62,"column_start":1,"column_end":40}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/error.rs","byte_start":5558,"byte_end":5563,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/error.rs","byte_start":5759,"byte_end":5764,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/error.rs","byte_start":5883,"byte_end":5888,"line_start":25,"line_end":25,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","byte_start":16980,"byte_end":17000,"line_start":13,"line_end":13,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","byte_start":17123,"byte_end":17143,"line_start":17,"line_end":17,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","byte_start":17290,"byte_end":17310,"line_start":23,"line_end":23,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","byte_start":17448,"byte_end":17468,"line_start":29,"line_end":29,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/request_parts.rs","byte_start":18823,"byte_end":18830,"line_start":9,"line_end":9,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/request_parts.rs","byte_start":19419,"byte_end":19425,"line_start":33,"line_end":33,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/request_parts.rs","byte_start":19653,"byte_end":19656,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/request_parts.rs","byte_start":19881,"byte_end":19888,"line_start":57,"line_end":57,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/request_parts.rs","byte_start":20314,"byte_end":20323,"line_start":74,"line_end":74,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/request_parts.rs","byte_start":20552,"byte_end":20557,"line_start":86,"line_end":86,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/request_parts.rs","byte_start":20999,"byte_end":21005,"line_start":106,"line_end":106,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/request_parts.rs","byte_start":21566,"byte_end":21571,"line_start":129,"line_end":129,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":11532,"byte_end":11544,"line_start":85,"line_end":85,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":16181,"byte_end":16187,"line_start":251,"line_end":251,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":16460,"byte_end":16466,"line_start":264,"line_end":264,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":28163,"byte_end":28176,"line_start":35,"line_end":35,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":28441,"byte_end":28454,"line_start":47,"line_end":47,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32581,"byte_end":32591,"line_start":131,"line_end":131,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32868,"byte_end":32878,"line_start":145,"line_end":145,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32981,"byte_end":32987,"line_start":151,"line_end":151,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":33243,"byte_end":33251,"line_start":164,"line_end":164,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":33466,"byte_end":33471,"line_start":174,"line_end":174,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":33608,"byte_end":33612,"line_start":180,"line_end":180,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":33735,"byte_end":33740,"line_start":186,"line_end":186,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":33890,"byte_end":33897,"line_start":192,"line_end":192,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":34089,"byte_end":34102,"line_start":201,"line_end":201,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":34273,"byte_end":34280,"line_start":210,"line_end":210,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":34537,"byte_end":34543,"line_start":221,"line_end":221,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":34926,"byte_end":34932,"line_start":238,"line_end":238,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":35064,"byte_end":35067,"line_start":244,"line_end":244,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":35374,"byte_end":35379,"line_start":255,"line_end":255,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":35680,"byte_end":35688,"line_start":266,"line_end":266,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":35807,"byte_end":35812,"line_start":272,"line_end":272,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":36423,"byte_end":36437,"line_start":296,"line_end":296,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":38006,"byte_end":38009,"line_start":351,"line_end":351,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":38146,"byte_end":38149,"line_start":357,"line_end":357,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":38679,"byte_end":38688,"line_start":379,"line_end":379,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":38852,"byte_end":38862,"line_start":387,"line_end":387,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":45180,"byte_end":45186,"line_start":83,"line_end":83,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":45628,"byte_end":45641,"line_start":106,"line_end":106,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":46245,"byte_end":46254,"line_start":128,"line_end":128,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":47226,"byte_end":47244,"line_start":163,"line_end":163,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":47617,"byte_end":47635,"line_start":183,"line_end":183,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":48114,"byte_end":48132,"line_start":200,"line_end":200,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":48516,"byte_end":48534,"line_start":211,"line_end":211,"column_start":34,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":49692,"byte_end":49702,"line_start":253,"line_end":253,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":503},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26532,"byte_end":26538,"line_start":104,"line_end":104,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26881,"byte_end":26894,"line_start":122,"line_end":122,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","byte_start":1677,"byte_end":1681,"line_start":58,"line_end":58,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":28}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","byte_start":1691,"byte_end":1698,"line_start":59,"line_end":59,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":60}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":9406,"byte_end":9415,"line_start":13,"line_end":13,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":90}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/lib.rs","byte_start":1708,"byte_end":1716,"line_start":60,"line_end":60,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":198}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/error.rs","byte_start":5558,"byte_end":5563,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/error.rs","byte_start":5759,"byte_end":5764,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":534},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/error.rs","byte_start":5883,"byte_end":5888,"line_start":25,"line_end":25,"column_start":19,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":534},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","byte_start":16980,"byte_end":17000,"line_start":13,"line_end":13,"column_start":6,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","byte_start":17123,"byte_end":17143,"line_start":17,"line_end":17,"column_start":23,"column_end":43},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":538},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","byte_start":17290,"byte_end":17310,"line_start":23,"line_end":23,"column_start":23,"column_end":43},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":538},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/rejection.rs","byte_start":17448,"byte_end":17468,"line_start":29,"line_end":29,"column_start":28,"column_end":48},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":538},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/request_parts.rs","byte_start":18823,"byte_end":18830,"line_start":9,"line_end":9,"column_start":28,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":22,"index":1361},"to":{"krate":0,"index":1062}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/request_parts.rs","byte_start":19419,"byte_end":19425,"line_start":33,"line_end":33,"column_start":28,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":22,"index":3009},"to":{"krate":0,"index":1062}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/request_parts.rs","byte_start":19653,"byte_end":19656,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":22,"index":3227},"to":{"krate":0,"index":1062}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/request_parts.rs","byte_start":19881,"byte_end":19888,"line_start":57,"line_end":57,"column_start":28,"column_end":35},"kind":{"Impl":{"id":10}},"from":{"krate":22,"index":3283},"to":{"krate":0,"index":1062}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/request_parts.rs","byte_start":20314,"byte_end":20323,"line_start":74,"line_end":74,"column_start":28,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":22,"index":2392},"to":{"krate":0,"index":1062}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/request_parts.rs","byte_start":20552,"byte_end":20557,"line_start":86,"line_end":86,"column_start":28,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":20,"index":526},"to":{"krate":0,"index":1062}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/request_parts.rs","byte_start":20999,"byte_end":21005,"line_start":106,"line_end":106,"column_start":28,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":1062}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/request_parts.rs","byte_start":21566,"byte_end":21571,"line_start":129,"line_end":129,"column_start":43,"column_end":48},"kind":{"Impl":{"id":14}},"from":{"krate":22,"index":1365},"to":{"krate":0,"index":1062}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":10889,"byte_end":10894,"line_start":63,"line_end":63,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":1062}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":11532,"byte_end":11544,"line_start":85,"line_end":85,"column_start":9,"column_end":21},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":16181,"byte_end":16187,"line_start":251,"line_end":251,"column_start":31,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":2,"index":46286},"to":{"krate":0,"index":1062}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/extract/mod.rs","byte_start":16460,"byte_end":16466,"line_start":264,"line_end":264,"column_start":31,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":2,"index":46413},"to":{"krate":0,"index":1062}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":28163,"byte_end":28176,"line_start":35,"line_end":35,"column_start":45,"column_end":58},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1095},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/append_headers.rs","byte_start":28441,"byte_end":28454,"line_start":47,"line_end":47,"column_start":50,"column_end":63},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1095},"to":{"krate":0,"index":462}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32581,"byte_end":32591,"line_start":131,"line_end":131,"column_start":23,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":22,"index":3102},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32868,"byte_end":32878,"line_start":145,"line_end":145,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":2,"index":37693},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":32981,"byte_end":32987,"line_start":151,"line_end":151,"column_start":29,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":2,"index":46413},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":33243,"byte_end":33251,"line_start":164,"line_end":164,"column_start":26,"column_end":34},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":522},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":33466,"byte_end":33471,"line_start":174,"line_end":174,"column_start":39,"column_end":44},"kind":{"Impl":{"id":24}},"from":{"krate":22,"index":1498},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":33608,"byte_end":33612,"line_start":180,"line_end":180,"column_start":23,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":21,"index":534},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":33735,"byte_end":33740,"line_start":186,"line_end":186,"column_start":23,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":21,"index":37},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":33890,"byte_end":33897,"line_start":192,"line_end":192,"column_start":50,"column_end":57},"kind":{"Impl":{"id":27}},"from":{"krate":21,"index":246},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":34089,"byte_end":34102,"line_start":201,"line_end":201,"column_start":50,"column_end":63},"kind":{"Impl":{"id":28}},"from":{"krate":21,"index":250},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":34273,"byte_end":34280,"line_start":210,"line_end":210,"column_start":29,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":21,"index":651},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":34537,"byte_end":34543,"line_start":221,"line_end":221,"column_start":32,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":21,"index":703},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":34926,"byte_end":34932,"line_start":238,"line_end":238,"column_start":23,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":35064,"byte_end":35067,"line_start":244,"line_end":244,"column_start":23,"column_end":26},"kind":{"Impl":{"id":32}},"from":{"krate":5,"index":678},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":35374,"byte_end":35379,"line_start":255,"line_end":255,"column_start":23,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":20,"index":526},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":35680,"byte_end":35688,"line_start":266,"line_end":266,"column_start":23,"column_end":31},"kind":{"Impl":{"id":34}},"from":{"krate":20,"index":786},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":35807,"byte_end":35812,"line_start":272,"line_end":272,"column_start":29,"column_end":34},"kind":{"Impl":{"id":35}},"from":{"krate":20,"index":1233},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":36423,"byte_end":36437,"line_start":296,"line_end":296,"column_start":32,"column_end":46},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":386},"to":{"krate":21,"index":470}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":38006,"byte_end":38009,"line_start":351,"line_end":351,"column_start":23,"column_end":26},"kind":{"Impl":{"id":37}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":38146,"byte_end":38149,"line_start":357,"line_end":357,"column_start":23,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":5,"index":678},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":38679,"byte_end":38688,"line_start":379,"line_end":379,"column_start":23,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":22,"index":2392},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response.rs","byte_start":38852,"byte_end":38862,"line_start":387,"line_end":387,"column_start":23,"column_end":33},"kind":{"Impl":{"id":40}},"from":{"krate":22,"index":3357},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":45180,"byte_end":45186,"line_start":83,"line_end":83,"column_start":31,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":2,"index":46286},"to":{"krate":0,"index":462}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":45628,"byte_end":45641,"line_start":106,"line_end":106,"column_start":6,"column_end":19},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":46245,"byte_end":46254,"line_start":128,"line_end":128,"column_start":28,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":22,"index":2392},"to":{"krate":0,"index":462}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":47226,"byte_end":47244,"line_start":163,"line_end":163,"column_start":12,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":47617,"byte_end":47635,"line_start":183,"line_end":183,"column_start":29,"column_end":47},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1848},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":48114,"byte_end":48132,"line_start":200,"line_end":200,"column_start":29,"column_end":47},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1848},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":48516,"byte_end":48534,"line_start":211,"line_end":211,"column_start":34,"column_end":52},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1848},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/into_response_parts.rs","byte_start":49692,"byte_end":49702,"line_start":253,"line_end":253,"column_start":28,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":22,"index":3357},"to":{"krate":0,"index":462}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26532,"byte_end":26538,"line_start":104,"line_end":104,"column_start":26,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":524},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-core-0.2.4/src/response/mod.rs","byte_start":26881,"byte_end":26894,"line_start":122,"line_end":122,"column_start":21,"column_end":34},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2053},"to":{"krate":2,"index":2963}}]}